http://old-www.cs.dartmouth.edu/~cs50/data/tse/wikipedia/Algorithm.html
3
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">

<!-- Mirrored from en.wikipedia.org/wiki/Algorithm by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 29 Mar 2014 23:54:44 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="UTF-8" />
<title>Algorithm - Wikipedia, the free encyclopedia</title>
<meta http-equiv="X-UA-Compatible" content="IE=EDGE" />
<meta name="generator" content="MediaWiki 1.23wmf19" />
<link rel="alternate" href="http://en.wikipedia.org/wiki/android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Algorithm" />
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit" />
<link rel="edit" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit" />
<link rel="apple-touch-icon" href="http://bits.wikimedia.org/apple-touch/wikipedia.png" />
<link rel="shortcut icon" href="http://bits.wikimedia.org/favicon/wikipedia.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://en.wikipedia.org/w/opensearch_desc.php" title="Wikipedia (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://en.wikipedia.org/w/api.php?action=rsd" />
<link rel="copyright" href="http://creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="canonical" href="Algorithm.html" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cteahouse%7Cext.geshi.local%7Cext.rtlcite%2Cwikihiero%7Cext.uls.nojs%7Cext.visualEditor.viewPageTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.ui.button%7Cskins.common.interface%7Cskins.vector.styles&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: enwiki:resourceloader:filter:minify-css:7:3904d24a08aa08f6a68dc338f9be277e */</style>

<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Algorithm","wgTitle":"Algorithm","wgCurRevisionId":601889939,"wgRevisionId":601889939,"wgArticleId":775,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["All articles with broken links to citations","All articles with dead external links","Articles with dead external links from March 2010","Use mdy dates from June 2013","Articles including recorded pronunciations","Articles containing Persian-language text","CS1 errors: dates","Articles with Open Directory Project links","Algorithms","Articles with example pseudocode","Mathematical logic","Theoretical computer science"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Algorithm","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":false,"previewDialog":false,"publish":false,"toc":false},"wgBetaFeaturesFeatures":[],"wgVisualEditor":{"isPageWatched":false,"magnifyClipIconURL":"//bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png","pageLanguageCode":"en","pageLanguageDir":"ltr","svgMaxSize":2048},"wikilove-recipient":"","wikilove-anon":0,"wgGuidedTourHelpGuiderUrl":"Help:Guided tours/guider","wgFlowTermsOfUseEdit":"By saving changes, you agree to our \u003Ca class=\"external text\" href=\"//wikimediafoundation.org/wiki/Terms_of_use\"\u003ETerms of Use\u003C/a\u003E and agree to irrevocably release your text under the \u003Ca rel=\"nofollow\" class=\"external text\" href=\"//creativecommons.org/licenses/by-sa/3.0\"\u003ECC BY-SA 3.0 License\u003C/a\u003E and \u003Ca class=\"external text\" href=\"//en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License\"\u003EGFDL\u003C/a\u003E","wgULSAcceptLanguageList":[],"wgULSCurrentAutonym":"English","wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgNoticeProject":"wikipedia","wgWikibaseItemId":"Q8366"});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"editfont":"default","editondblclick":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nickname":"","norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"showhiddencats":false,"shownumberswatching":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":4,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,
"wllimit":250,"useeditwarning":1,"prefershttps":1,"flaggedrevssimpleui":1,"flaggedrevsstable":0,"flaggedrevseditdiffs":true,"flaggedrevsviewdiffs":false,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"visualeditor-enable":0,"visualeditor-enable-experimental":0,"visualeditor-betatempdisable":0,"wikilove-enabled":1,"echo-subscriptions-web-page-review":true,"echo-subscriptions-email-page-review":false,"ep_showtoplink":false,"ep_bulkdelorgs":false,"ep_bulkdelcourses":true,"ep_showdyk":true,"echo-subscriptions-web-education-program":true,"echo-subscriptions-email-education-program":false,"echo-notify-show-link":true,"echo-show-alert":true,"echo-email-frequency":0,"echo-email-format":"html","echo-subscriptions-email-system":true,"echo-subscriptions-web-system":true,"echo-subscriptions-email-other":false,"echo-subscriptions-web-other":true,"echo-subscriptions-email-edit-user-talk":false,"echo-subscriptions-web-edit-user-talk":true,"echo-subscriptions-email-reverted":false,
"echo-subscriptions-web-reverted":true,"echo-subscriptions-email-article-linked":false,"echo-subscriptions-web-article-linked":false,"echo-subscriptions-email-mention":false,"echo-subscriptions-web-mention":true,"echo-subscriptions-web-edit-thank":true,"echo-subscriptions-email-edit-thank":false,"echo-subscriptions-web-flow-discussion":true,"echo-subscriptions-email-flow-discussion":false,"gettingstarted-task-toolbar-show-intro":true,"uls-preferences":"","language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"searchNs100":false,"searchNs101":false,"searchNs108":false,
"searchNs109":false,"searchNs118":false,"searchNs119":false,"searchNs446":false,"searchNs447":false,"searchNs710":false,"searchNs711":false,"searchNs828":false,"searchNs829":false,"gadget-teahouse":1,"gadget-ReferenceTooltips":1,"gadget-DRN-wizard":1,"gadget-charinsert":1,"gadget-mySandbox":1,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: enwiki:resourceloader:filter:minify-js:7:868e43d07ede2616d2d1dc3507cd8145 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","ext.centralauth.centralautologin","skins.vector.compactPersonalBar.defaultTracking","ext.visualEditor.viewPageTarget.init","ext.uls.init","ext.uls.interface","wikibase.client.init","ext.centralNotice.bannerController","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-text {line-height: normal;}
.source-text li, .source-text pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for text
 * CSS class: source-text, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.text.source-text .de1, .text.source-text .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.text.source-text  {font-family:monospace;}
.text.source-text .imp {font-weight: bold; color: red;}
.text.source-text li, .text.source-text .li1 {font-weight: normal; vertical-align:top;}
.text.source-text .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.text.source-text .li2 {font-weight: bold; vertical-align:top;}
.text.source-text .ln-xtra, .text.source-text li.ln-xtra, .text.source-text div.ln-xtra {background-color: #ffc;}
.text.source-text span.xtra { display:block; }

/*]]>*/
</style><link rel="dns-prefetch" href="http://meta.wikimedia.org/" /><!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/static-1.23wmf19/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Algorithm skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<div id="siteNotice"><!-- CentralNotice --></div>
						<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Algorithm</span></h1>
						<div id="bodyContent">
								<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-navigation">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="thumb tright">
<div class="thumbinner" style="width:222px;"><a href="http://en.wikipedia.org/wiki/File:Euclid_flowchart_1.png" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Euclid_flowchart_1.png/220px-Euclid_flowchart_1.png" width="220" height="495" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/d/d3/Euclid_flowchart_1.png 1.5x, //upload.wikimedia.org/wikipedia/commons/d/d3/Euclid_flowchart_1.png 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Euclid_flowchart_1.png" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<a href="http://en.wikipedia.org/wiki/Flow_chart" title="Flow chart" class="mw-redirect">Flow chart</a> of an algorithm (<a href="http://en.wikipedia.org/wiki/Euclid%27s_algorithm" title="Euclid's algorithm" class="mw-redirect">Euclid's algorithm</a>) for calculating the greatest common divisor (g.c.d.) of two numbers <i>a</i> and <i>b</i> in locations named A and B. The algorithm proceeds by successive subtractions in two loops: IF the test B ≥ A yields "yes" (or true) (more accurately the <i>number</i> <i>b</i> in location B is greater than or equal to the <i>number</i> <i>a</i> in location A) THEN, the algorithm specifies B ← B − A (meaning the number <i>b</i> − <i>a</i> replaces the old <i>b</i>). Similarly, IF A &gt; B, THEN A ← A − B. The process terminates when (the contents of) B is 0, yielding the g.c.d. in A. (Algorithm derived from Scott 2009:13; symbols and drawing style from Tausworthe 1977).</div>
</div>
</div>
<p>In <a href="http://en.wikipedia.org/wiki/Mathematics" title="Mathematics">mathematics</a> and <a href="Computer_science.html" title="Computer science">computer science</a>, an <b>algorithm</b> (<span class="nowrap"><span class="noexcerpt"><a href="http://upload.wikimedia.org/wikipedia/commons/7/7f/En-us-algorithm.ogg" title="Listen"><img alt="Listen" src="http://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/Speakerlink-new.svg/11px-Speakerlink-new.svg.png" width="11" height="11" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/3/3b/Speakerlink-new.svg/17px-Speakerlink-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/3/3b/Speakerlink-new.svg/22px-Speakerlink-new.svg.png 2x" /></a><sup><span style="color: #00e; font: bold 80% sans-serif; padding: 0 .1em;" class="IPA"><a href="http://en.wikipedia.org/wiki/File:En-us-algorithm.ogg" title="File:En-us-algorithm.ogg">i</a></span></sup></span><span title="Representation in the International Phonetic Alphabet (IPA)" class="IPA"><a href="http://en.wikipedia.org/wiki/Help:IPA_for_English" title="Help:IPA for English">/</a></span><span class="IPA nopopups"><a href="http://en.wikipedia.org/wiki/Help:IPA_for_English#Key" title="Help:IPA for English"><span title="/ˈ/ primary stress follows" style="border-bottom:1px dotted">ˈ</span></a></span><span class="IPA nopopups"><a href="http://en.wikipedia.org/wiki/Help:IPA_for_English#Key" title="Help:IPA for English"><span title="/æ/ short 'a' in 'bad'" style="border-bottom:1px dotted">æ</span></a></span><span class="IPA nopopups"><a href="http://en.wikipedia.org/wiki/Help:IPA_for_English#Key" title="Help:IPA for English"><span title="'l' in 'lie'" style="border-bottom:1px dotted">l</span></a></span><span class="IPA nopopups"><a href="http://en.wikipedia.org/wiki/Help:IPA_for_English#Key" title="Help:IPA for English"><span title="'g' in 'guy'" style="border-bottom:1px dotted">ɡ</span></a></span><span class="IPA nopopups"><a href="http://en.wikipedia.org/wiki/Help:IPA_for_English#Key" title="Help:IPA for English"><span title="/ə/ 'a' in 'about'" style="border-bottom:1px dotted">ə</span></a></span><span class="IPA nopopups"><a href="http://en.wikipedia.org/wiki/Help:IPA_for_English#Key" title="Help:IPA for English"><span title="'r' in 'rye'" style="border-bottom:1px dotted">r</span></a></span><span class="IPA nopopups"><a href="http://en.wikipedia.org/wiki/Help:IPA_for_English#Key" title="Help:IPA for English"><span title="/ɪ/ short 'i' in 'bid'" style="border-bottom:1px dotted">ɪ</span></a></span><span class="IPA nopopups"><a href="http://en.wikipedia.org/wiki/Help:IPA_for_English#Key" title="Help:IPA for English"><span title="/ð/ 'th' in 'thy'" style="border-bottom:1px dotted">ð</span></a></span><span class="IPA nopopups"><a href="http://en.wikipedia.org/wiki/Help:IPA_for_English#Key" title="Help:IPA for English"><span title="/əm/ 'm' in 'rhythm'" style="border-bottom:1px dotted">əm</span></a></span><span title="Representation in the International Phonetic Alphabet (IPA)" class="IPA"><a href="http://en.wikipedia.org/wiki/Help:IPA_for_English" title="Help:IPA for English">/</a></span></span> <span title="English pronunciation respelling" class="Unicode"><a href="http://en.wikipedia.org/wiki/Wikipedia:Pronunciation_respelling_key" title="Wikipedia:Pronunciation respelling key"><i><b><span class="smallcaps"><span class="SMALLCAPS" style="FONT-VARIANT:SMALL-CAPS;"><span class="NOCAPS" style="TEXT-TRANSFORM:LOWERCASE;">AL</span></span></span></b>-gə-ri-dhəm</i></a></span>) is a step-by-step procedure for calculations. Algorithms are used for <a href="http://en.wikipedia.org/wiki/Calculation" title="Calculation">calculation</a>, <a href="http://en.wikipedia.org/wiki/Data_processing" title="Data processing">data processing</a>, and <a href="Automated_reasoning.html" title="Automated reasoning">automated reasoning</a>.</p>
<p>An algorithm is an <a href="http://en.wikipedia.org/wiki/Effective_method" title="Effective method">effective method</a> expressed as a <a href="http://en.wiktionary.org/wiki/finite" class="extiw" title="wikt:finite">finite</a> list<sup id="cite_ref-1" class="reference"><a href="#cite_note-1"><span>[</span>1<span>]</span></a></sup> of well-defined instructions<sup id="cite_ref-2" class="reference"><a href="#cite_note-2"><span>[</span>2<span>]</span></a></sup> for calculating a <a href="http://en.wikipedia.org/wiki/Function_(mathematics)" title="Function (mathematics)">function</a>.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3"><span>[</span>3<span>]</span></a></sup> Starting from an initial state and initial input (perhaps <a href="http://en.wikipedia.org/wiki/Null_string" title="Null string" class="mw-redirect">empty</a>),<sup id="cite_ref-4" class="reference"><a href="#cite_note-4"><span>[</span>4<span>]</span></a></sup> the instructions describe a <a href="Computation.html" title="Computation">computation</a> that, when <a href="http://en.wikipedia.org/wiki/Execution_(computing)" title="Execution (computing)">executed</a>, proceeds through a finite<sup id="cite_ref-5" class="reference"><a href="#cite_note-5"><span>[</span>5<span>]</span></a></sup> number of well-defined successive states, eventually producing "output"<sup id="cite_ref-6" class="reference"><a href="#cite_note-6"><span>[</span>6<span>]</span></a></sup> and terminating at a final ending state. The transition from one state to the next is not necessarily <a href="http://en.wikipedia.org/wiki/Deterministic" title="Deterministic" class="mw-redirect">deterministic</a>; some algorithms, known as <a href="http://en.wikipedia.org/wiki/Randomized_algorithms" title="Randomized algorithms" class="mw-redirect">randomized algorithms</a>, incorporate random input.<sup id="cite_ref-7" class="reference"><a href="#cite_note-7"><span>[</span>7<span>]</span></a></sup></p>
<p>Though <a href="http://en.wikipedia.org/wiki/Al-Khwārizmī" title="Al-Khwārizmī" class="mw-redirect">al-Khwārizmī</a>'s <i><a href="http://en.wikipedia.org/wiki/Algorism" title="Algorism">algorism</a></i> referred to the rules of performing arithmetic using <a href="http://en.wikipedia.org/wiki/Hindu–Arabic_numeral" title="Hindu–Arabic numeral" class="mw-redirect">Hindu–Arabic numerals</a> and the systematic solution of linear and <a href="http://en.wikipedia.org/wiki/Quadratic_equations" title="Quadratic equations" class="mw-redirect">quadratic equations</a>, a partial formalization of what would become the modern <i>algorithm</i> began with attempts to solve the <a href="http://en.wikipedia.org/wiki/Entscheidungsproblem" title="Entscheidungsproblem">Entscheidungsproblem</a> (the "decision problem") posed by <a href="http://en.wikipedia.org/wiki/David_Hilbert" title="David Hilbert">David Hilbert</a> in 1928. Subsequent formalizations were framed as attempts to define "<a href="http://en.wikipedia.org/wiki/Effective_calculability" title="Effective calculability" class="mw-redirect">effective calculability</a>"<sup id="cite_ref-8" class="reference"><a href="#cite_note-8"><span>[</span>8<span>]</span></a></sup> or "effective method";<sup id="cite_ref-9" class="reference"><a href="#cite_note-9"><span>[</span>9<span>]</span></a></sup> those formalizations included the <a href="Kurt_G%c3%b6del.html" title="Kurt Gödel">Gödel</a>–<a href="http://en.wikipedia.org/wiki/Jacques_Herbrand" title="Jacques Herbrand">Herbrand</a>–<a href="http://en.wikipedia.org/wiki/Stephen_Cole_Kleene" title="Stephen Cole Kleene">Kleene</a> <a href="http://en.wikipedia.org/wiki/Recursion_(computer_science)" title="Recursion (computer science)">recursive functions</a> of 1930, 1934 and 1935, <a href="http://en.wikipedia.org/wiki/Alonzo_Church" title="Alonzo Church">Alonzo Church</a>'s <a href="http://en.wikipedia.org/wiki/Lambda_calculus" title="Lambda calculus">lambda calculus</a> of 1936, <a href="http://en.wikipedia.org/wiki/Emil_Post" title="Emil Post" class="mw-redirect">Emil Post</a>'s "<a href="http://en.wikipedia.org/wiki/Formulation_1" title="Formulation 1" class="mw-redirect">Formulation 1</a>" of 1936, and <a href="Alan_Turing.html" title="Alan Turing">Alan Turing</a>'s <a href="http://en.wikipedia.org/wiki/Turing_machines" title="Turing machines" class="mw-redirect">Turing machines</a> of 1936–7 and 1939. Giving a formal definition of algorithms, corresponding to the intuitive notion, remains a challenging problem.<sup id="cite_ref-10" class="reference"><a href="#cite_note-10"><span>[</span>10<span>]</span></a></sup></p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Informal_definition"><span class="tocnumber">1</span> <span class="toctext">Informal definition</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Formalization"><span class="tocnumber">2</span> <span class="toctext">Formalization</span></a>
<ul>
<li class="toclevel-2 tocsection-3"><a href="#Expressing_algorithms"><span class="tocnumber">2.1</span> <span class="toctext">Expressing algorithms</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-4"><a href="#Implementation"><span class="tocnumber">3</span> <span class="toctext">Implementation</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Computer_algorithms"><span class="tocnumber">4</span> <span class="toctext">Computer algorithms</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#Examples"><span class="tocnumber">5</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="#Algorithm_example"><span class="tocnumber">5.1</span> <span class="toctext">Algorithm example</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Euclid.E2.80.99s_algorithm"><span class="tocnumber">5.2</span> <span class="toctext">Euclid’s algorithm</span></a>
<ul>
<li class="toclevel-3 tocsection-9"><a href="#Computer_language_for_Euclid.27s_algorithm"><span class="tocnumber">5.2.1</span> <span class="toctext">Computer language for Euclid's algorithm</span></a></li>
<li class="toclevel-3 tocsection-10"><a href="#An_inelegant_program_for_Euclid.27s_algorithm"><span class="tocnumber">5.2.2</span> <span class="toctext">An inelegant program for Euclid's algorithm</span></a></li>
<li class="toclevel-3 tocsection-11"><a href="#An_elegant_program_for_Euclid.27s_algorithm"><span class="tocnumber">5.2.3</span> <span class="toctext">An elegant program for Euclid's algorithm</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-12"><a href="#Testing_the_Euclid_algorithms"><span class="tocnumber">5.3</span> <span class="toctext">Testing the Euclid algorithms</span></a></li>
<li class="toclevel-2 tocsection-13"><a href="#Measuring_and_improving_the_Euclid_algorithms"><span class="tocnumber">5.4</span> <span class="toctext">Measuring and improving the Euclid algorithms</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-14"><a href="#Algorithmic_analysis"><span class="tocnumber">6</span> <span class="toctext">Algorithmic analysis</span></a>
<ul>
<li class="toclevel-2 tocsection-15"><a href="#Formal_versus_empirical"><span class="tocnumber">6.1</span> <span class="toctext">Formal versus empirical</span></a></li>
<li class="toclevel-2 tocsection-16"><a href="#Execution_efficiency"><span class="tocnumber">6.2</span> <span class="toctext">Execution efficiency</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-17"><a href="#Classification"><span class="tocnumber">7</span> <span class="toctext">Classification</span></a>
<ul>
<li class="toclevel-2 tocsection-18"><a href="#By_implementation"><span class="tocnumber">7.1</span> <span class="toctext">By implementation</span></a></li>
<li class="toclevel-2 tocsection-19"><a href="#By_design_paradigm"><span class="tocnumber">7.2</span> <span class="toctext">By design paradigm</span></a></li>
<li class="toclevel-2 tocsection-20"><a href="#By_field_of_study"><span class="tocnumber">7.3</span> <span class="toctext">By field of study</span></a></li>
<li class="toclevel-2 tocsection-21"><a href="#By_complexity"><span class="tocnumber">7.4</span> <span class="toctext">By complexity</span></a></li>
<li class="toclevel-2 tocsection-22"><a href="#By_evaluative_type"><span class="tocnumber">7.5</span> <span class="toctext">By evaluative type</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-23"><a href="#Continuous_algorithms"><span class="tocnumber">8</span> <span class="toctext">Continuous algorithms</span></a></li>
<li class="toclevel-1 tocsection-24"><a href="#Legal_issues"><span class="tocnumber">9</span> <span class="toctext">Legal issues</span></a></li>
<li class="toclevel-1 tocsection-25"><a href="#Etymology"><span class="tocnumber">10</span> <span class="toctext">Etymology</span></a></li>
<li class="toclevel-1 tocsection-26"><a href="#History:_Development_of_the_notion_of_.22algorithm.22"><span class="tocnumber">11</span> <span class="toctext">History: Development of the notion of "algorithm"</span></a>
<ul>
<li class="toclevel-2 tocsection-27"><a href="#Origin"><span class="tocnumber">11.1</span> <span class="toctext">Origin</span></a></li>
<li class="toclevel-2 tocsection-28"><a href="#Discrete_and_distinguishable_symbols"><span class="tocnumber">11.2</span> <span class="toctext">Discrete and distinguishable symbols</span></a></li>
<li class="toclevel-2 tocsection-29"><a href="#Manipulation_of_symbols_as_.22place_holders.22_for_numbers:_algebra"><span class="tocnumber">11.3</span> <span class="toctext">Manipulation of symbols as "place holders" for numbers: algebra</span></a></li>
<li class="toclevel-2 tocsection-30"><a href="#Mechanical_contrivances_with_discrete_states"><span class="tocnumber">11.4</span> <span class="toctext">Mechanical contrivances with discrete states</span></a></li>
<li class="toclevel-2 tocsection-31"><a href="#Mathematics_during_the_19th_century_up_to_the_mid-20th_century"><span class="tocnumber">11.5</span> <span class="toctext">Mathematics during the 19th century up to the mid-20th century</span></a></li>
<li class="toclevel-2 tocsection-32"><a href="#Emil_Post_.281936.29_and_Alan_Turing_.281936.E2.80.9337.2C_1939.29"><span class="tocnumber">11.6</span> <span class="toctext">Emil Post (1936) and Alan Turing (1936–37, 1939)</span></a></li>
<li class="toclevel-2 tocsection-33"><a href="#J._B._Rosser_.281939.29_and_S._C._Kleene_.281943.29"><span class="tocnumber">11.7</span> <span class="toctext">J. B. Rosser (1939) and S. C. Kleene (1943)</span></a></li>
<li class="toclevel-2 tocsection-34"><a href="#History_after_1950"><span class="tocnumber">11.8</span> <span class="toctext">History after 1950</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-35"><a href="#See_also"><span class="tocnumber">12</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-36"><a href="#Notes"><span class="tocnumber">13</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-37"><a href="#References"><span class="tocnumber">14</span> <span class="toctext">References</span></a>
<ul>
<li class="toclevel-2 tocsection-38"><a href="#Secondary_references"><span class="tocnumber">14.1</span> <span class="toctext">Secondary references</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-39"><a href="#Further_reading"><span class="tocnumber">15</span> <span class="toctext">Further reading</span></a></li>
<li class="toclevel-1 tocsection-40"><a href="#External_links"><span class="tocnumber">16</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Informal_definition">Informal definition</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=1" title="Edit section: Informal definition">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="dablink">For a detailed presentation of the various points of view around the definition of "algorithm", see <a href="http://en.wikipedia.org/wiki/Algorithm_characterizations" title="Algorithm characterizations">Algorithm characterizations</a>.  For examples of simple addition algorithms specified in the detailed manner described in Algorithm characterizations, see <a href="http://en.wikipedia.org/wiki/Algorithm_examples" title="Algorithm examples">Algorithm examples</a>.</div>
<p>While there is no generally accepted <i>formal</i> definition of "algorithm," an informal definition could be "a set of rules that precisely defines a sequence of operations."<sup id="cite_ref-11" class="reference"><a href="#cite_note-11"><span>[</span>11<span>]</span></a></sup> which would include all computer programs, including programs that do not perform numeric calculations. For some people, a program is only an algorithm if it stops eventually.<sup id="cite_ref-12" class="reference"><a href="#cite_note-12"><span>[</span>12<span>]</span></a></sup> For others, a program is only an algorithm if it performs a number of calculation steps.</p>
<p>A prototypical example of an algorithm is <a href="http://en.wikipedia.org/wiki/Euclid%27s_algorithm" title="Euclid's algorithm" class="mw-redirect">Euclid's algorithm</a> to determine the maximum common divisor of two integers; an example (there are others) is described by the <a href="http://en.wikipedia.org/wiki/Flow_chart" title="Flow chart" class="mw-redirect">flow chart</a> above and as an example in a later section.</p>
<p><a href="#CITEREFBoolosJeffrey1974.2C_1999">Boolos &amp; Jeffrey (1974, 1999</a>) offer an informal meaning of the word in the following quotation:</p>
<blockquote>
<p>No human being can write fast enough, or long enough, or small enough† ( †"smaller and smaller without limit ...you'd be trying to write on molecules, on atoms, on electrons") to list all members of an enumerably infinite set by writing out their names, one after another, in some notation. But humans can do something equally useful, in the case of certain enumerably infinite sets: They can give <i>explicit instructions for determining the <b>n</b>th member of the set</i>, for arbitrary finite <i>n</i>. Such instructions are to be given quite explicitly, in a form in which <i>they could be followed by a computing machine</i>, or by a <i>human who is capable of carrying out only very elementary operations on symbols.</i><sup id="cite_ref-13" class="reference"><a href="#cite_note-13"><span>[</span>13<span>]</span></a></sup></p>
</blockquote>
<p>The term "enumerably infinite" means "countable using integers perhaps extending to infinity." Thus, Boolos and Jeffrey are saying that an algorithm implies instructions for a process that "creates" output integers from an <i>arbitrary</i> "input" integer or integers that, in theory, can be chosen from 0 to infinity. Thus an algorithm can be an algebraic equation such as <i>y = m + n</i>—two arbitrary "input variables" <i>m</i> and <i>n</i> that produce an output <i>y</i>. But various authors' attempts to define the notion indicate that the word implies much more than this, something on the order of (for the addition example):</p>
<dl>
<dd>Precise instructions (in language understood by "the computer")<sup id="cite_ref-14" class="reference"><a href="#cite_note-14"><span>[</span>14<span>]</span></a></sup> for a fast, efficient, "good"<sup id="cite_ref-15" class="reference"><a href="#cite_note-15"><span>[</span>15<span>]</span></a></sup> process that specifies the "moves" of "the computer" (machine or human, equipped with the necessary internally contained information and capabilities)<sup id="cite_ref-16" class="reference"><a href="#cite_note-16"><span>[</span>16<span>]</span></a></sup> to find, decode, and then process arbitrary input integers/symbols <i>m</i> and <i>n</i>, symbols <i>+</i> and <i>=</i> ... and "effectively"<sup id="cite_ref-17" class="reference"><a href="#cite_note-17"><span>[</span>17<span>]</span></a></sup> produce, in a "reasonable" time,<sup id="cite_ref-18" class="reference"><a href="#cite_note-18"><span>[</span>18<span>]</span></a></sup> output-integer <i>y</i> at a specified place and in a specified format.</dd>
</dl>
<p>The concept of <i>algorithm</i> is also used to define the notion of <a href="http://en.wikipedia.org/wiki/Decidability_(logic)" title="Decidability (logic)">decidability</a>. That notion is central for explaining how <a href="http://en.wikipedia.org/wiki/Formal_system" title="Formal system">formal systems</a> come into being starting from a small set of <a href="http://en.wikipedia.org/wiki/Axiom" title="Axiom">axioms</a> and rules. In <a href="Logic.html" title="Logic">logic</a>, the time that an algorithm requires to complete cannot be measured, as it is not apparently related with our customary physical dimension. From such uncertainties, that characterize ongoing work, stems the unavailability of a definition of <i>algorithm</i> that suits both concrete (in some sense) and abstract usage of the term.</p>
<h2><span class="mw-headline" id="Formalization">Formalization</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=2" title="Edit section: Formalization">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Algorithms are essential to the way computers process data. Many <a href="http://en.wikipedia.org/wiki/Computer_program" title="Computer program">computer programs</a> contain algorithms that detail the specific instructions a computer should perform (in a specific order) to carry out a specified task, such as calculating employees' paychecks or printing students' report cards. Thus, an algorithm can be considered to be any sequence of operations that can be simulated by a <a href="http://en.wikipedia.org/wiki/Turing_completeness" title="Turing completeness">Turing-complete</a> system. Authors who assert this thesis include Minsky (1967), Savage (1987) and Gurevich (2000):</p>
<blockquote>
<p>Minsky: "But we will also maintain, with Turing . . . that any procedure which could "naturally" be called effective, can in fact be realized by a (simple) machine. Although this may seem extreme, the arguments . . . in its favor are hard to refute".<sup id="cite_ref-Minsky_1967:105_19-0" class="reference"><a href="#cite_note-Minsky_1967:105-19"><span>[</span>19<span>]</span></a></sup></p>
</blockquote>
<blockquote>
<p>Gurevich: "...Turing's informal argument in favor of his thesis justifies a stronger thesis: every algorithm can be simulated by a Turing machine ... according to Savage [1987], an algorithm is a computational process defined by a Turing machine".<sup id="cite_ref-20" class="reference"><a href="#cite_note-20"><span>[</span>20<span>]</span></a></sup></p>
</blockquote>
<p>Typically, when an algorithm is associated with processing information, data is read from an input source, written to an output device, and/or stored for further processing. Stored data is regarded as part of the internal state of the entity performing the algorithm. In practice, the state is stored in one or more <a href="Data_structure.html" title="Data structure">data structures</a>.</p>
<p>For some such computational process, the algorithm must be rigorously defined: specified in the way it applies in all possible circumstances that could arise. That is, any conditional steps must be systematically dealt with, case-by-case; the criteria for each case must be clear (and computable).</p>
<p>Because an algorithm is a precise list of precise steps, the order of computation is always critical to the functioning of the algorithm. Instructions are usually assumed to be listed explicitly, and are described as starting "from the top" and going "down to the bottom", an idea that is described more formally by <i><a href="http://en.wikipedia.org/wiki/Control_flow" title="Control flow">flow of control</a></i>.</p>
<p>So far, this discussion of the formalization of an algorithm has assumed the premises of <a href="Imperative_programming.html" title="Imperative programming">imperative programming</a>. This is the most common conception, and it attempts to describe a task in discrete, "mechanical" means. Unique to this conception of formalized algorithms is the <a href="http://en.wikipedia.org/wiki/Assignment_operation" title="Assignment operation" class="mw-redirect">assignment operation</a>, setting the value of a variable. It derives from the intuition of "<a href="http://en.wikipedia.org/wiki/Memory" title="Memory">memory</a>" as a scratchpad. There is an example below of such an assignment.</p>
<p>For some alternate conceptions of what constitutes an algorithm see <a href="Functional_programming.html" title="Functional programming">functional programming</a> and <a href="Logic_programming.html" title="Logic programming">logic programming</a>.</p>
<h3><span class="mw-headline" id="Expressing_algorithms">Expressing algorithms</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=3" title="Edit section: Expressing algorithms">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Algorithms can be expressed in many kinds of notation, including <a href="Natural_language.html" title="Natural language">natural languages</a>, <a href="Pseudocode.html" title="Pseudocode">pseudocode</a>, <a href="http://en.wikipedia.org/wiki/Flowchart" title="Flowchart">flowcharts</a>, <a href="http://en.wikipedia.org/wiki/DRAKON" title="DRAKON">drakon-charts</a>, <a href="Programming_language.html" title="Programming language">programming languages</a> or <a href="http://en.wikipedia.org/wiki/Control_table" title="Control table">control tables</a> (processed by <a href="Interpreter_(computing).html" title="Interpreter (computing)">interpreters</a>). Natural language expressions of algorithms tend to be verbose and ambiguous, and are rarely used for complex or technical algorithms. Pseudocode, flowcharts, <a href="http://en.wikipedia.org/wiki/DRAKON" title="DRAKON">drakon-charts</a> and control tables are structured ways to express algorithms that avoid many of the ambiguities common in natural language statements. Programming languages are primarily intended for expressing algorithms in a form that can be executed by a computer, but are often used as a way to define or document algorithms.</p>
<p>There is a wide variety of representations possible and one can express a given <a href="Turing_machine.html" title="Turing machine">Turing machine</a> program as a sequence of machine tables (see more at <a href="http://en.wikipedia.org/wiki/Finite_state_machine" title="Finite state machine" class="mw-redirect">finite state machine</a>, <a href="http://en.wikipedia.org/wiki/State_transition_table" title="State transition table">state transition table</a> and <a href="http://en.wikipedia.org/wiki/Control_table" title="Control table">control table</a>), as flowcharts and <a href="http://en.wikipedia.org/wiki/DRAKON" title="DRAKON">drakon-charts</a> (see more at <a href="http://en.wikipedia.org/wiki/State_diagram" title="State diagram">state diagram</a>), or as a form of rudimentary <a href="http://en.wikipedia.org/wiki/Machine_code" title="Machine code">machine code</a> or <a href="http://en.wikipedia.org/wiki/Assembly_code" title="Assembly code" class="mw-redirect">assembly code</a> called "sets of quadruples" (see more at <a href="Turing_machine.html" title="Turing machine">Turing machine</a>).</p>
<p>Representations of algorithms can be classed into three accepted levels of Turing machine description:<sup id="cite_ref-21" class="reference"><a href="#cite_note-21"><span>[</span>21<span>]</span></a></sup></p>
<dl>
<dt>1 High-level description</dt>
<dd>"...prose to describe an algorithm, ignoring the implementation details. At this level we do not need to mention how the machine manages its tape or head."</dd>
<dt>2 Implementation description</dt>
<dd>"...prose used to define the way the Turing machine uses its head and the way that it stores data on its tape. At this level we do not give details of states or transition function."</dd>
<dt>3 Formal description</dt>
<dd>Most detailed, "lowest level", gives the Turing machine's "state table".</dd>
</dl>
<p>For an example of the simple algorithm "Add m+n" described in all three levels, see <a href="http://en.wikipedia.org/wiki/Algorithm_examples" title="Algorithm examples">Algorithm examples</a>.</p>
<h2><span class="mw-headline" id="Implementation">Implementation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=4" title="Edit section: Implementation">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Most algorithms are intended to be implemented as <a href="http://en.wikipedia.org/wiki/Computer_programs" title="Computer programs" class="mw-redirect">computer programs</a>. However, algorithms are also implemented by other means, such as in a biological <a href="http://en.wikipedia.org/wiki/Neural_network" title="Neural network" class="mw-redirect">neural network</a> (for example, the <a href="http://en.wikipedia.org/wiki/Human_brain" title="Human brain">human brain</a> implementing <a href="Arithmetic.html" title="Arithmetic">arithmetic</a> or an insect looking for food), in an <a href="http://en.wikipedia.org/wiki/Electrical_circuit" title="Electrical circuit" class="mw-redirect">electrical circuit</a>, or in a mechanical device.</p>
<h2><span class="mw-headline" id="Computer_algorithms">Computer algorithms</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=5" title="Edit section: Computer algorithms">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="thumb tright">
<div class="thumbinner" style="width:178px;"><a href="http://en.wikipedia.org/wiki/File:Euclid%27s_algorithm_structured_blocks_1.png" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/4/44/Euclid%27s_algorithm_structured_blocks_1.png/176px-Euclid%27s_algorithm_structured_blocks_1.png" width="176" height="319" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/4/44/Euclid%27s_algorithm_structured_blocks_1.png/264px-Euclid%27s_algorithm_structured_blocks_1.png 1.5x, //upload.wikimedia.org/wikipedia/commons/4/44/Euclid%27s_algorithm_structured_blocks_1.png 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Euclid%27s_algorithm_structured_blocks_1.png" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Flowchart examples of the canonical <a href="http://en.wikipedia.org/wiki/Structured_program_theorem" title="Structured program theorem">Böhm-Jacopini structures</a>: the SEQUENCE (rectangles descending the page), the WHILE-DO and the IF-THEN-ELSE. The three structures are made of the primitive conditional GOTO (<tt>IF <i>test</i>=true THEN GOTO step xxx</tt>) (a diamond), the unconditional GOTO (rectangle), various assignment operators (rectangle), and HALT (rectangle). Nesting of these structures inside assignment-blocks result in complex diagrams (cf Tausworthe 1977:100,114).</div>
</div>
</div>
<p>In <a href="http://en.wikipedia.org/wiki/Computer_systems" title="Computer systems" class="mw-redirect">computer systems</a>, an algorithm is basically an instance of <a href="Logic.html" title="Logic">logic</a> written in <a href="Software.html" title="Software">software</a> by software developers to be effective for the intended "target" computer(s) for the target machines to produce <i>output</i> from given <i>input</i> (perhaps null).</p>
<p><i>"Elegant" (compact) programs, "good" (fast) programs</i> : The notion of "simplicity and elegance" appears informally in Knuth and precisely in Chaitin:</p>
<dl>
<dd>Knuth: ". . .we want <i>good</i> algorithms in some loosely defined aesthetic sense. One criterion . . . is the length of time taken to perform the algorithm . . .. Other criteria are adaptability of the algorithm to computers, its simplicity and elegance, etc"<sup id="cite_ref-22" class="reference"><a href="#cite_note-22"><span>[</span>22<span>]</span></a></sup></dd>
</dl>
<dl>
<dd>Chaitin: " . . . a program is 'elegant,' by which I mean that it's the smallest possible program for producing the output that it does"<sup id="cite_ref-23" class="reference"><a href="#cite_note-23"><span>[</span>23<span>]</span></a></sup></dd>
</dl>
<p>Chaitin prefaces his definition with: "I'll show you can't prove that a program is 'elegant'"—such a proof would solve the <a href="http://en.wikipedia.org/wiki/Halting_problem" title="Halting problem">Halting problem</a> (ibid).</p>
<p><i>Algorithm versus function computable by an algorithm</i>: For a given function multiple algorithms may exist. This is true, even without expanding the available instruction set available to the programmer. Rogers observes that "It is . . . important to distinguish between the notion of <i>algorithm</i>, i.e. procedure and the notion of <i>function computable by algorithm</i>, i.e. mapping yielded by procedure. The same function may have several different algorithms".<sup id="cite_ref-24" class="reference"><a href="#cite_note-24"><span>[</span>24<span>]</span></a></sup></p>
<p>Unfortunately there may be a tradeoff between goodness (speed) and elegance (compactness)—an elegant program may take more steps to complete a computation than one less elegant. An example that uses Euclid's algorithm appears below.</p>
<p><i>Computers (and computors), models of computation</i>: A computer (or human "computor"<sup id="cite_ref-25" class="reference"><a href="#cite_note-25"><span>[</span>25<span>]</span></a></sup>) is a restricted type of machine, a "discrete deterministic mechanical device"<sup id="cite_ref-26" class="reference"><a href="#cite_note-26"><span>[</span>26<span>]</span></a></sup> that blindly follows its instructions.<sup id="cite_ref-27" class="reference"><a href="#cite_note-27"><span>[</span>27<span>]</span></a></sup> Melzak's and Lambek's primitive models<sup id="cite_ref-28" class="reference"><a href="#cite_note-28"><span>[</span>28<span>]</span></a></sup> reduced this notion to four elements: (i) discrete, distinguishable <i>locations</i>, (ii) discrete, indistinguishable <i>counters</i><sup id="cite_ref-29" class="reference"><a href="#cite_note-29"><span>[</span>29<span>]</span></a></sup> (iii) an agent, and (iv) a list of instructions that are <i>effective</i> relative to the capability of the agent.<sup id="cite_ref-30" class="reference"><a href="#cite_note-30"><span>[</span>30<span>]</span></a></sup></p>
<p>Minsky describes a more congenial variation of Lambek's "abacus" model in his "Very Simple Bases for <a href="Computability.html" title="Computability">Computability</a>".<sup id="cite_ref-31" class="reference"><a href="#cite_note-31"><span>[</span>31<span>]</span></a></sup> <a href="http://en.wikipedia.org/wiki/Minsky_machine" title="Minsky machine" class="mw-redirect">Minsky's machine</a> proceeds sequentially through its five (or six depending on how one counts) instructions unless either a conditional IF–THEN GOTO or an unconditional GOTO changes program flow out of sequence. Besides HALT, Minsky's machine includes three <i>assignment</i> (replacement, substitution)<sup id="cite_ref-32" class="reference"><a href="#cite_note-32"><span>[</span>32<span>]</span></a></sup> operations: ZERO (e.g. the contents of location replaced by 0: L ← 0), SUCCESSOR (e.g. L ← L+1), and DECREMENT (e.g. L ← L − 1).<sup id="cite_ref-33" class="reference"><a href="#cite_note-33"><span>[</span>33<span>]</span></a></sup> Rarely must a programmer write "code" with such a limited instruction set. But Minsky shows (as do Melzak and Lambek) that his machine is <a href="http://en.wikipedia.org/wiki/Turing_complete" title="Turing complete" class="mw-redirect">Turing complete</a> with only four general <i>types</i> of instructions: conditional GOTO, unconditional GOTO, assignment/replacement/substitution, and HALT.<sup id="cite_ref-34" class="reference"><a href="#cite_note-34"><span>[</span>34<span>]</span></a></sup></p>
<p><i>Simulation of an algorithm: computer (computor) language</i>: Knuth advises the reader that "the best way to learn an algorithm is to try it . . . immediately take pen and paper and work through an example".<sup id="cite_ref-35" class="reference"><a href="#cite_note-35"><span>[</span>35<span>]</span></a></sup> But what about a simulation or execution of the real thing? The programmer must translate the algorithm into a language that the simulator/computer/computor can <i>effectively</i> execute. Stone gives an example of this: when computing the roots of a quadratic equation the computor must know how to take a square root. If they don't then for the algorithm to be effective it must provide a set of rules for extracting a square root.<sup id="cite_ref-36" class="reference"><a href="#cite_note-36"><span>[</span>36<span>]</span></a></sup></p>
<p>This means that the programmer must know a "language" that is effective relative to the target computing agent (computer/computor).</p>
<p>But what model should be used for the simulation? Van Emde Boas observes "even if we base <a href="Computational_complexity_theory.html" title="Computational complexity theory">complexity theory</a> on abstract instead of concrete machines, arbitrariness of the choice of a model remains. It is at this point that the notion of <i>simulation</i> enters".<sup id="cite_ref-37" class="reference"><a href="#cite_note-37"><span>[</span>37<span>]</span></a></sup> When speed is being measured, the instruction set matters. For example, the subprogram in Euclid's algorithm to compute the remainder would execute much faster if the programmer had a "modulus" (division) instruction available rather than just subtraction (or worse: just Minsky's "decrement").</p>
<p><i>Structured programming, canonical structures</i>: Per the <a href="http://en.wikipedia.org/wiki/Church-Turing_thesis" title="Church-Turing thesis" class="mw-redirect">Church-Turing thesis</a> any algorithm can be computed by a model known to be <a href="http://en.wikipedia.org/wiki/Turing_complete" title="Turing complete" class="mw-redirect">Turing complete</a>, and per Minsky's demonstrations Turing completeness requires only four instruction types—conditional GOTO, unconditional GOTO, assignment, HALT. Kemeny and Kurtz observe that while "undisciplined" use of unconditional GOTOs and conditional IF-THEN GOTOs can result in "<a href="http://en.wikipedia.org/wiki/Spaghetti_code" title="Spaghetti code">spaghetti code</a>" a programmer can write structured programs using these instructions; on the other hand "it is also possible, and not too hard, to write badly structured programs in a structured language".<sup id="cite_ref-38" class="reference"><a href="#cite_note-38"><span>[</span>38<span>]</span></a></sup> Tausworthe augments the three <a href="http://en.wikipedia.org/wiki/Structured_program_theorem" title="Structured program theorem">Böhm-Jacopini canonical structures</a>:<sup id="cite_ref-39" class="reference"><a href="#cite_note-39"><span>[</span>39<span>]</span></a></sup> SEQUENCE, IF-THEN-ELSE, and WHILE-DO, with two more: DO-WHILE and CASE.<sup id="cite_ref-40" class="reference"><a href="#cite_note-40"><span>[</span>40<span>]</span></a></sup> An additional benefit of a structured program is that it lends itself to <a href="http://en.wikipedia.org/wiki/Proof_of_correctness" title="Proof of correctness" class="mw-redirect">proofs of correctness</a> using <a href="http://en.wikipedia.org/wiki/Mathematical_induction" title="Mathematical induction">mathematical induction</a>.<sup id="cite_ref-41" class="reference"><a href="#cite_note-41"><span>[</span>41<span>]</span></a></sup></p>
<p><i>Canonical flowchart symbols<sup id="cite_ref-42" class="reference"><a href="#cite_note-42"><span>[</span>42<span>]</span></a></sup></i>: The graphical aide called a <a href="http://en.wikipedia.org/wiki/Flowchart" title="Flowchart">flowchart</a> offers a way to describe and document an algorithm (and a computer program of one). Like program flow of a Minsky machine, a flowchart always starts at the top of a page and proceeds down. Its primary symbols are only 4: the directed arrow showing program flow, the rectangle (SEQUENCE, GOTO), the diamond (IF-THEN-ELSE), and the dot (OR-tie). The Böhm-Jacopini canonical structures are made of these primitive shapes. Sub-structures can "nest" in rectangles but only if a single exit occurs from the superstructure. The symbols and their use to build the canonical structures are shown in the diagram.</p>
<h2><span class="mw-headline" id="Examples">Examples</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=6" title="Edit section: Examples">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="rellink boilerplate further">Further information: <a href="http://en.wikipedia.org/wiki/Algorithm_examples" title="Algorithm examples">Algorithm examples</a></div>
<h3><span class="mw-headline" id="Algorithm_example">Algorithm example</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=7" title="Edit section: Algorithm example">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="thumb tright">
<div class="thumbinner" style="width:222px;"><a href="http://en.wikipedia.org/wiki/File:Sorting_quicksort_anim.gif" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Sorting_quicksort_anim.gif/220px-Sorting_quicksort_anim.gif" width="220" height="168" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/6/6a/Sorting_quicksort_anim.gif 1.5x, //upload.wikimedia.org/wikipedia/commons/6/6a/Sorting_quicksort_anim.gif 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Sorting_quicksort_anim.gif" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
An animation of the <a href="http://en.wikipedia.org/wiki/Quicksort" title="Quicksort">quicksort algorithm</a> sorting an array of randomized values. The red bars mark the pivot element; at the start of the animation, the element farthest to the right hand side is chosen as the pivot.</div>
</div>
</div>
<p>One of the simplest algorithms is to find the largest number in an (unsorted) list of numbers. The solution necessarily requires looking at every number in the list, but only once at each. From this follows a simple algorithm, which can be stated in a high-level description English prose, as:</p>
<p><i>High-level description:</i></p>
<ol>
<li>Assume the first item is largest.</li>
<li>Look at each of the remaining items in the list and if it is larger than the largest item so far, make a note of it.</li>
<li>The last noted item is the largest in the list when the process is complete.</li>
</ol>
<p><i>(Quasi-)formal description:</i> Written in prose but much closer to the high-level language of a computer program, the following is the more formal coding of the algorithm in <a href="Pseudocode.html" title="Pseudocode">pseudocode</a> or <a href="http://en.wikipedia.org/wiki/Pidgin_code" title="Pidgin code">pidgin code</a>:</p>
<div style="border:1px solid #cccccc; background-color:#f8f8f8; padding:4px;">
<pre>
<b>Algorithm</b> LargestNumber
  Input: A non-empty list of numbers <i>L</i>.
  Output: The <i>largest</i> number in the list <i>L</i>.
</pre>
<pre>
  <i>largest</i> ← <i>L</i><sub>0</sub>
  <b>for each</b> <i>item</i> <b>in</b> the list <i>(Length(L)≥1)</i>, <b>do</b>
    <b>if</b> the <i>item</i> &gt; <i>largest</i>, <b>then</b>
      <i>largest</i> ← the <i>item</i>
  <b>return</b> <i>largest</i>
</pre>
<ul>
<li><small>"←" is a shorthand for "changes to". For instance, "<i>largest</i> ← <i>item</i>" means that the value of <i>largest</i> changes to the value of <i>item</i>.</small></li>
<li><small>"<b>return</b>" terminates the algorithm and outputs the value that follows.</small></li>
</ul>
</div>
<h3><span class="mw-headline" id="Euclid.E2.80.99s_algorithm">Euclid’s algorithm</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=8" title="Edit section: Euclid’s algorithm">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="rellink boilerplate further">Further information: <a href="http://en.wikipedia.org/wiki/Euclid_algorithm" title="Euclid algorithm" class="mw-redirect">Euclid algorithm</a></div>
<div class="thumb tleft">
<div class="thumbinner" style="width:252px;"><a href="http://en.wikipedia.org/wiki/File:Euclid%27s_algorithm_Book_VII_Proposition_2_2.png" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Euclid%27s_algorithm_Book_VII_Proposition_2_2.png/250px-Euclid%27s_algorithm_Book_VII_Proposition_2_2.png" width="250" height="263" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/8/89/Euclid%27s_algorithm_Book_VII_Proposition_2_2.png/375px-Euclid%27s_algorithm_Book_VII_Proposition_2_2.png 1.5x, //upload.wikimedia.org/wikipedia/commons/8/89/Euclid%27s_algorithm_Book_VII_Proposition_2_2.png 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Euclid%27s_algorithm_Book_VII_Proposition_2_2.png" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
The example-diagram of Euclid's algorithm from T.L. Heath 1908 with more detail added. Euclid does not go beyond a third measuring and gives no numerical examples. Nicomachus gives the example of 49 and 21: "I subtract the less from the greater; 28 is left; then again I subtract from this the same 21 (for this is possible); 7 is left; I subtract this from 21, 14 is left; from which I again subtract 7 (for this is possible); 7 is left, but 7 cannot be subtracted from 7." Heath comments that, "The last phrase is curious, but the meaning of it is obvious enough, as also the meaning of the phrase about ending 'at one and the same number'."(Heath 1908:300).</div>
</div>
</div>
<p><a href="http://en.wikipedia.org/wiki/Euclid" title="Euclid">Euclid</a>’s algorithm appears as Proposition II in Book VII ("Elementary Number Theory") of his <i><a href="http://en.wikipedia.org/wiki/Euclid%27s_Elements" title="Euclid's Elements">Elements</a></i>.<sup id="cite_ref-43" class="reference"><a href="#cite_note-43"><span>[</span>43<span>]</span></a></sup> Euclid poses the problem: "Given two numbers not prime to one another, to find their greatest common measure". He defines "A number [to be] a multitude composed of units": a counting number, a positive integer not including 0. And to "measure" is to place a shorter measuring length <i>s</i> successively (<i>q</i> times) along longer length <i>l</i> until the remaining portion <i>r</i> is less than the shorter length <i>s</i>.<sup id="cite_ref-44" class="reference"><a href="#cite_note-44"><span>[</span>44<span>]</span></a></sup> In modern words, remainder <i>r = l − q*s</i>, <i>q</i> being the quotient, or remainder <i>r</i> is the "modulus", the integer-fractional part left over after the division.<sup id="cite_ref-45" class="reference"><a href="#cite_note-45"><span>[</span>45<span>]</span></a></sup></p>
<p>For Euclid’s method to succeed, the starting lengths must satisfy two requirements: (i) the lengths must not be 0, AND (ii) the subtraction must be “proper”, a test must guarantee that the smaller of the two numbers is subtracted from the larger (alternately, the two can be equal so their subtraction yields 0).</p>
<p>Euclid's original proof adds a third: the two lengths are not prime to one another. Euclid stipulated this so that he could construct a <a href="http://en.wikipedia.org/wiki/Reductio_ad_absurdum" title="Reductio ad absurdum">reductio ad absurdum</a> proof that the two numbers' common measure is in fact the <i>greatest</i>.<sup id="cite_ref-46" class="reference"><a href="#cite_note-46"><span>[</span>46<span>]</span></a></sup> While Nicomachus' algorithm is the same as Euclid's, when the numbers are prime to one another it yields the number "1" for their common measure. So to be precise the following is really Nicomachus' algorithm.</p>
<div class="thumb tright">
<div class="thumbinner" style="width:352px;"><a href="http://en.wikipedia.org/wiki/File:Euclids-algorithm-example-1599-650.gif" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Euclids-algorithm-example-1599-650.gif/350px-Euclids-algorithm-example-1599-650.gif" width="350" height="210" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/e/e1/Euclids-algorithm-example-1599-650.gif 1.5x, //upload.wikimedia.org/wikipedia/commons/e/e1/Euclids-algorithm-example-1599-650.gif 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Euclids-algorithm-example-1599-650.gif" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
A graphical expression on Euclid's algorithm using example with 1599 and 650.
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="text source-text">
<pre class="de1">
<span class="xtra ln-xtra"> 1599 = 650*2 + 299</span> 650 = 299*2 + 52
 299 = 52*5 + 39
 52 = 39*1 + 13
<span class="xtra ln-xtra"> 39 = 13*3 + 0</span>
</pre></div>
</div>
</div>
</div>
</div>
<h4><span class="mw-headline" id="Computer_language_for_Euclid.27s_algorithm">Computer language for Euclid's algorithm</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=9" title="Edit section: Computer language for Euclid's algorithm">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>Only a few instruction <i>types</i> are required to execute Euclid's algorithm—some logical tests (conditional GOTO), unconditional GOTO, assignment (replacement), and subtraction.</p>
<ul>
<li>A <i>location</i> is symbolized by upper case letter(s), e.g. S, A, etc.</li>
<li>The varying quantity (number) in a location is written in lower case letter(s) and (usually) associated with the location's name. For example, location L at the start might contain the number <i>l</i> = 3009.</li>
</ul>
<h4><span class="mw-headline" id="An_inelegant_program_for_Euclid.27s_algorithm">An inelegant program for Euclid's algorithm</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=10" title="Edit section: An inelegant program for Euclid's algorithm">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="thumb tright">
<div class="thumbinner" style="width:165px;"><a href="http://en.wikipedia.org/wiki/File:Euclid%27s_algorithm_Inelegant_program_1.png" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Euclid%27s_algorithm_Inelegant_program_1.png/163px-Euclid%27s_algorithm_Inelegant_program_1.png" width="163" height="349" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/4/49/Euclid%27s_algorithm_Inelegant_program_1.png/245px-Euclid%27s_algorithm_Inelegant_program_1.png 1.5x, //upload.wikimedia.org/wikipedia/commons/4/49/Euclid%27s_algorithm_Inelegant_program_1.png 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Euclid%27s_algorithm_Inelegant_program_1.png" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
"Inelegant" is a translation of Knuth's version of the algorithm with a subtraction-based remainder-loop replacing his use of division (or a "modulus" instruction). Derived from Knuth 1973:2–4. Depending on the two numbers "Inelegant" may compute the g.c.d. in fewer steps than "Elegant".</div>
</div>
</div>
<p>The following algorithm is framed as Knuth's 4-step version of Euclid's and Nichomachus', but rather than using division to find the remainder it uses successive subtractions of the shorter length <i>s</i> from the remaining length <i>r</i> until <i>r</i> is less than <i>s</i>. The high-level description, shown in boldface, is adapted from Knuth 1973:2–4:</p>
<p><b>INPUT</b>:</p>
<pre>
<span id="el1"></span><span id="1">1</span> [Into two locations L and S put the numbers <i>l</i> and <i>s</i> that represent the two lengths]: 
  INPUT L, S
<span id="el2"></span><span id="2">2</span> [Initialize R: make the remaining length <i>r</i> equal to the starting/initial/input length <i>l</i>]:
  R ← L
</pre>
<p><b>E0: [Ensure <i>r</i> ≥ <i>s</i>.]</b></p>
<pre>
<span id="el3"></span><span id="3">3</span> [Ensure the smaller of the two numbers is in S and the larger in R]: 
  IF R &gt; S THEN 
    the contents of L is the larger number so skip over the exchange-steps <a href="#4">4</a>, <a href="#5">5</a> and <a href="#6">6</a>: 
    GOTO step <a href="#6">6</a> 
  ELSE 
    swap the contents of R and S.
<span id="el4"></span><span id="4">4</span>   L ← R (this first step is redundant, but is useful for later discussion).
<span id="el5"></span><span id="5">5</span>   R ← S
<span id="el6"></span><span id="6">6</span>   S ← L
</pre>
<p><b>E1: [Find remainder]</b>: Until the remaining length <i>r</i> in R is less than the shorter length <i>s</i> in S, repeatedly subtract the measuring number <i>s</i> in S from the remaining length <i>r</i> in R.</p>
<pre>
<span id="el7"></span><span id="7">7</span> IF S &gt; R THEN 
    done measuring so 
    GOTO <a href="#10">10</a> 
  ELSE 
    measure again,
<span id="el8"></span><span id="8">8</span>   R ← R − S
<span id="el9"></span><span id="9">9</span>   [Remainder-loop]: 
    GOTO <a href="#7">7</a>.
</pre>
<p><b>E2: [Is the remainder 0?]</b>: EITHER (i) the last measure was exact and the remainder in R is 0 program can halt, OR (ii) the algorithm must continue: the last measure left a remainder in R less than measuring number in S.</p>
<pre>
<span id="el10"></span><span id="10">10</span> IF R = 0 THEN 
     done so 
     GOTO <a href="#15">step 15</a> 
   ELSE 
     CONTINUE TO <a href="#11">step 11</a>,
</pre>
<p><b>E3: [Interchange <i>s</i> and <i>r</i>]</b>: The nut of Euclid's algorithm. Use remainder <i>r</i> to measure what was previously smaller number <i>s</i>:; L serves as a temporary location.</p>
<pre>
<span id="el11"></span><span id="11">11</span>  L ← R
<span id="el12"></span><span id="12">12</span>  R ← S
<span id="el13"></span><span id="13">13</span>  S ← L
<span id="el14"></span><span id="14">14</span>  [Repeat the measuring process]: 
    GOTO <a href="#7">7</a>
</pre>
<p><b>OUTPUT</b>:</p>
<pre>
<span id="el15"></span><span id="15">15</span> [Done. S contains the <a href="http://en.wikipedia.org/wiki/Greatest_common_divisor" title="Greatest common divisor">greatest common divisor</a>]: 
   PRINT S
</pre>
<p><b>DONE</b>:</p>
<pre>
<span id="el16"></span><span id="16">16</span> HALT, END, STOP.
</pre>
<h4><span class="mw-headline" id="An_elegant_program_for_Euclid.27s_algorithm">An elegant program for Euclid's algorithm</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=11" title="Edit section: An elegant program for Euclid's algorithm">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>The following version of Euclid's algorithm requires only 6 core instructions to do what 13 are required to do by "Inelegant"; worse, "Inelegant" requires more <i>types</i> of instructions. The flowchart of "Elegant" can be found at the top of this article. In the (unstructured) Basic language the steps are numbered, and the instruction LET [] = [] is the assignment instruction symbolized by ←.</p>
<pre>
  5 REM <a href="http://en.wikipedia.org/wiki/Euclid%27s_algorithm" title="Euclid's algorithm" class="mw-redirect">Euclid's algorithm</a> for <a href="http://en.wikipedia.org/wiki/Greatest_common_divisor" title="Greatest common divisor">greatest common divisor</a>
  6 PRINT "Type two integers greater than 0"
  10 INPUT A,B
  20 IF B=0 THEN <a href="http://en.wikipedia.org/wiki/GOTO" title="GOTO" class="mw-redirect">GOTO</a> 80
  30 IF A &gt; B THEN <a href="http://en.wikipedia.org/wiki/GOTO" title="GOTO" class="mw-redirect">GOTO</a> 60
  40 LET B=B-A
  50 <a href="http://en.wikipedia.org/wiki/GOTO" title="GOTO" class="mw-redirect">GOTO</a> 20
  60 LET A=A-B
  70 <a href="http://en.wikipedia.org/wiki/GOTO" title="GOTO" class="mw-redirect">GOTO</a> 20
  80 PRINT A
  90 END
</pre>
<p><i>How "Elegant" works</i>: In place of an outer "Euclid loop", "Elegant" shifts back and forth between two "co-loops", an A &gt; B loop that computes A ← A − B, and a B ≤ A loop that computes B ← B − A. This works because, when at last the minuend M is less than or equal to the subtrahend S ( Difference = Minuend − Subtrahend), the minuend can become <i>s</i> (the new measuring length) and the subtrahend can become the new <i>r</i> (the length to be measured); in other words the "sense" of the subtraction reverses.</p>
<h3><span class="mw-headline" id="Testing_the_Euclid_algorithms">Testing the Euclid algorithms</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=12" title="Edit section: Testing the Euclid algorithms">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Does an algorithm do what its author wants it to do? A few test cases usually suffice to confirm core functionality. One source<sup id="cite_ref-47" class="reference"><a href="#cite_note-47"><span>[</span>47<span>]</span></a></sup> uses 3009 and 884. Knuth suggested 40902, 24140. Another interesting case is the two <a href="http://en.wikipedia.org/wiki/Relatively_prime" title="Relatively prime" class="mw-redirect">relatively prime</a> numbers 14157 and 5950.</p>
<p>But exceptional cases must be identified and tested. Will "Inelegant" perform properly when R &gt; S, S &gt; R, R = S? Ditto for "Elegant": B &gt; A, A &gt; B, A = B? (Yes to all). What happens when one number is zero, both numbers are zero? ("Inelegant" computes forever in all cases; "Elegant" computes forever when A = 0.) What happens if <i>negative</i> numbers are entered? Fractional numbers? If the input numbers, i.e. the <a href="http://en.wikipedia.org/wiki/Domain_(mathematics)" title="Domain (mathematics)" class="mw-redirect">domain</a> of the function computed by the algorithm/program, is to include only positive integers including zero, then the failures at zero indicate that the algorithm (and the program that <a href="http://en.wikipedia.org/wiki/Instance_(computer_science)" title="Instance (computer science)">instantiates</a> it) is a <a href="http://en.wikipedia.org/wiki/Partial_function" title="Partial function">partial function</a> rather than a <a href="http://en.wikipedia.org/wiki/Total_function" title="Total function" class="mw-redirect">total function</a>. A notable failure due to exceptions is the <a href="http://en.wikipedia.org/wiki/Ariane_V" title="Ariane V" class="mw-redirect">Ariane V</a> rocket failure.</p>
<p><i>Proof of program correctness by use of mathematical induction</i>: Knuth demonstrates the application of <a href="http://en.wikipedia.org/wiki/Mathematical_induction" title="Mathematical induction">mathematical induction</a> to an "extended" version of Euclid's algorithm, and he proposes "a general method applicable to proving the validity of any algorithm".<sup id="cite_ref-48" class="reference"><a href="#cite_note-48"><span>[</span>48<span>]</span></a></sup> Tausworthe proposes that a measure of the complexity of a program be the length of its correctness proof.<sup id="cite_ref-49" class="reference"><a href="#cite_note-49"><span>[</span>49<span>]</span></a></sup></p>
<h3><span class="mw-headline" id="Measuring_and_improving_the_Euclid_algorithms">Measuring and improving the Euclid algorithms</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=13" title="Edit section: Measuring and improving the Euclid algorithms">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><i>Elegance (compactness) versus goodness (speed)</i>: With only 6 core instructions, "Elegant" is the clear winner compared to "Inelegant" at 13 instructions. However, "Inelegant" is <i>faster</i> (it arrives at HALT in fewer steps). <a href="http://en.wikipedia.org/wiki/Algorithm_analysis" title="Algorithm analysis" class="mw-redirect">Algorithm analysis</a><sup id="cite_ref-50" class="reference"><a href="#cite_note-50"><span>[</span>50<span>]</span></a></sup> indicates why this is the case: "Elegant" does <i>two</i> conditional tests in every subtraction loop, whereas "Inelegant" only does one. As the algorithm (usually) requires many loop-throughs, <i>on average</i> much time is wasted doing a "B = 0?" test that is needed only after the remainder is computed.</p>
<p><i>Can the algorithms be improved?</i>: Once the programmer judges a program "fit" and "effective"—that is, it computes the function intended by its author—then the question becomes, can it be improved?</p>
<p>The compactness of "Inelegant" can be improved by the elimination of 5 steps. But Chaitin proved that compacting an algorithm cannot be automated by a generalized algorithm;<sup id="cite_ref-51" class="reference"><a href="#cite_note-51"><span>[</span>51<span>]</span></a></sup> rather, it can only be done <a href="http://en.wikipedia.org/wiki/Heuristic" title="Heuristic">heuristically</a>, i.e. by exhaustive search (examples to be found at <a href="http://en.wikipedia.org/wiki/Busy_beaver" title="Busy beaver">Busy beaver</a>), trial and error, cleverness, insight, application of <a href="http://en.wikipedia.org/wiki/Inductive_reasoning" title="Inductive reasoning">inductive reasoning</a>, etc. Observe that steps 4, 5 and 6 are repeated in steps 11, 12 and 13. Comparison with "Elegant" provides a hint that these steps together with steps 2 and 3 can be eliminated. This reduces the number of core instructions from 13 to 8, which makes it "more elegant" than "Elegant" at 9 steps.</p>
<p>The speed of "Elegant" can be improved by moving the B=0? test outside of the two subtraction loops. This change calls for the addition of 3 instructions (B=0?, A=0?, GOTO). Now "Elegant" computes the example-numbers faster; whether for any given A, B and R, S this is always the case would require a detailed analysis.</p>
<h2><span class="mw-headline" id="Algorithmic_analysis">Algorithmic analysis</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=14" title="Edit section: Algorithmic analysis">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="rellink relarticle mainarticle">Main article: <a href="Analysis_of_algorithms.html" title="Analysis of algorithms">Analysis of algorithms</a></div>
<p>It is frequently important to know how much of a particular resource (such as time or storage) is theoretically required for a given algorithm. Methods have been developed for the <a href="Analysis_of_algorithms.html" title="Analysis of algorithms">analysis of algorithms</a> to obtain such quantitative answers (estimates); for example, the sorting algorithm above has a time requirement of O(<i>n</i>), using the <a href="Big_O_notation.html" title="Big O notation">big O notation</a> with <i>n</i> as the length of the list. At all times the algorithm only needs to remember two values: the largest number found so far, and its current position in the input list. Therefore it is said to have a space requirement of <i>O(1)</i>, if the space required to store the input numbers is not counted, or O(<i>n</i>) if it is counted.</p>
<p>Different algorithms may complete the same task with a different set of instructions in less or more time, space, or '<a href="http://en.wikipedia.org/wiki/Algorithmic_efficiency" title="Algorithmic efficiency">effort</a>' than others. For example, a <a href="http://en.wikipedia.org/wiki/Binary_search" title="Binary search" class="mw-redirect">binary search</a> algorithm usually outperforms a <a href="http://en.wikipedia.org/wiki/Brute-force_search" title="Brute-force search">brute force</a> sequential search when used for <a href="http://en.wikipedia.org/wiki/Lookup_table" title="Lookup table">table lookups</a> on sorted lists.</p>
<h3><span class="mw-headline" id="Formal_versus_empirical">Formal versus empirical</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=15" title="Edit section: Formal versus empirical">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="rellink relarticle mainarticle">Main articles: <a href="http://en.wikipedia.org/wiki/Empirical_algorithmics" title="Empirical algorithmics">Empirical algorithmics</a>, <a href="http://en.wikipedia.org/wiki/Profiling_(computer_programming)" title="Profiling (computer programming)">Profiling (computer programming)</a>, and <a href="http://en.wikipedia.org/wiki/Program_optimization" title="Program optimization">Program optimization</a></div>
<p>The <a href="Analysis_of_algorithms.html" title="Analysis of algorithms">analysis and study of algorithms</a> is a discipline of <a href="Computer_science.html" title="Computer science">computer science</a>, and is often practiced abstractly without the use of a specific <a href="Programming_language.html" title="Programming language">programming language</a> or implementation. In this sense, algorithm analysis resembles other mathematical disciplines in that it focuses on the underlying properties of the algorithm and not on the specifics of any particular implementation. Usually <a href="Pseudocode.html" title="Pseudocode">pseudocode</a> is used for analysis as it is the simplest and most general representation. However, ultimately, most algorithms are usually implemented on particular hardware / software platforms and their <a href="http://en.wikipedia.org/wiki/Algorithmic_efficiency" title="Algorithmic efficiency">algorithmic efficiency</a> is eventually put to the test using real code. For the solution of a "one off" problem, the efficiency of a particular algorithm may not have significant consequences (unless n is extremely large) but for algorithms designed for fast interactive, commercial or long life scientific usage it may be critical. Scaling from small n to large n frequently exposes inefficient algorithms that are otherwise benign.</p>
<p>Empirical testing is useful because it may uncover unexpected interactions that affect performance. <a href="http://en.wikipedia.org/wiki/Benchmark_(computing)" title="Benchmark (computing)">Benchmarks</a> may be used to compare before/after potential improvements to an algorithm after program optimization.</p>
<h3><span class="mw-headline" id="Execution_efficiency">Execution efficiency</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=16" title="Edit section: Execution efficiency">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="rellink relarticle mainarticle">Main article: <a href="http://en.wikipedia.org/wiki/Algorithmic_efficiency" title="Algorithmic efficiency">Algorithmic efficiency</a></div>
<p>To illustrate the potential improvements possible even in some extremely "well established" algorithms, a recent significant innovation, relating to <a href="http://en.wikipedia.org/wiki/Fast_Fourier_transform" title="Fast Fourier transform">FFT</a> algorithms (used very heavily in the field of image processing), may have decreased processing times by a factor as high as 10,000 . The impact of this speedup enables, for example, portable computing devices (as well as other devices) to consume less power.<sup id="cite_ref-Hassanieh12_52-0" class="reference"><a href="#cite_note-Hassanieh12-52"><span>[</span>52<span>]</span></a></sup></p>
<h2><span class="mw-headline" id="Classification">Classification</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=17" title="Edit section: Classification">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>There are various ways to classify algorithms, each with its own merits.</p>
<h3><span class="mw-headline" id="By_implementation">By implementation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=18" title="Edit section: By implementation">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>One way to classify algorithms is by implementation means.</p>
<dl>
<dt>Recursion or iteration</dt>
<dd>A <a href="http://en.wikipedia.org/wiki/Recursive_algorithm" title="Recursive algorithm" class="mw-redirect">recursive algorithm</a> is one that invokes (makes reference to) itself repeatedly until a certain condition matches, which is a method common to <a href="Functional_programming.html" title="Functional programming">functional programming</a>. <a href="Iteration.html" title="Iteration">Iterative</a> algorithms use repetitive constructs like <a href="http://en.wikipedia.org/wiki/Program_loops" title="Program loops" class="mw-redirect">loops</a> and sometimes additional data structures like <a href="Stack_(data_structure).html" title="Stack (data structure)" class="mw-redirect">stacks</a> to solve the given problems. Some problems are naturally suited for one implementation or the other. For example, <a href="http://en.wikipedia.org/wiki/Towers_of_Hanoi" title="Towers of Hanoi" class="mw-redirect">towers of Hanoi</a> is a well understood in recursive implementation. Every recursive version has an equivalent (but possibly more or less complex) iterative version, and vice versa.</dd>
<dt>Logical</dt>
<dd>An algorithm may be viewed as controlled <a href="Deductive_reasoning.html" title="Deductive reasoning">logical deduction</a>. This notion may be expressed as: <i>Algorithm = logic + control</i>.<sup id="cite_ref-53" class="reference"><a href="#cite_note-53"><span>[</span>53<span>]</span></a></sup> The logic component expresses the axioms that may be used in the computation and the control component determines the way in which deduction is applied to the axioms. This is the basis for the <a href="Logic_programming.html" title="Logic programming">logic programming</a> paradigm. In pure logic programming languages the control component is fixed and algorithms are specified by supplying only the logic component. The appeal of this approach is the elegant <a href="http://en.wikipedia.org/wiki/Formal_semantics_of_programming_languages" title="Formal semantics of programming languages" class="mw-redirect">semantics</a>: a change in the axioms has a well-defined change in the algorithm.</dd>
<dt>Serial, parallel or distributed</dt>
<dd>Algorithms are usually discussed with the assumption that computers execute one instruction of an algorithm at a time. Those computers are sometimes called serial computers. An <a href="Algorithm_design.html" title="Algorithm design">algorithm designed</a> for such an environment is called a serial algorithm, as opposed to <a href="Parallel_algorithm.html" title="Parallel algorithm">parallel algorithms</a> or <a href="http://en.wikipedia.org/wiki/Distributed_algorithms" title="Distributed algorithms" class="mw-redirect">distributed algorithms</a>. Parallel algorithms take advantage of computer architectures where several processors can work on a problem at the same time, whereas distributed algorithms utilize multiple machines connected with a <a href="http://en.wikipedia.org/wiki/Computer_Network" title="Computer Network" class="mw-redirect">network</a>. Parallel or distributed algorithms divide the problem into more symmetrical or asymmetrical subproblems and collect the results back together. The resource consumption in such algorithms is not only processor cycles on each processor but also the communication overhead between the processors. Some sorting algorithms can be parallelized efficiently, but their communication overhead is expensive. Iterative algorithms are generally parallelizable. Some problems have no parallel algorithms, and are called inherently serial problems.</dd>
<dt>Deterministic or non-deterministic</dt>
<dd><a href="http://en.wikipedia.org/wiki/Deterministic_algorithm" title="Deterministic algorithm">Deterministic algorithms</a> solve the problem with exact decision at every step of the algorithm whereas <a href="http://en.wikipedia.org/wiki/Non-deterministic_algorithm" title="Non-deterministic algorithm" class="mw-redirect">non-deterministic algorithms</a> solve problems via guessing although typical guesses are made more accurate through the use of <a href="http://en.wikipedia.org/wiki/Heuristics" title="Heuristics" class="mw-redirect">heuristics</a>.</dd>
<dt>Exact or approximate</dt>
<dd>While many algorithms reach an exact solution, <a href="http://en.wikipedia.org/wiki/Approximation_algorithm" title="Approximation algorithm">approximation algorithms</a> seek an approximation that is close to the true solution. Approximation may use either a deterministic or a random strategy. Such algorithms have practical value for many hard problems.</dd>
<dt><a href="http://en.wikipedia.org/wiki/Quantum_algorithm" title="Quantum algorithm">Quantum algorithm</a></dt>
<dd>They run on a realistic model of <a href="http://en.wikipedia.org/wiki/Quantum_computation" title="Quantum computation" class="mw-redirect">quantum computation</a>. The term is usually used for those algorithms which seem inherently quantum, or use some essential feature of quantum computation such as <a href="http://en.wikipedia.org/wiki/Quantum_superposition" title="Quantum superposition">quantum superposition</a> or <a href="http://en.wikipedia.org/wiki/Quantum_entanglement" title="Quantum entanglement">quantum entanglement</a>.</dd>
</dl>
<h3><span class="mw-headline" id="By_design_paradigm">By design paradigm</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=19" title="Edit section: By design paradigm">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Another way of classifying algorithms is by their design methodology or paradigm. There is a certain number of paradigms, each different from the other. Furthermore, each of these categories includes many different types of algorithms. Some commonly found paradigms include:</p>
<dl>
<dt><a href="http://en.wikipedia.org/wiki/Brute_force_search" title="Brute force search" class="mw-redirect">Brute-force</a> or exhaustive search</dt>
<dd>This is the naive method of trying every possible solution to see which is best.<sup id="cite_ref-54" class="reference"><a href="#cite_note-54"><span>[</span>54<span>]</span></a></sup></dd>
<dt>Divide and conquer</dt>
<dd>A <a href="http://en.wikipedia.org/wiki/Divide_and_conquer_algorithm" title="Divide and conquer algorithm" class="mw-redirect">divide and conquer algorithm</a> repeatedly reduces an instance of a problem to one or more smaller instances of the same problem (usually <a href="Recursion.html" title="Recursion">recursively</a>) until the instances are small enough to solve easily. One such example of divide and conquer is <a href="http://en.wikipedia.org/wiki/Mergesort" title="Mergesort" class="mw-redirect">merge sorting</a>. Sorting can be done on each segment of data after dividing data into segments and sorting of entire data can be obtained in the conquer phase by merging the segments. A simpler variant of divide and conquer is called a <i>decrease and conquer algorithm</i>, that solves an identical subproblem and uses the solution of this subproblem to solve the bigger problem. Divide and conquer divides the problem into multiple subproblems and so the conquer stage is more complex than decrease and conquer algorithms. An example of decrease and conquer algorithm is the <a href="http://en.wikipedia.org/wiki/Binary_search_algorithm" title="Binary search algorithm">binary search algorithm</a>.</dd>
<dt><a href="http://en.wikipedia.org/wiki/Dynamic_programming" title="Dynamic programming">Dynamic programming</a></dt>
<dd>When a problem shows <a href="http://en.wikipedia.org/wiki/Optimal_substructure" title="Optimal substructure">optimal substructure</a>, meaning the optimal solution to a problem can be constructed from optimal solutions to subproblems, and <a href="http://en.wikipedia.org/wiki/Overlapping_subproblems" title="Overlapping subproblems">overlapping subproblems</a>, meaning the same subproblems are used to solve many different problem instances, a quicker approach called <i>dynamic programming</i> avoids recomputing solutions that have already been computed. For example, <a href="http://en.wikipedia.org/wiki/Floyd–Warshall_algorithm" title="Floyd–Warshall algorithm">Floyd–Warshall algorithm</a>, the shortest path to a goal from a vertex in a weighted <a href="http://en.wikipedia.org/wiki/Graph_(mathematics)" title="Graph (mathematics)">graph</a> can be found by using the shortest path to the goal from all adjacent vertices. Dynamic programming and <a href="http://en.wikipedia.org/wiki/Memoization" title="Memoization">memoization</a> go together. The main difference between dynamic programming and divide and conquer is that subproblems are more or less independent in divide and conquer, whereas subproblems overlap in dynamic programming. The difference between dynamic programming and straightforward recursion is in caching or memoization of recursive calls. When subproblems are independent and there is no repetition, memoization does not help; hence dynamic programming is not a solution for all complex problems. By using memoization or maintaining a <a href="http://en.wikipedia.org/wiki/Mathematical_table" title="Mathematical table">table</a> of subproblems already solved, dynamic programming reduces the exponential nature of many problems to polynomial complexity.</dd>
<dt>The greedy method</dt>
<dd>A <a href="http://en.wikipedia.org/wiki/Greedy_algorithm" title="Greedy algorithm">greedy algorithm</a> is similar to a <a href="http://en.wikipedia.org/wiki/Dynamic_programming" title="Dynamic programming">dynamic programming algorithm</a>, but the difference is that solutions to the subproblems do not have to be known at each stage; instead a "greedy" choice can be made of what looks best for the moment. The greedy method extends the solution with the best possible decision (not all feasible decisions) at an algorithmic stage based on the current local optimum and the best decision (not all possible decisions) made in a previous stage. It is not exhaustive, and does not give an accurate answer to many problems. But when it works, it is the fastest method. The most popular greedy algorithm is finding the minimal spanning tree as given by <a href="http://en.wikipedia.org/wiki/Huffman_coding" title="Huffman coding">Huffman Tree</a>, <a href="http://en.wikipedia.org/wiki/Kruskal%27s_algorithm" title="Kruskal's algorithm">Kruskal</a>, <a href="http://en.wikipedia.org/wiki/Prim%27s_algorithm" title="Prim's algorithm">Prim</a>, <a href="http://en.wikipedia.org/wiki/Sollin%27s_algorithm" title="Sollin's algorithm" class="mw-redirect">Sollin</a>.</dd>
<dt>Linear programming</dt>
<dd>When solving a problem using <a href="http://en.wikipedia.org/wiki/Linear_programming" title="Linear programming">linear programming</a>, specific <a href="http://en.wikipedia.org/wiki/Inequality_(mathematics)" title="Inequality (mathematics)">inequalities</a> involving the inputs are found and then an attempt is made to maximize (or minimize) some linear function of the inputs. Many problems (such as the <a href="http://en.wikipedia.org/wiki/Maximum_flow_problem" title="Maximum flow problem">maximum flow</a> for directed graphs) can be stated in a linear programming way, and then be solved by a 'generic' algorithm such as the <a href="http://en.wikipedia.org/wiki/Simplex_algorithm" title="Simplex algorithm">simplex algorithm</a>. A more complex variant of linear programming is called integer programming, where the solution space is restricted to the <a href="http://en.wikipedia.org/wiki/Integers" title="Integers" class="mw-redirect">integers</a>.</dd>
<dt><a href="http://en.wikipedia.org/wiki/Reduction_(complexity)" title="Reduction (complexity)">Reduction of complexity</a></dt>
<dd>This technique involves solving a difficult problem by transforming it into a better known problem for which we have (hopefully) <a href="http://en.wikipedia.org/wiki/Asymptotically_optimal" title="Asymptotically optimal" class="mw-redirect">asymptotically optimal</a> algorithms. The goal is to find a reducing algorithm whose <a href="Computational_complexity_theory.html" title="Computational complexity theory">complexity</a> is not dominated by the resulting reduced algorithm's. For example, one <a href="http://en.wikipedia.org/wiki/Selection_algorithm" title="Selection algorithm">selection algorithm</a> for finding the median in an unsorted list involves first sorting the list (the expensive portion) and then pulling out the middle element in the sorted list (the cheap portion). This technique is also known as <i>transform and conquer</i>.</dd>
<dt>Search and enumeration</dt>
<dd>Many problems (such as playing <a href="http://en.wikipedia.org/wiki/Chess" title="Chess">chess</a>) can be modeled as problems on <a href="Graph_theory.html" title="Graph theory">graphs</a>. A <a href="http://en.wikipedia.org/wiki/Graph_exploration_algorithm" title="Graph exploration algorithm" class="mw-redirect">graph exploration algorithm</a> specifies rules for moving around a graph and is useful for such problems. This category also includes <a href="http://en.wikipedia.org/wiki/Search_algorithm" title="Search algorithm">search algorithms</a>, <a href="http://en.wikipedia.org/wiki/Branch_and_bound" title="Branch and bound">branch and bound</a> enumeration and <a href="http://en.wikipedia.org/wiki/Backtracking" title="Backtracking">backtracking</a>.
<ul>
<li><a href="http://en.wikipedia.org/wiki/Randomized_algorithm" title="Randomized algorithm">Randomized algorithms</a> are those that make some choices randomly (or pseudo-randomly); for some problems, it can in fact be proven that the fastest solutions must involve some <a href="http://en.wikipedia.org/wiki/Randomness" title="Randomness">randomness</a>. There are two large classes of such algorithms:</li>
</ul>
<dl>
<dd>
<ol>
<li><a href="http://en.wikipedia.org/wiki/Monte_Carlo_algorithm" title="Monte Carlo algorithm">Monte Carlo algorithms</a> return a correct answer with high-probability. E.g. <a href="http://en.wikipedia.org/wiki/RP_(complexity)" title="RP (complexity)">RP</a> is the subclass of these that run in <a href="http://en.wikipedia.org/wiki/Polynomial_time" title="Polynomial time" class="mw-redirect">polynomial time</a>)</li>
<li><a href="http://en.wikipedia.org/wiki/Las_Vegas_algorithm" title="Las Vegas algorithm">Las Vegas algorithms</a> always return the correct answer, but their running time is only probabilistically bound, e.g. <a href="http://en.wikipedia.org/wiki/Zero-error_Probabilistic_Polynomial_time" title="Zero-error Probabilistic Polynomial time" class="mw-redirect">ZPP</a>.</li>
</ol>
</dd>
</dl>
<ul>
<li>In <a href="http://en.wikipedia.org/wiki/Optimization_problem" title="Optimization problem">optimization problems</a>, heuristic algorithms do not try to find an optimal solution, but an approximate solution where the time or resources are limited. They are not practical to find perfect solutions. An example of this would be <a href="http://en.wikipedia.org/wiki/Local_search_(optimization)" title="Local search (optimization)">local search</a>, <a href="http://en.wikipedia.org/wiki/Tabu_search" title="Tabu search">tabu search</a>, or <a href="http://en.wikipedia.org/wiki/Simulated_annealing" title="Simulated annealing">simulated annealing</a> algorithms, a class of heuristic probabilistic algorithms that vary the solution of a problem by a random amount. The name "simulated annealing" alludes to the metallurgic term meaning the heating and cooling of metal to achieve freedom from defects. The purpose of the random variance is to find close to globally optimal solutions rather than simply locally optimal ones, the idea being that the random element decreases as the algorithm settles down to a solution. <a href="http://en.wikipedia.org/wiki/Approximation_algorithms" title="Approximation algorithms" class="mw-redirect">Approximation algorithms</a> are those heuristic algorithms that additionally provide some bounds on the error. <a href="http://en.wikipedia.org/wiki/Genetic_algorithm" title="Genetic algorithm">Genetic algorithms</a> attempt to find solutions to problems by mimicking biological <a href="http://en.wikipedia.org/wiki/Evolution" title="Evolution">evolutionary</a> processes, with a cycle of random mutations yielding successive generations of "solutions". Thus, they emulate reproduction and "survival of the fittest". In <a href="http://en.wikipedia.org/wiki/Genetic_programming" title="Genetic programming">genetic programming</a>, this approach is extended to algorithms, by regarding the algorithm itself as a "solution" to a problem.</li>
</ul>
</dd>
</dl>
<h3><span class="mw-headline" id="By_field_of_study">By field of study</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=20" title="Edit section: By field of study">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="rellink boilerplate seealso">See also: <a href="http://en.wikipedia.org/wiki/List_of_algorithms" title="List of algorithms">List of algorithms</a></div>
<p>Every field of science has its own problems and needs efficient algorithms. Related problems in one field are often studied together. Some example classes are <a href="http://en.wikipedia.org/wiki/Search_algorithm" title="Search algorithm">search algorithms</a>, <a href="http://en.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">sorting algorithms</a>, <a href="Merge_algorithm.html" title="Merge algorithm">merge algorithms</a>, <a href="Numerical_analysis.html" title="Numerical analysis">numerical algorithms</a>, <a href="Graph_theory.html" title="Graph theory">graph algorithms</a>, <a href="http://en.wikipedia.org/wiki/String_algorithms" title="String algorithms" class="mw-redirect">string algorithms</a>, <a href="Computational_geometry.html" title="Computational geometry">computational geometric algorithms</a>, <a href="http://en.wikipedia.org/wiki/Combinatorial" title="Combinatorial" class="mw-redirect">combinatorial algorithms</a>, <a href="http://en.wikipedia.org/wiki/Medical_algorithm" title="Medical algorithm">medical algorithms</a>, <a href="Machine_learning.html" title="Machine learning">machine learning</a>, <a href="http://en.wikipedia.org/wiki/Cryptography" title="Cryptography">cryptography</a>, <a href="Data_compression.html" title="Data compression">data compression</a> algorithms and <a href="Parsing.html" title="Parsing">parsing techniques</a>.</p>
<p>Fields tend to overlap with each other, and algorithm advances in one field may improve those of other, sometimes completely unrelated, fields. For example, dynamic programming was invented for optimization of resource consumption in industry, but is now used in solving a broad range of problems in many fields.</p>
<h3><span class="mw-headline" id="By_complexity">By complexity</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=21" title="Edit section: By complexity">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="rellink boilerplate seealso">See also: <a href="http://en.wikipedia.org/wiki/Complexity_class" title="Complexity class">Complexity class</a>&#160;and <a href="http://en.wikipedia.org/wiki/Parameterized_complexity" title="Parameterized complexity">Parameterized complexity</a></div>
<p>Algorithms can be classified by the amount of time they need to complete compared to their input size. There is a wide variety: some algorithms complete in linear time relative to input size, some do so in an exponential amount of time or even worse, and some never halt. Additionally, some problems may have multiple algorithms of differing complexity, while other problems might have no algorithms or no known efficient algorithms. There are also mappings from some problems to other problems. Owing to this, it was found to be more suitable to classify the problems themselves instead of the algorithms into equivalence classes based on the complexity of the best possible algorithms for them.</p>
<p>Burgin (2005, p.&#160;24) uses a generalized definition of algorithms that relaxes the common requirement that the output of the algorithm that computes a function must be determined after a finite number of steps. He defines a super-recursive class of algorithms as "a class of algorithms in which it is possible to compute functions not computable by any Turing machine" (Burgin 2005, p.&#160;107). This is closely related to the study of methods of <a href="http://en.wikipedia.org/wiki/Hypercomputation" title="Hypercomputation">hypercomputation</a>.</p>
<h3><span class="mw-headline" id="By_evaluative_type">By evaluative type</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=22" title="Edit section: By evaluative type">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="rellink boilerplate seealso">See also: <a href="http://en.wikipedia.org/wiki/Evaluative_diversity" title="Evaluative diversity">Evaluative diversity</a></div>
<p>To maintain balance while integrating machines into society, one may classify algorithms by the types of evaluation they perform. A number of philosophers have hypothesized that societies benefit from evaluative diversity much as they benefit from diversity of gender and blood type (e.g. Dean 2012, Sober &amp; Wilson 1998, Hertzke &amp; McConkey 1998, and Bellah 1985). Technology could threaten those moral ecosystems like an <a href="http://en.wikipedia.org/wiki/Invasive_species" title="Invasive species">invasive species</a> if it skews the diversity mix. Wallach &amp; Allen (2008) classified decision-making algorithms into three evaluative types: Bottom-up algorithms make judgments unpredictable to their programmers (e.g. evolving software). All others (top-down) were divided into <a href="http://en.wikipedia.org/wiki/Deontological_ethics" title="Deontological ethics">deontological</a> (which can be relied upon to implement programmed rules) vs. <a href="http://en.wikipedia.org/wiki/Consequentialism" title="Consequentialism">consequentialist</a> (which can be relied upon to maximize a programmed measure). As examples, a standard calculator would be deontological, while <a href="Machine_learning.html" title="Machine learning">machine learning</a> for trading stocks would be consequentialist.</p>
<p>Santos-Lang renamed the deontological and consequentialist classes "institutional" and "negotiator" respectively to avoid the implication that all deontological and consequentialist theories of ethics can be implemented as algorithms, and split the bottom-up class into "<a href="http://en.wikipedia.org/wiki/Gadfly_ethics" title="Gadfly ethics" class="mw-redirect">gadfly</a>" (algorithms which are unpredictable because of their use of randomness generators) vs. "<a href="http://en.wikipedia.org/wiki/Role_ethics" title="Role ethics">relational</a>" (algorithms which are unpredictable because of network effects). A mutator in <a href="http://en.wikipedia.org/wiki/Evolutionary_computation" title="Evolutionary computation">evolutionary computation</a> would be an example of a gadfly, while a class 3 or 4 <a href="http://en.wikipedia.org/wiki/Cellular_automaton" title="Cellular automaton">cellular automaton</a> would be an example of a relational machine. Santos-Lang noted that algorithms often have subcomponents of other types. For example, a stock trading negotiator may implement a genetic algorithm, and thus contain gadfly mutators, and mutators may in turn have institutional and relational subcomponents, all computation being relational at the level of underlying chemistry (Santos-Lang 2014).</p>
<h2><span class="mw-headline" id="Continuous_algorithms">Continuous algorithms</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=23" title="Edit section: Continuous algorithms">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The adjective "continuous" when applied to the word "algorithm" can mean:</p>
<ul>
<li>An algorithm operating on data that represents continuous quantities, even though this data is represented by discrete approximations—such algorithms are studied in <a href="Numerical_analysis.html" title="Numerical analysis">numerical analysis</a>; or</li>
<li>An algorithm in the form of a <a href="http://en.wikipedia.org/wiki/Differential_equation" title="Differential equation">differential equation</a> that operates continuously on the data, running on an <a href="http://en.wikipedia.org/wiki/Analog_computer" title="Analog computer">analog computer</a>.<sup id="cite_ref-55" class="reference"><a href="#cite_note-55"><span>[</span>55<span>]</span></a></sup></li>
</ul>
<h2><span class="mw-headline" id="Legal_issues">Legal issues</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=24" title="Edit section: Legal issues">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<dl>
<dd><i>See also: <a href="http://en.wikipedia.org/wiki/Software_patents" title="Software patents" class="mw-redirect">Software patents</a> for a general overview of the patentability of software, including computer-implemented algorithms.</i></dd>
</dl>
<p>Algorithms, by themselves, are not usually patentable. In the United States, a claim consisting solely of simple manipulations of abstract concepts, numbers, or signals does not constitute "processes" (USPTO 2006), and hence algorithms are not patentable (as in <a href="http://en.wikipedia.org/wiki/Gottschalk_v._Benson" title="Gottschalk v. Benson">Gottschalk v. Benson</a>). However, practical applications of algorithms are sometimes patentable. For example, in <a href="http://en.wikipedia.org/wiki/Diamond_v._Diehr" title="Diamond v. Diehr">Diamond v. Diehr</a>, the application of a simple <a href="http://en.wikipedia.org/wiki/Feedback" title="Feedback">feedback</a> algorithm to aid in the curing of <a href="http://en.wikipedia.org/wiki/Synthetic_rubber" title="Synthetic rubber">synthetic rubber</a> was deemed patentable. The <a href="http://en.wikipedia.org/wiki/Software_patent_debate" title="Software patent debate">patenting of software</a> is highly controversial, and there are highly criticized patents involving algorithms, especially <a href="Data_compression.html" title="Data compression">data compression</a> algorithms, such as <a href="http://en.wikipedia.org/wiki/Unisys" title="Unisys">Unisys</a>' <a href="http://en.wikipedia.org/wiki/Graphics_Interchange_Format#Unisys_and_LZW_patent_enforcement" title="Graphics Interchange Format">LZW patent</a>.</p>
<p>Additionally, some cryptographic algorithms have export restrictions (see <a href="http://en.wikipedia.org/wiki/Export_of_cryptography" title="Export of cryptography">export of cryptography</a>).</p>
<h2><span class="mw-headline" id="Etymology">Etymology</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=25" title="Edit section: Etymology">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The word <i>"Algorithm"</i>, or <i>"<a href="http://en.wikipedia.org/wiki/Algorism" title="Algorism">Algorism</a>"</i> in some other writing versions, comes from the name <a href="http://en.wikipedia.org/wiki/Al-Khwārizmī" title="Al-Khwārizmī" class="mw-redirect">al-Khwārizmī</a>, pronounced in classical Arabic as Al-Khwarithmi. Al-Khwārizmī (<a href="http://en.wikipedia.org/wiki/Persian_language" title="Persian language">Persian</a>: <span lang="fa" xml:lang="fa">خوارزمي</span>‎, c. 780-850) was a <a href="http://en.wikipedia.org/wiki/Persian_people" title="Persian people">Persian</a> <a href="http://en.wikipedia.org/wiki/Mathematician" title="Mathematician">mathematician</a>, <a href="http://en.wikipedia.org/wiki/Astronomer" title="Astronomer">astronomer</a>, <a href="http://en.wikipedia.org/wiki/Geographer" title="Geographer">geographer</a> and a <a href="http://en.wikipedia.org/wiki/Scholar" title="Scholar" class="mw-redirect">scholar</a> in the <a href="http://en.wikipedia.org/wiki/House_of_Wisdom" title="House of Wisdom">House of Wisdom</a> in <a href="http://en.wikipedia.org/wiki/Baghdad" title="Baghdad">Baghdad</a>, whose name means <i>"the native of <a href="http://en.wikipedia.org/wiki/Khwarezm" title="Khwarezm">Khwarezm</a>"</i>, a city that was part of the <a href="http://en.wikipedia.org/wiki/Greater_Iran" title="Greater Iran">Greater Iran</a> during his era and now is in modern day <a href="http://en.wikipedia.org/wiki/Uzbekistan" title="Uzbekistan">Uzbekistan</a>.<sup id="cite_ref-FOOTNOTEToomer1990.5B.5BCategory:All_articles_with_broken_links_to_citations.5D.5D.3Csup_class.3D.22noprint_Inline-Template.22_style.3D.22white-space:nowrap.3B.22.3E.5B.3Ci.3E.5B.5BTemplate:Harvard_citation_documentation.23Wikilink_to_citation_does_not_work.7C.3Cspan_title.3D.22Template:Harvard_citation_documentation.23Wikilink_to_citation_does_not_work.22.3Ecitation_not_found.3C.2Fspan.3E.5D.5D.3C.2Fi.3E.5D.3C.2Fsup.3E_56-0" class="reference"><a href="#cite_note-FOOTNOTEToomer1990.5B.5BCategory:All_articles_with_broken_links_to_citations.5D.5D.3Csup_class.3D.22noprint_Inline-Template.22_style.3D.22white-space:nowrap.3B.22.3E.5B.3Ci.3E.5B.5BTemplate:Harvard_citation_documentation.23Wikilink_to_citation_does_not_work.7C.3Cspan_title.3D.22Template:Harvard_citation_documentation.23Wikilink_to_citation_does_not_work.22.3Ecitation_not_found.3C.2Fspan.3E.5D.5D.3C.2Fi.3E.5D.3C.2Fsup.3E-56"><span>[</span>56<span>]</span></a></sup><sup id="cite_ref-Hogendijk_57-0" class="reference"><a href="#cite_note-Hogendijk-57"><span>[</span>57<span>]</span></a></sup><sup id="cite_ref-Oaks_58-0" class="reference"><a href="#cite_note-Oaks-58"><span>[</span>58<span>]</span></a></sup> About 825, he wrote a treatise in the Arabic language, which was translated into <a href="Latin.html" title="Latin">Latin</a> in the 12th century under the title <i>Algoritmi de numero Indorum</i>. This title means "Algoritmi on the numbers of the Indians", where "Algoritmi" was the translator's Latinization of Al-Khwarizmi's name.<sup id="cite_ref-59" class="reference"><a href="#cite_note-59"><span>[</span>59<span>]</span></a></sup> Al-Khwarizmi was the most widely read mathematician in Europe in the late Middle Ages, primarily through his other book, the <a href="http://en.wikipedia.org/wiki/Al-Jabr" title="Al-Jabr" class="mw-redirect">Algebra</a>.<sup id="cite_ref-60" class="reference"><a href="#cite_note-60"><span>[</span>60<span>]</span></a></sup> In late medieval Latin, <i>algorismus</i>, the corruption of his name, simply meant the "decimal number system" that is still the meaning of modern English <a href="http://en.wikipedia.org/wiki/Algorism" title="Algorism">algorism</a>. In 17th-century French the word's form, but not its meaning, changed to <i>algorithme</i>. English adopted the French very soon afterwards, but it wasn't until the late 19th century that "Algorithm" took on the meaning that it has in modern English.<sup id="cite_ref-61" class="reference"><a href="#cite_note-61"><span>[</span>61<span>]</span></a></sup></p>
<p>Alternative etymology claims origin from the terms <i>algebra</i> in its late medieval sense of "Arabic arithmetics" and <i>arithmos</i> the Greek term for number (thus literally meaning "Arabic numbers" or "Arabic calculation"). Algorithms of Al-Kharizmi's works are not meant in their modern sense but as a type of repetitive calculus (here is to mention that his fundamental work known as <a href="Algebra.html" title="Algebra">algebra</a> was originally titled "<a href="http://en.wikipedia.org/wiki/The_Compendious_Book_on_Calculation_by_Completion_and_Balancing" title="The Compendious Book on Calculation by Completion and Balancing">The Compendious Book on Calculation by Completion and Balancing</a>" describing types of repetitive calculation and <a href="http://en.wikipedia.org/wiki/Quadratic_equations" title="Quadratic equations" class="mw-redirect">quadratic equations</a>). In that sense, algorithms were known in Europe long before Al-Kharizmi. The oldest algorithm known today is the <a href="http://en.wikipedia.org/wiki/Euclidean_algorithm" title="Euclidean algorithm">Euclidean algorithm</a> (see also <a href="http://en.wikipedia.org/wiki/Extended_Euclidean_algorithm" title="Extended Euclidean algorithm">Extended Euclidean algorithm</a>). Before the coining of the term <i>algorithm</i> the Greeks were calling them <i>anthyphairesis</i> literally meaning anti-subtraction or reciprocal subtraction (<a href="http://en.wikipedia.org/wiki/David_Fowler_(mathematician)" title="David Fowler (mathematician)">further reading here</a> and <a rel="nofollow" class="external text" href="http://livetoad.org/Courses/Documents/bb63/Notes/continued_fractions.pdf">here</a>). Algorithms were known to the Greeks centuries before<sup id="cite_ref-62" class="reference"><a href="#cite_note-62"><span>[</span>62<span>]</span></a></sup> Euclid. Instead of the word <i>algebra</i> the Greeks were using the term <i>arithmetica</i> (ἀριθμητική, i.e. in <a href="http://en.wikipedia.org/wiki/Diophantus" title="Diophantus">Diophantus</a>' works the so-called "<a href="http://en.wikipedia.org/wiki/Arithmetica" title="Arithmetica">father of Algebra</a>" - see also Wikipedia's articles <a href="http://en.wikipedia.org/wiki/Diophantine_equation" title="Diophantine equation">Diophantine equation</a> and <a href="http://en.wikipedia.org/wiki/Eudoxus_of_Cnidus" title="Eudoxus of Cnidus">Eudoxos</a>).</p>
<h2><span class="mw-headline" id="History:_Development_of_the_notion_of_.22algorithm.22">History: Development of the notion of "algorithm"</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=26" title="Edit section: History: Development of the notion of &quot;algorithm&quot;">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="Origin">Origin</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=27" title="Edit section: Origin">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The word algorithm comes from the name of the 9th century Persian mathematician <a href="http://en.wikipedia.org/wiki/Al-Khwārizmī" title="Al-Khwārizmī" class="mw-redirect">Abu Abdullah Muhammad ibn Musa Al-Khwarizmi</a>, whose work built upon that of the 7th-century Indian mathematician <a href="http://en.wikipedia.org/wiki/Brahmagupta" title="Brahmagupta">Brahmagupta</a>. The word algorism originally referred only to the rules of performing arithmetic using Hindu–Arabic numerals but evolved via European Latin translation of Al-Khwarizmi's name into algorithm by the 18th century. The use of the word evolved to include all definite procedures for solving problems or performing tasks.<sup id="cite_ref-63" class="reference"><a href="#cite_note-63"><span>[</span>63<span>]</span></a></sup></p>
<h3><span class="mw-headline" id="Discrete_and_distinguishable_symbols">Discrete and distinguishable symbols</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=28" title="Edit section: Discrete and distinguishable symbols">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><b>Tally-marks</b>: To keep track of their flocks, their sacks of grain and their money the ancients used tallying: accumulating stones or marks scratched on sticks, or making discrete symbols in clay. Through the Babylonian and Egyptian use of marks and symbols, eventually <a href="http://en.wikipedia.org/wiki/Roman_numerals" title="Roman numerals">Roman numerals</a> and the <a href="Abacus.html" title="Abacus">abacus</a> evolved (Dilson, p.&#160;16–41). Tally marks appear prominently in <a href="http://en.wikipedia.org/wiki/Unary_numeral_system" title="Unary numeral system">unary numeral system</a> arithmetic used in <a href="Turing_machine.html" title="Turing machine">Turing machine</a> and <a href="http://en.wikipedia.org/wiki/Post–Turing_machine" title="Post–Turing machine">Post–Turing machine</a> computations.</p>
<h3><span class="mw-headline" id="Manipulation_of_symbols_as_.22place_holders.22_for_numbers:_algebra">Manipulation of symbols as "place holders" for numbers: algebra</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=29" title="Edit section: Manipulation of symbols as &quot;place holders&quot; for numbers: algebra">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The work of the ancient <a href="http://en.wikipedia.org/wiki/Greek_mathematics" title="Greek mathematics">Greek geometers</a> (<a href="http://en.wikipedia.org/wiki/Euclidean_algorithm" title="Euclidean algorithm">Euclidean algorithm</a>), the <a href="http://en.wikipedia.org/wiki/List_of_Indian_mathematicians" title="List of Indian mathematicians">Indian mathematician</a> <a href="http://en.wikipedia.org/wiki/Brahmagupta" title="Brahmagupta">Brahmagupta</a>, and the <a href="http://en.wikipedia.org/wiki/Islamic_mathematics" title="Islamic mathematics" class="mw-redirect">Persian mathematician</a> <a href="http://en.wikipedia.org/wiki/Muhammad_ibn_Mūsā_al-Khwārizmī" title="Muhammad ibn Mūsā al-Khwārizmī" class="mw-redirect">Al-Khwarizmi</a> (from whose name the terms "<a href="http://en.wikipedia.org/wiki/Algorism" title="Algorism">algorism</a>" and "algorithm" are derived), and Western European mathematicians culminated in <a href="Gottfried_Leibniz.html" title="Gottfried Leibniz" class="mw-redirect">Leibniz</a>'s notion of the <a href="http://en.wikipedia.org/wiki/Calculus_ratiocinator" title="Calculus ratiocinator">calculus ratiocinator</a> (ca 1680):</p>
<blockquote class="templatequote">
<p>A good century and a half ahead of his time, Leibniz proposed an algebra of logic, an algebra that would specify the rules for manipulating logical concepts in the manner that ordinary algebra specifies the rules for manipulating numbers.<sup id="cite_ref-64" class="reference"><a href="#cite_note-64"><span>[</span>64<span>]</span></a></sup></p>
</blockquote>
<h3><span class="mw-headline" id="Mechanical_contrivances_with_discrete_states">Mechanical contrivances with discrete states</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=30" title="Edit section: Mechanical contrivances with discrete states">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><i>The clock</i>: Bolter credits the invention of the weight-driven <a href="http://en.wikipedia.org/wiki/Clock" title="Clock">clock</a> as "The key invention [of Europe in the Middle Ages]", in particular the <a href="http://en.wikipedia.org/wiki/Verge_escapement" title="Verge escapement">verge escapement</a><sup id="cite_ref-65" class="reference"><a href="#cite_note-65"><span>[</span>65<span>]</span></a></sup> that provides us with the tick and tock of a mechanical clock. "The accurate automatic machine"<sup id="cite_ref-66" class="reference"><a href="#cite_note-66"><span>[</span>66<span>]</span></a></sup> led immediately to "mechanical <a href="Automata_theory.html" title="Automata theory">automata</a>" beginning in the 13th century and finally to "computational machines"—the <a href="Difference_engine.html" title="Difference engine">difference engine</a> and <a href="http://en.wikipedia.org/wiki/Analytical_engine" title="Analytical engine" class="mw-redirect">analytical engines</a> of <a href="Charles_Babbage.html" title="Charles Babbage">Charles Babbage</a> and Countess <a href="Ada_Lovelace.html" title="Ada Lovelace">Ada Lovelace</a>, mid-19th century.<sup id="cite_ref-67" class="reference"><a href="#cite_note-67"><span>[</span>67<span>]</span></a></sup> Lovelace is credited with the first creation of an algorithm intended for processing on a computer - Babbage's analytical engine, the first device considered a real <a href="http://en.wikipedia.org/wiki/Turing-complete" title="Turing-complete" class="mw-redirect">Turing-complete</a> <a href="Computer.html" title="Computer">computer</a> instead of just a <a href="http://en.wikipedia.org/wiki/Calculator" title="Calculator">calculator</a> - and is sometimes called "history's first programmer" as a result, though a full implementation of Babbage's second device would not be realized until decades after her lifetime.</p>
<p><i>Logical machines 1870—<a href="http://en.wikipedia.org/wiki/Stanley_Jevons" title="Stanley Jevons" class="mw-redirect">Stanley Jevons</a>' "logical abacus" and "logical machine"</i>: The technical problem was to reduce <a href="http://en.wikipedia.org/wiki/Boolean_equation" title="Boolean equation" class="mw-redirect">Boolean equations</a> when presented in a form similar to what are now known as <a href="http://en.wikipedia.org/wiki/Karnaugh_map" title="Karnaugh map">Karnaugh maps</a>. Jevons (1880) describes first a simple "abacus" of "slips of wood furnished with pins, contrived so that any part or class of the [logical] combinations can be picked out mechanically . . . More recently however I have reduced the system to a completely mechanical form, and have thus embodied the whole of the indirect process of inference in what may be called a <i>Logical Machine</i>" His machine came equipped with "certain moveable wooden rods" and "at the foot are 21 keys like those of a piano [etc] . . .". With this machine he could analyze a "<a href="http://en.wikipedia.org/wiki/Syllogism" title="Syllogism">syllogism</a> or any other simple logical argument".<sup id="cite_ref-68" class="reference"><a href="#cite_note-68"><span>[</span>68<span>]</span></a></sup></p>
<p>This machine he displayed in 1870 before the Fellows of the Royal Society.<sup id="cite_ref-69" class="reference"><a href="#cite_note-69"><span>[</span>69<span>]</span></a></sup> Another logician <a href="http://en.wikipedia.org/wiki/John_Venn" title="John Venn">John Venn</a>, however, in his 1881 <i>Symbolic Logic</i>, turned a jaundiced eye to this effort: "I have no high estimate myself of the interest or importance of what are sometimes called logical machines ... it does not seem to me that any contrivances at present known or likely to be discovered really deserve the name of logical machines"; see more at <a href="http://en.wikipedia.org/wiki/Algorithm_characterizations" title="Algorithm characterizations">Algorithm characterizations</a>. But not to be outdone he too presented "a plan somewhat analogous, I apprehend, to Prof. Jevon's <i>abacus</i> ... [And] [a]gain, corresponding to Prof. Jevons's logical machine, the following contrivance may be described. I prefer to call it merely a logical-diagram machine ... but I suppose that it could do very completely all that can be rationally expected of any logical machine".<sup id="cite_ref-70" class="reference"><a href="#cite_note-70"><span>[</span>70<span>]</span></a></sup></p>
<p><i>Jacquard loom, Hollerith punch cards, telegraphy and telephony—the electromechanical relay</i>: Bell and Newell (1971) indicate that the <a href="http://en.wikipedia.org/wiki/Jacquard_loom" title="Jacquard loom">Jacquard loom</a> (1801), precursor to <a href="http://en.wikipedia.org/wiki/Hollerith_cards" title="Hollerith cards" class="mw-redirect">Hollerith cards</a> (punch cards, 1887), and "telephone switching technologies" were the roots of a tree leading to the development of the first computers.<sup id="cite_ref-71" class="reference"><a href="#cite_note-71"><span>[</span>71<span>]</span></a></sup> By the mid-19th century the <a href="http://en.wikipedia.org/wiki/Telegraph" title="Telegraph" class="mw-redirect">telegraph</a>, the precursor of the telephone, was in use throughout the world, its discrete and distinguishable encoding of letters as "dots and dashes" a common sound. By the late 19th century the <a href="http://en.wikipedia.org/wiki/Ticker_tape" title="Ticker tape">ticker tape</a> (ca 1870s) was in use, as was the use of Hollerith cards in the 1890 U.S. census. Then came the <a href="http://en.wikipedia.org/wiki/Teleprinter" title="Teleprinter">teleprinter</a> (ca. 1910) with its punched-paper use of <a href="http://en.wikipedia.org/wiki/Baudot_code" title="Baudot code">Baudot code</a> on tape.</p>
<p><i>Telephone-switching networks</i> of electromechanical <a href="http://en.wikipedia.org/wiki/Relay" title="Relay">relays</a> (invented 1835) was behind the work of <a href="http://en.wikipedia.org/wiki/George_Stibitz" title="George Stibitz">George Stibitz</a> (1937), the inventor of the digital adding device. As he worked in Bell Laboratories, he observed the "burdensome' use of mechanical calculators with gears. "He went home one evening in 1937 intending to test his idea... When the tinkering was over, Stibitz had constructed a binary adding device".<sup id="cite_ref-72" class="reference"><a href="#cite_note-72"><span>[</span>72<span>]</span></a></sup></p>
<p>Davis (2000) observes the particular importance of the electromechanical relay (with its two "binary states" <i>open</i> and <i>closed</i>):</p>
<dl>
<dd>It was only with the development, beginning in the 1930s, of electromechanical calculators using electrical relays, that machines were built having the scope Babbage had envisioned."<sup id="cite_ref-73" class="reference"><a href="#cite_note-73"><span>[</span>73<span>]</span></a></sup></dd>
</dl>
<h3><span class="mw-headline" id="Mathematics_during_the_19th_century_up_to_the_mid-20th_century">Mathematics during the 19th century up to the mid-20th century</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=31" title="Edit section: Mathematics during the 19th century up to the mid-20th century">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><i>Symbols and rules</i>: In rapid succession the mathematics of <a href="http://en.wikipedia.org/wiki/George_Boole" title="George Boole">George Boole</a> (1847, 1854), <a href="http://en.wikipedia.org/wiki/Gottlob_Frege" title="Gottlob Frege">Gottlob Frege</a> (1879), and <a href="http://en.wikipedia.org/wiki/Giuseppe_Peano" title="Giuseppe Peano">Giuseppe Peano</a> (1888–1889) reduced arithmetic to a sequence of symbols manipulated by rules. Peano's <i>The principles of arithmetic, presented by a new method</i> (1888) was "the first attempt at an axiomatization of mathematics in a symbolic language".<sup id="cite_ref-74" class="reference"><a href="#cite_note-74"><span>[</span>74<span>]</span></a></sup></p>
<p>But Heijenoort gives Frege (1879) this kudos: Frege's is "perhaps the most important single work ever written in logic. ... in which we see a " 'formula language', that is a <i>lingua characterica</i>, a language written with special symbols, "for pure thought", that is, free from rhetorical embellishments ... constructed from specific symbols that are manipulated according to definite rules".<sup id="cite_ref-75" class="reference"><a href="#cite_note-75"><span>[</span>75<span>]</span></a></sup> The work of Frege was further simplified and amplified by <a href="http://en.wikipedia.org/wiki/Alfred_North_Whitehead" title="Alfred North Whitehead">Alfred North Whitehead</a> and <a href="http://en.wikipedia.org/wiki/Bertrand_Russell" title="Bertrand Russell">Bertrand Russell</a> in their <a href="http://en.wikipedia.org/wiki/Principia_Mathematica" title="Principia Mathematica">Principia Mathematica</a> (1910–1913).</p>
<p><i>The paradoxes</i>: At the same time a number of disturbing paradoxes appeared in the literature, in particular the <a href="http://en.wikipedia.org/wiki/Burali-Forti_paradox" title="Burali-Forti paradox">Burali-Forti paradox</a> (1897), the <a href="http://en.wikipedia.org/wiki/Russell_paradox" title="Russell paradox" class="mw-redirect">Russell paradox</a> (1902–03), and the <a href="http://en.wikipedia.org/wiki/Richard_Paradox" title="Richard Paradox" class="mw-redirect">Richard Paradox</a>.<sup id="cite_ref-76" class="reference"><a href="#cite_note-76"><span>[</span>76<span>]</span></a></sup> The resultant considerations led to <a href="Kurt_G%c3%b6del.html" title="Kurt Gödel">Kurt Gödel</a>'s paper (1931)—he specifically cites the paradox of the liar—that completely reduces rules of <a href="Recursion.html" title="Recursion">recursion</a> to numbers.</p>
<p><i>Effective calculability</i>: In an effort to solve the <a href="http://en.wikipedia.org/wiki/Entscheidungsproblem" title="Entscheidungsproblem">Entscheidungsproblem</a> defined precisely by Hilbert in 1928, mathematicians first set about to define what was meant by an "effective method" or "effective calculation" or "effective calculability" (i.e., a calculation that would succeed). In rapid succession the following appeared: <a href="http://en.wikipedia.org/wiki/Alonzo_Church" title="Alonzo Church">Alonzo Church</a>, <a href="http://en.wikipedia.org/wiki/Stephen_Kleene" title="Stephen Kleene" class="mw-redirect">Stephen Kleene</a> and <a href="http://en.wikipedia.org/wiki/J.B._Rosser" title="J.B. Rosser" class="mw-redirect">J.B. Rosser</a>'s <a href="http://en.wikipedia.org/wiki/Λ-calculus" title="Λ-calculus" class="mw-redirect">λ-calculus</a><sup id="cite_ref-77" class="reference"><a href="#cite_note-77"><span>[</span>77<span>]</span></a></sup> a finely honed definition of "general recursion" from the work of Gödel acting on suggestions of <a href="http://en.wikipedia.org/wiki/Jacques_Herbrand" title="Jacques Herbrand">Jacques Herbrand</a> (cf. Gödel's Princeton lectures of 1934) and subsequent simplifications by Kleene.<sup id="cite_ref-78" class="reference"><a href="#cite_note-78"><span>[</span>78<span>]</span></a></sup> Church's proof<sup id="cite_ref-79" class="reference"><a href="#cite_note-79"><span>[</span>79<span>]</span></a></sup> that the Entscheidungsproblem was unsolvable, <a href="http://en.wikipedia.org/wiki/Emil_Post" title="Emil Post" class="mw-redirect">Emil Post</a>'s definition of effective calculability as a worker mindlessly following a list of instructions to move left or right through a sequence of rooms and while there either mark or erase a paper or observe the paper and make a yes-no decision about the next instruction.<sup id="cite_ref-80" class="reference"><a href="#cite_note-80"><span>[</span>80<span>]</span></a></sup> Alan Turing's proof of that the Entscheidungsproblem was unsolvable by use of his "a- [automatic-] machine"<sup id="cite_ref-81" class="reference"><a href="#cite_note-81"><span>[</span>81<span>]</span></a></sup>—in effect almost identical to Post's "formulation", <a href="http://en.wikipedia.org/wiki/J._Barkley_Rosser" title="J. Barkley Rosser">J. Barkley Rosser</a>'s definition of "effective method" in terms of "a machine".<sup id="cite_ref-82" class="reference"><a href="#cite_note-82"><span>[</span>82<span>]</span></a></sup> <a href="http://en.wikipedia.org/wiki/S._C._Kleene" title="S. C. Kleene" class="mw-redirect">S. C. Kleene</a>'s proposal of a precursor to "<a href="http://en.wikipedia.org/wiki/Church_thesis" title="Church thesis" class="mw-redirect">Church thesis</a>" that he called "Thesis I",<sup id="cite_ref-83" class="reference"><a href="#cite_note-83"><span>[</span>83<span>]</span></a></sup> and a few years later Kleene's renaming his Thesis "Church's Thesis"<sup id="cite_ref-84" class="reference"><a href="#cite_note-84"><span>[</span>84<span>]</span></a></sup> and proposing "Turing's Thesis".<sup id="cite_ref-85" class="reference"><a href="#cite_note-85"><span>[</span>85<span>]</span></a></sup></p>
<h3><span class="mw-headline" id="Emil_Post_.281936.29_and_Alan_Turing_.281936.E2.80.9337.2C_1939.29">Emil Post (1936) and Alan Turing (1936–37, 1939)</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=32" title="Edit section: Emil Post (1936) and Alan Turing (1936–37, 1939)">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Here is a remarkable coincidence of two men not knowing each other but describing a process of men-as-computers working on computations—and they yield virtually identical definitions.</p>
<p><a href="http://en.wikipedia.org/wiki/Emil_Post" title="Emil Post" class="mw-redirect">Emil Post</a> (1936) described the actions of a "computer" (human being) as follows:</p>
<dl>
<dd>"...two concepts are involved: that of a <i>symbol space</i> in which the work leading from problem to answer is to be carried out, and a fixed unalterable <i>set of directions</i>.</dd>
</dl>
<p>His symbol space would be</p>
<dl>
<dd>"a two way infinite sequence of spaces or boxes... The problem solver or worker is to move and work in this symbol space, being capable of being in, and operating in but one box at a time.... a box is to admit of but two possible conditions, i.e., being empty or unmarked, and having a single mark in it, say a vertical stroke.</dd>
</dl>
<dl>
<dd>"One box is to be singled out and called the starting point. ...a specific problem is to be given in symbolic form by a finite number of boxes [i.e., INPUT] being marked with a stroke. Likewise the answer [i.e., OUTPUT] is to be given in symbolic form by such a configuration of marked boxes....</dd>
</dl>
<dl>
<dd>"A set of directions applicable to a general problem sets up a deterministic process when applied to each specific problem. This process terminates only when it comes to the direction of type (C ) [i.e., STOP]".<sup id="cite_ref-86" class="reference"><a href="#cite_note-86"><span>[</span>86<span>]</span></a></sup> See more at <a href="http://en.wikipedia.org/wiki/Post–Turing_machine" title="Post–Turing machine">Post–Turing machine</a></dd>
</dl>
<div class="thumb tright">
<div class="thumbinner" style="width:202px;"><a href="http://en.wikipedia.org/wiki/File:Alan_Turing.jpg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Alan_Turing.jpg/200px-Alan_Turing.jpg" width="200" height="150" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/5/57/Alan_Turing.jpg/300px-Alan_Turing.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/57/Alan_Turing.jpg/400px-Alan_Turing.jpg 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Alan_Turing.jpg" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Alan Turing's statue at <a href="Bletchley_Park.html" title="Bletchley Park">Bletchley Park</a>.</div>
</div>
</div>
<p><a href="Alan_Turing.html" title="Alan Turing">Alan Turing</a>'s work<sup id="cite_ref-87" class="reference"><a href="#cite_note-87"><span>[</span>87<span>]</span></a></sup> preceded that of Stibitz (1937); it is unknown whether Stibitz knew of the work of Turing. Turing's biographer believed that Turing's use of a typewriter-like model derived from a youthful interest: "Alan had dreamt of inventing typewriters as a boy; Mrs. Turing had a typewriter; and he could well have begun by asking himself what was meant by calling a typewriter 'mechanical'".<sup id="cite_ref-88" class="reference"><a href="#cite_note-88"><span>[</span>88<span>]</span></a></sup> Given the prevalence of Morse code and telegraphy, ticker tape machines, and teletypewriters we might conjecture that all were influences.</p>
<p>Turing—his model of computation is now called a <a href="Turing_machine.html" title="Turing machine">Turing machine</a>—begins, as did Post, with an analysis of a human computer that he whittles down to a simple set of basic motions and "states of mind". But he continues a step further and creates a machine as a model of computation of numbers.<sup id="cite_ref-89" class="reference"><a href="#cite_note-89"><span>[</span>89<span>]</span></a></sup></p>
<dl>
<dd>"Computing is normally done by writing certain symbols on paper. We may suppose this paper is divided into squares like a child's arithmetic book....I assume then that the computation is carried out on one-dimensional paper, i.e., on a tape divided into squares. I shall also suppose that the number of symbols which may be printed is finite....</dd>
</dl>
<dl>
<dd>"The behaviour of the computer at any moment is determined by the symbols which he is observing, and his "state of mind" at that moment. We may suppose that there is a bound B to the number of symbols or squares which the computer can observe at one moment. If he wishes to observe more, he must use successive observations. We will also suppose that the number of states of mind which need be taken into account is finite...</dd>
</dl>
<dl>
<dd>"Let us imagine that the operations performed by the computer to be split up into 'simple operations' which are so elementary that it is not easy to imagine them further divided."<sup id="cite_ref-Turing_1936-7_in_Davis_1965:136_90-0" class="reference"><a href="#cite_note-Turing_1936-7_in_Davis_1965:136-90"><span>[</span>90<span>]</span></a></sup></dd>
</dl>
<p>Turing's reduction yields the following:</p>
<dl>
<dd>"The simple operations must therefore include:
<dl>
<dd>"(a) Changes of the symbol on one of the observed squares</dd>
<dd>"(b) Changes of one of the squares observed to another square within L squares of one of the previously observed squares.</dd>
</dl>
</dd>
</dl>
<p>"It may be that some of these change necessarily invoke a change of state of mind. The most general single operation must therefore be taken to be one of the following:</p>
<dl>
<dd>
<dl>
<dd>"(A) A possible change (a) of symbol together with a possible change of state of mind.</dd>
<dd>"(B) A possible change (b) of observed squares, together with a possible change of state of mind"</dd>
</dl>
</dd>
</dl>
<dl>
<dd>"We may now construct a machine to do the work of this computer."<sup id="cite_ref-Turing_1936-7_in_Davis_1965:136_90-1" class="reference"><a href="#cite_note-Turing_1936-7_in_Davis_1965:136-90"><span>[</span>90<span>]</span></a></sup></dd>
</dl>
<p>A few years later, Turing expanded his analysis (thesis, definition) with this forceful expression of it:</p>
<dl>
<dd>"A function is said to be "effectively calculable" if its values can be found by some purely mechanical process. Though it is fairly easy to get an intuitive grasp of this idea, it is nevertheless desirable to have some more definite, mathematical expressible definition . . . [he discusses the history of the definition pretty much as presented above with respect to Gödel, Herbrand, Kleene, Church, Turing and Post] . . . We may take this statement literally, understanding by a purely mechanical process one which could be carried out by a machine. It is possible to give a mathematical description, in a certain normal form, of the structures of these machines. The development of these ideas leads to the author's definition of a computable function, and to an identification of computability † with effective calculability . . . .
<dl>
<dd>"† We shall use the expression "computable function" to mean a function calculable by a machine, and we let "effectively calculable" refer to the intuitive idea without particular identification with any one of these definitions".<sup id="cite_ref-91" class="reference"><a href="#cite_note-91"><span>[</span>91<span>]</span></a></sup></dd>
</dl>
</dd>
</dl>
<h3><span class="mw-headline" id="J._B._Rosser_.281939.29_and_S._C._Kleene_.281943.29">J. B. Rosser (1939) and S. C. Kleene (1943)</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=33" title="Edit section: J. B. Rosser (1939) and S. C. Kleene (1943)">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><i><a href="http://en.wikipedia.org/wiki/J._Barkley_Rosser" title="J. Barkley Rosser">J. Barkley Rosser</a></i> defined an 'effective [mathematical] method' in the following manner (italicization added):</p>
<dl>
<dd>"'Effective method' is used here in the rather special sense of a method each step of which is precisely determined and which is certain to produce the answer in a finite number of steps. With this special meaning, three different precise definitions have been given to date. [his footnote #5; see discussion immediately below]. The simplest of these to state (due to Post and Turing) says essentially that <i>an effective method of solving certain sets of problems exists if one can build a machine which will then solve any problem of the set with no human intervention beyond inserting the question and (later) reading the answer</i>. All three definitions are equivalent, so it doesn't matter which one is used. Moreover, the fact that all three are equivalent is a very strong argument for the correctness of any one." (Rosser 1939:225–6)</dd>
</dl>
<p>Rosser's footnote #5 references the work of (1) Church and Kleene and their definition of λ-definability, in particular Church's use of it in his <i>An Unsolvable Problem of Elementary Number Theory</i> (1936); (2) Herbrand and Gödel and their use of recursion in particular Gödel's use in his famous paper <i>On Formally Undecidable Propositions of Principia Mathematica and Related Systems I</i> (1931); and (3) Post (1936) and Turing (1936–7) in their mechanism-models of computation.</p>
<p><i><a href="http://en.wikipedia.org/wiki/Stephen_C._Kleene" title="Stephen C. Kleene" class="mw-redirect">Stephen C. Kleene</a></i> defined as his now-famous "Thesis I" known as the <a href="http://en.wikipedia.org/wiki/Church–Turing_thesis" title="Church–Turing thesis">Church–Turing thesis</a>. But he did this in the following context (boldface in original):</p>
<dl>
<dd>"12. <i>Algorithmic theories</i>... In setting up a complete algorithmic theory, what we do is to describe a procedure, performable for each set of values of the independent variables, which procedure necessarily terminates and in such manner that from the outcome we can read a definite answer, "yes" or "no," to the question, "is the predicate value true?"" (Kleene 1943:273)</dd>
</dl>
<h3><span class="mw-headline" id="History_after_1950">History after 1950</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=34" title="Edit section: History after 1950">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>A number of efforts have been directed toward further refinement of the definition of "algorithm", and activity is on-going because of issues surrounding, in particular, <a href="http://en.wikipedia.org/wiki/Foundations_of_mathematics" title="Foundations of mathematics">foundations of mathematics</a> (especially the <a href="http://en.wikipedia.org/wiki/Church–Turing_thesis" title="Church–Turing thesis">Church–Turing thesis</a>) and <a href="Philosophy_of_mind.html" title="Philosophy of mind">philosophy of mind</a> (especially arguments around <a href="Artificial_intelligence.html" title="Artificial intelligence">artificial intelligence</a>). For more, see <a href="http://en.wikipedia.org/wiki/Algorithm_characterizations" title="Algorithm characterizations">Algorithm characterizations</a>.</p>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=35" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div style="-moz-column-count:3; column-count:3;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Abstract_machine" title="Abstract machine">Abstract machine</a></li>
<li><a href="http://en.wikipedia.org/wiki/Algorithm_engineering" title="Algorithm engineering">Algorithm engineering</a></li>
<li><a href="http://en.wikipedia.org/wiki/Algorithmic_composition" title="Algorithmic composition">Algorithmic composition</a></li>
<li><a href="http://en.wikipedia.org/wiki/Algorithmic_synthesis" title="Algorithmic synthesis" class="mw-redirect">Algorithmic synthesis</a></li>
<li><a href="Algorithmic_trading.html" title="Algorithmic trading">Algorithmic trading</a></li>
<li><a href="http://en.wikipedia.org/wiki/Garbage_in,_garbage_out" title="Garbage in, garbage out">Garbage in, garbage out</a></li>
<li><i><a href="Introduction_to_Algorithms.html" title="Introduction to Algorithms">Introduction to Algorithms</a></i></li>
<li><a href="http://en.wikipedia.org/wiki/List_of_algorithm_general_topics" title="List of algorithm general topics">List of algorithm general topics</a></li>
<li><a href="http://en.wikipedia.org/wiki/List_of_important_publications_in_theoretical_computer_science#Algorithms" title="List of important publications in theoretical computer science">List of important publications in theoretical computer science - Algorithms</a></li>
<li><a href="http://en.wikipedia.org/wiki/Numerical_Mathematics_Consortium" title="Numerical Mathematics Consortium">Numerical Mathematics Consortium</a></li>
<li><a href="Theory_of_computation.html" title="Theory of computation">Theory of computation</a>
<ul>
<li><a href="Computability_theory.html" title="Computability theory">Computability theory</a></li>
<li><a href="Computational_complexity_theory.html" title="Computational complexity theory">Computational complexity theory</a></li>
</ul>
</li>
</ul>
</div>
<h2><span class="mw-headline" id="Notes">Notes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=36" title="Edit section: Notes">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist columns references-column-width" style="-moz-column-width: 30em; -webkit-column-width: 30em; column-width: 30em; list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text">"Any classical mathematical algorithm, for example, can be described in a finite number of English words" (Rogers 1987:2).</span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text">Well defined with respect to the agent that executes the algorithm: "There is a computing agent, usually human, which can react to the instructions and carry out the computations" (Rogers 1987:2).</span></li>
<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text">"an algorithm is a procedure for computing a <i>function</i> (with respect to some chosen notation for integers) ... this limitation (to numerical functions) results in no loss of generality", (Rogers 1987:1).</span></li>
<li id="cite_note-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-4">^</a></b></span> <span class="reference-text">"An algorithm has <a href="http://en.wikipedia.org/wiki/Zero" title="Zero" class="mw-redirect">zero</a> or more inputs, i.e., <a href="http://en.wikipedia.org/wiki/Quantity" title="Quantity">quantities</a> which are given to it initially before the algorithm begins" (Knuth 1973:5).</span></li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text">"A procedure which has all the characteristics of an algorithm except that it possibly lacks finiteness may be called a 'computational method'" (Knuth 1973:5).</span></li>
<li id="cite_note-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-6">^</a></b></span> <span class="reference-text">"An algorithm has one or more outputs, i.e. quantities which have a specified relation to the inputs" (Knuth 1973:5).</span></li>
<li id="cite_note-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-7">^</a></b></span> <span class="reference-text">Whether or not a process with random interior processes (not including the input) is an algorithm is debatable. Rogers opines that: "a computation is carried out in a discrete stepwise fashion, without use of continuous methods or analogue devices . . . carried forward deterministically, without resort to random methods or devices, e.g., dice" Rogers 1987:2.</span></li>
<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text">Kleene 1943 in Davis 1965:274</span></li>
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text">Rosser 1939 in Davis 1965:225</span></li>
<li id="cite_note-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-10">^</a></b></span> <span class="reference-text"><span class="citation book">Moschovakis, Yiannis N. (2001). <a rel="nofollow" class="external text" href="http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.32.8093">"What is an algorithm?"</a>. In Engquist, B.; Schmid, W. <i>Mathematics Unlimited — 2001 and beyond</i>. Springer. pp.&#160;919–936 (Part II). <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/9783540669135" title="Special:BookSources/9783540669135">9783540669135</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=Mathematics+Unlimited+%E2%80%94+2001+and+beyond&amp;rft.aufirst=Yiannis+N.&amp;rft.aulast=Moschovakis&amp;rft.au=Moschovakis%2C+Yiannis+N.&amp;rft.btitle=What+is+an+algorithm%3F&amp;rft.date=2001&amp;rft.genre=bookitem&amp;rft_id=http%3A%2F%2Fciteseer.ist.psu.edu%2Fviewdoc%2Fsummary%3Fdoi%3D10.1.1.32.8093&amp;rft.isbn=9783540669135&amp;rft.pages=919%E2%80%93936+%28Part+II%29&amp;rft.pub=Springer&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-11"><span class="mw-cite-backlink"><b><a href="#cite_ref-11">^</a></b></span> <span class="reference-text">Stone 1973:4</span></li>
<li id="cite_note-12"><span class="mw-cite-backlink"><b><a href="#cite_ref-12">^</a></b></span> <span class="reference-text">Stone simply requires that "it must terminate in a finite number of steps" (Stone 1973:7–8).</span></li>
<li id="cite_note-13"><span class="mw-cite-backlink"><b><a href="#cite_ref-13">^</a></b></span> <span class="reference-text">Boolos and Jeffrey 1974,1999:19</span></li>
<li id="cite_note-14"><span class="mw-cite-backlink"><b><a href="#cite_ref-14">^</a></b></span> <span class="reference-text">cf Stone 1972:5</span></li>
<li id="cite_note-15"><span class="mw-cite-backlink"><b><a href="#cite_ref-15">^</a></b></span> <span class="reference-text">Knuth 1973:7 states: "In practice we not only want algorithms, we want <i>good</i> algorithms ... one criterion of goodness is the length of time taken to perform the algorithm ... other criteria are the adaptability of the algorithm to computers, its simplicity and elegance, etc."</span></li>
<li id="cite_note-16"><span class="mw-cite-backlink"><b><a href="#cite_ref-16">^</a></b></span> <span class="reference-text">cf Stone 1973:6</span></li>
<li id="cite_note-17"><span class="mw-cite-backlink"><b><a href="#cite_ref-17">^</a></b></span> <span class="reference-text">Stone 1973:7–8 states that there must be, "...a procedure that a robot [i.e., computer] can follow in order to determine precisely how to obey the instruction." Stone adds finiteness of the process, and definiteness (having no ambiguity in the instructions) to this definition.</span></li>
<li id="cite_note-18"><span class="mw-cite-backlink"><b><a href="#cite_ref-18">^</a></b></span> <span class="reference-text">Knuth, loc. cit</span></li>
<li id="cite_note-Minsky_1967:105-19"><span class="mw-cite-backlink"><b><a href="#cite_ref-Minsky_1967:105_19-0">^</a></b></span> <span class="reference-text"><b>Minsky</b> 1967:105</span></li>
<li id="cite_note-20"><span class="mw-cite-backlink"><b><a href="#cite_ref-20">^</a></b></span> <span class="reference-text">Gurevich 2000:1, 3</span></li>
<li id="cite_note-21"><span class="mw-cite-backlink"><b><a href="#cite_ref-21">^</a></b></span> <span class="reference-text">Sipser 2006:157</span></li>
<li id="cite_note-22"><span class="mw-cite-backlink"><b><a href="#cite_ref-22">^</a></b></span> <span class="reference-text">Knuth 1973:7</span></li>
<li id="cite_note-23"><span class="mw-cite-backlink"><b><a href="#cite_ref-23">^</a></b></span> <span class="reference-text">Chaitin 2005:32</span></li>
<li id="cite_note-24"><span class="mw-cite-backlink"><b><a href="#cite_ref-24">^</a></b></span> <span class="reference-text">Rogers 1987:1–2</span></li>
<li id="cite_note-25"><span class="mw-cite-backlink"><b><a href="#cite_ref-25">^</a></b></span> <span class="reference-text">In his essay "Calculations by Man and Machine: Conceptual Analysis" Seig 2002:390 credits this distinction to Robin Gandy, cf Wilfred Seig, et al., 2002 <i>Reflections on the foundations of mathematics: Essays in honor of Solomon Feferman</i>, Association for Symbolic Logic, A. K Peters Ltd, Natick, MA.</span></li>
<li id="cite_note-26"><span class="mw-cite-backlink"><b><a href="#cite_ref-26">^</a></b></span> <span class="reference-text">cf Gandy 1980:126, Robin Gandy <i>Church's Thesis and Principles for Mechanisms</i> appearing on pp. 123–148 in J. Barwise et al. 1980 <i>The Kleene Symposium</i>, North-Holland Publishing Company.</span></li>
<li id="cite_note-27"><span class="mw-cite-backlink"><b><a href="#cite_ref-27">^</a></b></span> <span class="reference-text">A "robot": "A computer is a robot that performs any task that can be described as a sequence of instructions." cf Stone 1972:3</span></li>
<li id="cite_note-28"><span class="mw-cite-backlink"><b><a href="#cite_ref-28">^</a></b></span> <span class="reference-text">Lambek’s "abacus" is a "countably infinite number of locations (holes, wires etc.) together with an unlimited supply of counters (pebbles, beads, etc). The locations are distinguishable, the counters are not". The holes have unlimited capacity, and standing by is an agent who understands and is able to carry out the list of instructions" (Lambek 1961:295). Lambek references Melzak who defines his Q-machine as "an indefinitely large number of locations . . . an indefinitely large supply of counters distributed among these locations, a program, and an operator whose sole purpose is to carry out the program" (Melzak 1961:283). B-B-J (loc. cit.) add the stipulation that the holes are "capable of holding any number of stones" (p. 46). Both Melzak and Lambek appear in <i>The Canadian Mathematical Bulletin</i>, vol. 4, no. 3, September 1961.</span></li>
<li id="cite_note-29"><span class="mw-cite-backlink"><b><a href="#cite_ref-29">^</a></b></span> <span class="reference-text">If no confusion results, the word "counters" can be dropped, and a location can be said to contain a single "number".</span></li>
<li id="cite_note-30"><span class="mw-cite-backlink"><b><a href="#cite_ref-30">^</a></b></span> <span class="reference-text">"We say that an instruction is <i>effective</i> if there is a procedure that the robot can follow in order to determine precisely how to obey the instruction." (Stone 1972:6)</span></li>
<li id="cite_note-31"><span class="mw-cite-backlink"><b><a href="#cite_ref-31">^</a></b></span> <span class="reference-text">cf Minsky 1967: Chapter 11 "Computer models" and Chapter 14 "Very Simple Bases for Computability" pp. 255–281 in particular</span></li>
<li id="cite_note-32"><span class="mw-cite-backlink"><b><a href="#cite_ref-32">^</a></b></span> <span class="reference-text">cf Knuth 1973:3.</span></li>
<li id="cite_note-33"><span class="mw-cite-backlink"><b><a href="#cite_ref-33">^</a></b></span> <span class="reference-text">But always preceded by IF–THEN to avoid improper subtraction.</span></li>
<li id="cite_note-34"><span class="mw-cite-backlink"><b><a href="#cite_ref-34">^</a></b></span> <span class="reference-text">However, a few different assignment instructions (e.g. DECREMENT, INCREMENT and ZERO/CLEAR/EMPTY for a Minsky machine) are also required for Turing-completeness; their exact specification is somewhat up to the designer. The unconditional GOTO is a convenience; it can be constructed by initializing a dedicated location to zero e.g. the instruction " Z ← 0 "; thereafter the instruction IF Z=0 THEN GOTO xxx is unconditional.</span></li>
<li id="cite_note-35"><span class="mw-cite-backlink"><b><a href="#cite_ref-35">^</a></b></span> <span class="reference-text">Knuth 1973:4</span></li>
<li id="cite_note-36"><span class="mw-cite-backlink"><b><a href="#cite_ref-36">^</a></b></span> <span class="reference-text">Stone 1972:5. Methods for extracting roots are not trivial: see <a href="http://en.wikipedia.org/wiki/Methods_of_computing_square_roots" title="Methods of computing square roots">Methods of computing square roots</a>.</span></li>
<li id="cite_note-37"><span class="mw-cite-backlink"><b><a href="#cite_ref-37">^</a></b></span> <span class="reference-text"><span class="citation book">Leeuwen, Jan (1990). <a rel="nofollow" class="external text" href="http://books.google.com/?id=-X39_rA3VSQC"><i>Handbook of Theoretical Computer Science: Algorithms and complexity. Volume A</i></a>. Elsevier. p.&#160;85. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0-444-88071-0" title="Special:BookSources/978-0-444-88071-0">978-0-444-88071-0</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Jan&amp;rft.aulast=Leeuwen&amp;rft.au=Leeuwen%2C+Jan&amp;rft.btitle=Handbook+of+Theoretical+Computer+Science%3A+Algorithms+and+complexity.+Volume+A&amp;rft.date=1990&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fbooks.google.com%2F%3Fid%3D-X39_rA3VSQC&amp;rft.isbn=978-0-444-88071-0&amp;rft.pages=85&amp;rft.pub=Elsevier&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-38"><span class="mw-cite-backlink"><b><a href="#cite_ref-38">^</a></b></span> <span class="reference-text"><a href="http://en.wikipedia.org/wiki/John_G._Kemeny" title="John G. Kemeny">John G. Kemeny</a> and <a href="http://en.wikipedia.org/wiki/Thomas_E._Kurtz" title="Thomas E. Kurtz">Thomas E. Kurtz</a> 1985 <i>Back to Basic: The History, Corruption, and Future of the Language</i>, Addison-Wesley Publishing Company, Inc. Reading, MA, <a href="http://en.wikipedia.org/wiki/Special:BookSources/0201134330" class="internal mw-magiclink-isbn">ISBN 0-201-13433-0</a>.</span></li>
<li id="cite_note-39"><span class="mw-cite-backlink"><b><a href="#cite_ref-39">^</a></b></span> <span class="reference-text">Tausworthe 1977:101</span></li>
<li id="cite_note-40"><span class="mw-cite-backlink"><b><a href="#cite_ref-40">^</a></b></span> <span class="reference-text">Tausworthe 1977:142</span></li>
<li id="cite_note-41"><span class="mw-cite-backlink"><b><a href="#cite_ref-41">^</a></b></span> <span class="reference-text">Knuth 1973 section 1.2.1, expanded by Tausworthe 1977 at pages 100ff and Chapter 9.1</span></li>
<li id="cite_note-42"><span class="mw-cite-backlink"><b><a href="#cite_ref-42">^</a></b></span> <span class="reference-text">cf Tausworthe 1977</span></li>
<li id="cite_note-43"><span class="mw-cite-backlink"><b><a href="#cite_ref-43">^</a></b></span> <span class="reference-text">Heath 1908:300; Hawking’s Dover 2005 edition derives from Heath.</span></li>
<li id="cite_note-44"><span class="mw-cite-backlink"><b><a href="#cite_ref-44">^</a></b></span> <span class="reference-text">" 'Let CD, measuring BF, leave FA less than itself.' This is a neat abbreviation for saying, measure along BA successive lengths equal to CD until a point F is reached such that the length FA remaining is less than CD; in other words, let BF be the largest exact multiple of CD contained in BA" (Heath 1908:297</span></li>
<li id="cite_note-45"><span class="mw-cite-backlink"><b><a href="#cite_ref-45">^</a></b></span> <span class="reference-text">For modern treatments using division in the algorithm see Hardy and Wright 1979:180, Knuth 1973:2 (Volume 1), plus more discussion of Euclid's algorithm in Knuth 1969:293-297 (Volume 2).</span></li>
<li id="cite_note-46"><span class="mw-cite-backlink"><b><a href="#cite_ref-46">^</a></b></span> <span class="reference-text">Euclid covers this question in his Proposition 1.</span></li>
<li id="cite_note-47"><span class="mw-cite-backlink"><b><a href="#cite_ref-47">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://aleph0.clarku.edu/~djoyce/java/elements/bookVII/propVII2.html">"Euclid's Elements, Book VII, Proposition 2"</a>. Aleph0.clarku.edu<span class="reference-accessdate">. Retrieved May 20, 2012</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.btitle=Euclid%27s+Elements%2C+Book+VII%2C+Proposition+2&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Faleph0.clarku.edu%2F~djoyce%2Fjava%2Felements%2FbookVII%2FpropVII2.html&amp;rft.pub=Aleph0.clarku.edu&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-48"><span class="mw-cite-backlink"><b><a href="#cite_ref-48">^</a></b></span> <span class="reference-text">Knuth 1973:13–18. He credits "the formulation of algorithm-proving in terms of asertions and induction" to R. W. Floyd, Peter Naur, C. A. R. Hoare, H. H. Goldstine and J. von Neumann. Tausworth 1977 borrows Knuth's Euclid example and extends Knuth's method in section 9.1 <i>Formal Proofs</i> (pages 288–298).</span></li>
<li id="cite_note-49"><span class="mw-cite-backlink"><b><a href="#cite_ref-49">^</a></b></span> <span class="reference-text">Tausworthe 1997:294</span></li>
<li id="cite_note-50"><span class="mw-cite-backlink"><b><a href="#cite_ref-50">^</a></b></span> <span class="reference-text">cf Knuth 1973:7 (Vol. I), and his more-detailed analyses on pp. 1969:294-313 (Vol II).</span></li>
<li id="cite_note-51"><span class="mw-cite-backlink"><b><a href="#cite_ref-51">^</a></b></span> <span class="reference-text">Breakdown occurs when an algorithm tries to compact itself. Success would solve the <a href="http://en.wikipedia.org/wiki/Halting_problem" title="Halting problem">Halting problem</a>.</span></li>
<li id="cite_note-Hassanieh12-52"><span class="mw-cite-backlink"><b><a href="#cite_ref-Hassanieh12_52-0">^</a></b></span> <span class="reference-text">Haitham Hassanieh, Piotr Indyk, Dina Katabi, and Eric Price, "<a rel="nofollow" class="external text" href="http://siam.omnibooksonline.com/2012SODA/data/papers/500.pdf">ACM-SIAM Symposium On Discrete Algorithms (SODA)</a>, Kyoto, January 2012. See also the <a rel="nofollow" class="external text" href="http://groups.csail.mit.edu/netmit/sFFT/">sFFT Web Page</a>.</span></li>
<li id="cite_note-53"><span class="mw-cite-backlink"><b><a href="#cite_ref-53">^</a></b></span> <span class="reference-text">Kowalski 1979</span></li>
<li id="cite_note-54"><span class="mw-cite-backlink"><b><a href="#cite_ref-54">^</a></b></span> <span class="reference-text"><span class="citation book">Carroll, Sue; Daughtrey, Taz (July 4, 2007). <a rel="nofollow" class="external text" href="http://books.google.com/?id=bz_cl3B05IcC&amp;pg=PA282"><i>Fundamental Concepts for the Software Quality Engineer</i></a>. American Society for Quality. pp.&#160;282 et seq. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0-87389-720-4" title="Special:BookSources/978-0-87389-720-4">978-0-87389-720-4</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Carroll%2C+Sue&amp;rft.au=Daughtrey%2C+Taz&amp;rft.aufirst=Sue&amp;rft.aulast=Carroll&amp;rft.btitle=Fundamental+Concepts+for+the+Software+Quality+Engineer&amp;rft.date=July+4%2C+2007&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fbooks.google.com%2F%3Fid%3Dbz_cl3B05IcC%26pg%3DPA282&amp;rft.isbn=978-0-87389-720-4&amp;rft.pages=282+et+seq.&amp;rft.pub=American+Society+for+Quality&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-55"><span class="mw-cite-backlink"><b><a href="#cite_ref-55">^</a></b></span> <span class="reference-text"><span class="citation book">Tsypkin (1971). <a rel="nofollow" class="external text" href="http://books.google.com/?id=sgDHJlafMskC&amp;pg=PA54"><i>Adaptation and learning in automatic systems</i></a>. Academic Press. p.&#160;54. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0-08-095582-7" title="Special:BookSources/978-0-08-095582-7">978-0-08-095582-7</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aulast=Tsypkin&amp;rft.au=Tsypkin&amp;rft.btitle=Adaptation+and+learning+in+automatic+systems&amp;rft.date=1971&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fbooks.google.com%2F%3Fid%3DsgDHJlafMskC%26pg%3DPA54&amp;rft.isbn=978-0-08-095582-7&amp;rft.pages=54&amp;rft.pub=Academic+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-FOOTNOTEToomer1990.5B.5BCategory:All_articles_with_broken_links_to_citations.5D.5D.3Csup_class.3D.22noprint_Inline-Template.22_style.3D.22white-space:nowrap.3B.22.3E.5B.3Ci.3E.5B.5BTemplate:Harvard_citation_documentation.23Wikilink_to_citation_does_not_work.7C.3Cspan_title.3D.22Template:Harvard_citation_documentation.23Wikilink_to_citation_does_not_work.22.3Ecitation_not_found.3C.2Fspan.3E.5D.5D.3C.2Fi.3E.5D.3C.2Fsup.3E-56"><span class="mw-cite-backlink"><b><a href="#cite_ref-FOOTNOTEToomer1990.5B.5BCategory:All_articles_with_broken_links_to_citations.5D.5D.3Csup_class.3D.22noprint_Inline-Template.22_style.3D.22white-space:nowrap.3B.22.3E.5B.3Ci.3E.5B.5BTemplate:Harvard_citation_documentation.23Wikilink_to_citation_does_not_work.7C.3Cspan_title.3D.22Template:Harvard_citation_documentation.23Wikilink_to_citation_does_not_work.22.3Ecitation_not_found.3C.2Fspan.3E.5D.5D.3C.2Fi.3E.5D.3C.2Fsup.3E_56-0">^</a></b></span> <span class="reference-text"><a href="#CITEREFToomer1990">Toomer 1990</a>,<sup class="noprint Inline-Template" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Template:Harvard_citation_documentation#Wikilink_to_citation_does_not_work" title="Template:Harvard citation documentation"><span title="Template:Harvard citation documentation#Wikilink to citation does not work">citation not found</span></a></i>]</sup>.</span></li>
<li id="cite_note-Hogendijk-57"><span class="mw-cite-backlink"><b><a href="#cite_ref-Hogendijk_57-0">^</a></b></span> <span class="reference-text"><span id="CITEREFHogendijk1998" class="citation journal">Hogendijk, Jan P. (1998). <a rel="nofollow" class="external text" href="http://www.kennislink.nl/web/show?id=116543">"al-Khwarzimi"</a>. <i>Pythagoras</i> <b>38</b> (2): 4–5.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=al-Khwarzimi&amp;rft.aufirst=Jan+P.&amp;rft.au=Hogendijk%2C+Jan+P.&amp;rft.aulast=Hogendijk&amp;rft.date=1998&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fwww.kennislink.nl%2Fweb%2Fshow%3Fid%3D116543&amp;rft.issue=2&amp;rft.jtitle=Pythagoras&amp;rft.pages=4%E2%80%935&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=38" class="Z3988"><span style="display:none;">&#160;</span></span><sup class="noprint Inline-Template"><span style="white-space: nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Link_rot" title="Wikipedia:Link rot"><span title="&#160;since March 2010">dead link</span></a></i>]</span></sup></span></li>
<li id="cite_note-Oaks-58"><span class="mw-cite-backlink"><b><a href="#cite_ref-Oaks_58-0">^</a></b></span> <span class="reference-text"><span class="citation web">Oaks, Jeffrey A. <a rel="nofollow" class="external text" href="http://facstaff.uindy.edu/~oaks/MHMC.htm">"Was al-Khwarizmi an applied algebraist?"</a>. <a href="http://en.wikipedia.org/wiki/University_of_Indianapolis" title="University of Indianapolis">University of Indianapolis</a><span class="reference-accessdate">. Retrieved May 30, 2008</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Jeffrey+A.&amp;rft.aulast=Oaks&amp;rft.au=Oaks%2C+Jeffrey+A.&amp;rft.btitle=Was+al-Khwarizmi+an+applied+algebraist%3F&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Ffacstaff.uindy.edu%2F~oaks%2FMHMC.htm&amp;rft.pub=University+of+Indianapolis&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-59"><span class="mw-cite-backlink"><b><a href="#cite_ref-59">^</a></b></span> <span class="reference-text"><span class="citation book">Brezina, Corona (2006). <a rel="nofollow" class="external text" href="http://books.google.com/?id=955jPgAACAAJ"><i>Al-Khwarizmi: The Inventor Of Algebra</i></a>. The Rosen Publishing Group. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-1-4042-0513-0" title="Special:BookSources/978-1-4042-0513-0">978-1-4042-0513-0</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Brezina%2C+Corona&amp;rft.aufirst=Corona&amp;rft.aulast=Brezina&amp;rft.btitle=Al-Khwarizmi%3A+The+Inventor+Of+Algebra&amp;rft.date=2006&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fbooks.google.com%2F%3Fid%3D955jPgAACAAJ&amp;rft.isbn=978-1-4042-0513-0&amp;rft.pub=The+Rosen+Publishing+Group&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-60"><span class="mw-cite-backlink"><b><a href="#cite_ref-60">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www-history.mcs.st-and.ac.uk/Extras/Boyer_Foremost_Text.html">Foremost mathematical texts in history</a>, according to <a href="http://en.wikipedia.org/wiki/Carl_B._Boyer" title="Carl B. Boyer" class="mw-redirect">Carl B. Boyer</a>.</span></li>
<li id="cite_note-61"><span class="mw-cite-backlink"><b><a href="#cite_ref-61">^</a></b></span> <span class="reference-text">Etymology of algorithm at <a rel="nofollow" class="external text" href="http://dictionary.reference.com/browse/algorithm">Dictionary.Reference.com</a></span></li>
<li id="cite_note-62"><span class="mw-cite-backlink"><b><a href="#cite_ref-62">^</a></b></span> <span class="reference-text">Becker O (1933). "Eudoxus-Studien I. Eine voreuklidische Proportionslehre und ihre Spuren bei Aristoteles und Euklid". Quellen und Studien zur Geschichte der Mathematik B 2: 311–333.</span></li>
<li id="cite_note-63"><span class="mw-cite-backlink"><b><a href="#cite_ref-63">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://www.scriptol.com/programming/algorithm-history.php">"History of Algorithms and Algorithmics"</a>. Scriptol.com<span class="reference-accessdate">. Retrieved November 7, 2012</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.btitle=History+of+Algorithms+and+Algorithmics&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.scriptol.com%2Fprogramming%2Falgorithm-history.php&amp;rft.pub=Scriptol.com&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-64"><span class="mw-cite-backlink"><b><a href="#cite_ref-64">^</a></b></span> <span class="reference-text">Davis 2000:18</span></li>
<li id="cite_note-65"><span class="mw-cite-backlink"><b><a href="#cite_ref-65">^</a></b></span> <span class="reference-text">Bolter 1984:24</span></li>
<li id="cite_note-66"><span class="mw-cite-backlink"><b><a href="#cite_ref-66">^</a></b></span> <span class="reference-text">Bolter 1984:26</span></li>
<li id="cite_note-67"><span class="mw-cite-backlink"><b><a href="#cite_ref-67">^</a></b></span> <span class="reference-text">Bolter 1984:33–34, 204–206.</span></li>
<li id="cite_note-68"><span class="mw-cite-backlink"><b><a href="#cite_ref-68">^</a></b></span> <span class="reference-text">All quotes from W. Stanley Jevons 1880 <i>Elementary Lessons in Logic: Deductive and Inductive</i>, Macmillan and Co., London and New York. Republished as a googlebook; cf Jevons 1880:199–201. Louis Couturat 1914 <i>the Algebra of Logic</i>, The Open Court Publishing Company, Chicago and London. Republished as a googlebook; cf Couturat 1914:75–76 gives a few more details; interestingly he compares this to a typewriter as well as a piano. Jevons states that the account is to be found at Jan . 20, 1870 <i>The Proceedings of the Royal Society</i>.</span></li>
<li id="cite_note-69"><span class="mw-cite-backlink"><b><a href="#cite_ref-69">^</a></b></span> <span class="reference-text">Jevons 1880:199–200</span></li>
<li id="cite_note-70"><span class="mw-cite-backlink"><b><a href="#cite_ref-70">^</a></b></span> <span class="reference-text">All quotes from John Venn 1881 <i>Symbolic Logic</i>, Macmillan and Co., London. Republished as a googlebook. cf Venn 1881:120–125. The interested reader can find a deeper explanation in those pages.</span></li>
<li id="cite_note-71"><span class="mw-cite-backlink"><b><a href="#cite_ref-71">^</a></b></span> <span class="reference-text">Bell and Newell diagram 1971:39, cf. Davis 2000</span></li>
<li id="cite_note-72"><span class="mw-cite-backlink"><b><a href="#cite_ref-72">^</a></b></span> <span class="reference-text">* Melina Hill, Valley News Correspondent, <i>A Tinkerer Gets a Place in History</i>, Valley News West Lebanon NH, Thursday March 31, 1983, page 13.</span></li>
<li id="cite_note-73"><span class="mw-cite-backlink"><b><a href="#cite_ref-73">^</a></b></span> <span class="reference-text">Davis 2000:14</span></li>
<li id="cite_note-74"><span class="mw-cite-backlink"><b><a href="#cite_ref-74">^</a></b></span> <span class="reference-text">van Heijenoort 1967:81ff</span></li>
<li id="cite_note-75"><span class="mw-cite-backlink"><b><a href="#cite_ref-75">^</a></b></span> <span class="reference-text">van Heijenoort's commentary on Frege's <i>Begriffsschrift, a formula language, modeled upon that of arithmetic, for pure thought</i> in van Heijenoort 1967:1</span></li>
<li id="cite_note-76"><span class="mw-cite-backlink"><b><a href="#cite_ref-76">^</a></b></span> <span class="reference-text">Dixon 1906, cf. Kleene 1952:36–40</span></li>
<li id="cite_note-77"><span class="mw-cite-backlink"><b><a href="#cite_ref-77">^</a></b></span> <span class="reference-text">cf. footnote in Alonzo Church 1936a in Davis 1965:90 and 1936b in Davis 1965:110</span></li>
<li id="cite_note-78"><span class="mw-cite-backlink"><b><a href="#cite_ref-78">^</a></b></span> <span class="reference-text">Kleene 1935–6 in Davis 1965:237ff, Kleene 1943 in Davis 1965:255ff</span></li>
<li id="cite_note-79"><span class="mw-cite-backlink"><b><a href="#cite_ref-79">^</a></b></span> <span class="reference-text">Church 1936 in Davis 1965:88ff</span></li>
<li id="cite_note-80"><span class="mw-cite-backlink"><b><a href="#cite_ref-80">^</a></b></span> <span class="reference-text">cf. "Formulation I", Post 1936 in Davis 1965:289–290</span></li>
<li id="cite_note-81"><span class="mw-cite-backlink"><b><a href="#cite_ref-81">^</a></b></span> <span class="reference-text">Turing 1936–7 in Davis 1965:116ff</span></li>
<li id="cite_note-82"><span class="mw-cite-backlink"><b><a href="#cite_ref-82">^</a></b></span> <span class="reference-text">Rosser 1939 in Davis 1965:226</span></li>
<li id="cite_note-83"><span class="mw-cite-backlink"><b><a href="#cite_ref-83">^</a></b></span> <span class="reference-text">Kleene 1943 in Davis 1965:273–274</span></li>
<li id="cite_note-84"><span class="mw-cite-backlink"><b><a href="#cite_ref-84">^</a></b></span> <span class="reference-text">Kleene 1952:300, 317</span></li>
<li id="cite_note-85"><span class="mw-cite-backlink"><b><a href="#cite_ref-85">^</a></b></span> <span class="reference-text">Kleene 1952:376</span></li>
<li id="cite_note-86"><span class="mw-cite-backlink"><b><a href="#cite_ref-86">^</a></b></span> <span class="reference-text">Turing 1936–7 in Davis 1965:289–290</span></li>
<li id="cite_note-87"><span class="mw-cite-backlink"><b><a href="#cite_ref-87">^</a></b></span> <span class="reference-text">Turing 1936 in Davis 1965, Turing 1939 in Davis 1965:160</span></li>
<li id="cite_note-88"><span class="mw-cite-backlink"><b><a href="#cite_ref-88">^</a></b></span> <span class="reference-text">Hodges, p. 96</span></li>
<li id="cite_note-89"><span class="mw-cite-backlink"><b><a href="#cite_ref-89">^</a></b></span> <span class="reference-text">Turing 1936–7:116</span></li>
<li id="cite_note-Turing_1936-7_in_Davis_1965:136-90"><span class="mw-cite-backlink">^ <a href="#cite_ref-Turing_1936-7_in_Davis_1965:136_90-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Turing_1936-7_in_Davis_1965:136_90-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">Turing 1936–7 in Davis 1965:136</span></li>
<li id="cite_note-91"><span class="mw-cite-backlink"><b><a href="#cite_ref-91">^</a></b></span> <span class="reference-text">Turing 1939 in Davis 1965:160</span></li>
</ol>
</div>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=37" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="refbegin columns references-column-width" style="-moz-column-width: 30em; -webkit-column-width: 30em; column-width: 30em;">
<ul>
<li>Axt, P. (1959) On a Subrecursive Hierarchy and Primitive Recursive Degrees, <i>Transactions of the American Mathematical Society</i> 92, pp.&#160;85–105</li>
<li>Bell, C. Gordon and Newell, Allen (1971), <i>Computer Structures: Readings and Examples</i>, McGraw-Hill Book Company, New York. <a href="http://en.wikipedia.org/wiki/Special:BookSources/0070043574" class="internal mw-magiclink-isbn">ISBN 0-07-004357-4</a>.</li>
<li><span id="CITEREFBellah1985" class="citation book"><a href="http://en.wikipedia.org/wiki/Robert_N._Bellah" title="Robert N. Bellah" class="mw-redirect">Bellah, Robert Neelly</a> (1985). <a rel="nofollow" class="external text" href="http://books.google.com/books?id=XsUojihVZQcC"><i>Habits of the Heart: Individualism and Commitment in American Life</i></a>. Berkeley: University of California Press. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0-520-25419-0" title="Special:BookSources/978-0-520-25419-0">978-0-520-25419-0</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Bellah%2C+Robert+Neelly&amp;rft.aufirst=Robert+Neelly&amp;rft.aulast=Bellah&amp;rft.btitle=Habits+of+the+Heart%3A+Individualism+and+Commitment+in+American+Life&amp;rft.date=1985&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fbooks.google.com%2Fbooks%3Fid%3DXsUojihVZQcC&amp;rft.isbn=978-0-520-25419-0&amp;rft.place=Berkeley&amp;rft.pub=University+of+California+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation journal"><a href="http://en.wikipedia.org/wiki/Andreas_Blass" title="Andreas Blass">Blass, Andreas</a>; <a href="http://en.wikipedia.org/wiki/Yuri_Gurevich" title="Yuri Gurevich">Gurevich, Yuri</a> (2003). <a rel="nofollow" class="external text" href="http://research.microsoft.com/~gurevich/Opera/164.pdf">"Algorithms: A Quest for Absolute Definitions"</a>. <i>Bulletin of European Association for Theoretical Computer Science</i> <b>81</b>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=Algorithms%3A+A+Quest+for+Absolute+Definitions&amp;rft.au=Blass%2C+Andreas&amp;rft.aufirst=Andreas&amp;rft.au=Gurevich%2C+Yuri&amp;rft.aulast=Blass&amp;rft.date=2003&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fresearch.microsoft.com%2F~gurevich%2FOpera%2F164.pdf&amp;rft.jtitle=Bulletin+of+European+Association+for+Theoretical+Computer+Science&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=81" class="Z3988"><span style="display:none;">&#160;</span></span> Includes an excellent bibliography of 56 references.</li>
<li><span id="CITEREFBoolosJeffrey" class="citation book"><a href="http://en.wikipedia.org/wiki/George_Boolos" title="George Boolos">Boolos, George</a>; <a href="http://en.wikipedia.org/wiki/Richard_Jeffrey" title="Richard Jeffrey">Jeffrey, Richard</a> (1974, 1999). <i>Computability and Logic</i> (4th ed.). Cambridge University Press, London. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-521-20402-X" title="Special:BookSources/0-521-20402-X">0-521-20402-X</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Boolos%2C+George&amp;rft.aufirst=George&amp;rft.au=Jeffrey%2C+Richard&amp;rft.aulast=Boolos&amp;rft.btitle=Computability+and+Logic&amp;rft.date=1974%2C+1999&amp;rft.edition=4th&amp;rft.genre=book&amp;rft.isbn=0-521-20402-X&amp;rft.pub=Cambridge+University+Press%2C+London&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span> <span style="display:none;font-size:100%" class="error citation-comment">Check date values in: <code>|date=</code> (<a href="http://en.wikipedia.org/wiki/Help:CS1_errors#bad_date" title="Help:CS1 errors">help</a>)</span>: cf. Chapter 3 <i>Turing machines</i> where they discuss "certain enumerable sets not effectively (mechanically) enumerable".</li>
<li><span class="citation book">Burgin, Mark (2004). <i>Super-Recursive Algorithms</i>. Springer. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0-387-95569-8" title="Special:BookSources/978-0-387-95569-8">978-0-387-95569-8</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Burgin%2C+Mark&amp;rft.aufirst=Mark&amp;rft.aulast=Burgin&amp;rft.btitle=Super-Recursive+Algorithms&amp;rft.date=2004&amp;rft.genre=book&amp;rft.isbn=978-0-387-95569-8&amp;rft.pub=Springer&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li>Campagnolo, M.L., <a href="http://en.wikipedia.org/wiki/Cris_Moore" title="Cris Moore" class="mw-redirect">Moore, C.</a>, and Costa, J.F. (2000) An analog characterization of the subrecursive functions. In <i>Proc. of the 4th Conference on Real Numbers and Computers</i>, Odense University, pp.&#160;91–109</li>
<li><span class="citation journal"><a href="http://en.wikipedia.org/wiki/Alonzo_Church" title="Alonzo Church">Church, Alonzo</a> (1936a). "An Unsolvable Problem of Elementary Number Theory". <i>The American Journal of Mathematics</i> <b>58</b> (2): 345–363. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.2307%2F2371045">10.2307/2371045</a>. <a href="http://en.wikipedia.org/wiki/JSTOR" title="JSTOR">JSTOR</a>&#160;<a rel="nofollow" class="external text" href="http://www.jstor.org/stable/2371045">2371045</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=An+Unsolvable+Problem+of+Elementary+Number+Theory&amp;rft.au=Church%2C+Alonzo&amp;rft.aufirst=Alonzo&amp;rft.aulast=Church&amp;rft.date=1936a&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.2307%2F2371045&amp;rft.issue=2&amp;rft.jstor=2371045&amp;rft.jtitle=The+American+Journal+of+Mathematics&amp;rft.pages=345%E2%80%93363&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=58" class="Z3988"><span style="display:none;">&#160;</span></span> Reprinted in <i>The Undecidable</i>, p.&#160;89ff. The first expression of "Church's Thesis". See in particular page 100 (<i>The Undecidable</i>) where he defines the notion of "effective calculability" in terms of "an algorithm", and he uses the word "terminates", etc.</li>
<li><span class="citation journal"><a href="http://en.wikipedia.org/wiki/Alonzo_Church" title="Alonzo Church">Church, Alonzo</a> (1936b). "A Note on the Entscheidungsproblem". <i>The Journal of Symbolic Logic</i> <b>1</b> (1): 40–41. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.2307%2F2269326">10.2307/2269326</a>. <a href="http://en.wikipedia.org/wiki/JSTOR" title="JSTOR">JSTOR</a>&#160;<a rel="nofollow" class="external text" href="http://www.jstor.org/stable/2269326">2269326</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=A+Note+on+the+Entscheidungsproblem&amp;rft.au=Church%2C+Alonzo&amp;rft.aufirst=Alonzo&amp;rft.aulast=Church&amp;rft.date=1936b&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.2307%2F2269326&amp;rft.issue=1&amp;rft.jstor=2269326&amp;rft.jtitle=The+Journal+of+Symbolic+Logic&amp;rft.pages=40%E2%80%9341&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=1" class="Z3988"><span style="display:none;">&#160;</span></span> <span class="citation journal">Church, Alonzo (1936). "Correction to a Note on the Entscheidungsproblem". <i>The Journal of Symbolic Logic</i> <b>1</b> (3): 101–102. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.2307%2F2269030">10.2307/2269030</a>. <a href="http://en.wikipedia.org/wiki/JSTOR" title="JSTOR">JSTOR</a>&#160;<a rel="nofollow" class="external text" href="http://www.jstor.org/stable/2269030">2269030</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=Correction+to+a+Note+on+the+Entscheidungsproblem&amp;rft.au=Church%2C+Alonzo&amp;rft.aufirst=Alonzo&amp;rft.aulast=Church&amp;rft.date=1936&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.2307%2F2269030&amp;rft.issue=3&amp;rft.jstor=2269030&amp;rft.jtitle=The+Journal+of+Symbolic+Logic&amp;rft.pages=101%E2%80%93102&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=1" class="Z3988"><span style="display:none;">&#160;</span></span> Reprinted in <i>The Undecidable</i>, p.&#160;110ff. Church shows that the Entscheidungsproblem is unsolvable in about 3 pages of text and 3 pages of footnotes.</li>
<li><span class="citation book">Daffa', Ali Abdullah al- (1977). <i>The Muslim contribution to mathematics</i>. London: Croom Helm. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-85664-464-1" title="Special:BookSources/0-85664-464-1">0-85664-464-1</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Daffa%27%2C+Ali+Abdullah+al-&amp;rft.aufirst=Ali+Abdullah+al-&amp;rft.aulast=Daffa%27&amp;rft.btitle=The+Muslim+contribution+to+mathematics&amp;rft.date=1977&amp;rft.genre=book&amp;rft.isbn=0-85664-464-1&amp;rft.place=London&amp;rft.pub=Croom+Helm&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation book"><a href="http://en.wikipedia.org/wiki/Martin_Davis" title="Martin Davis">Davis, Martin</a> (1965). <i>The Undecidable: Basic Papers On Undecidable Propositions, Unsolvable Problems and Computable Functions</i>. New York: Raven Press. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-486-43228-9" title="Special:BookSources/0-486-43228-9">0-486-43228-9</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Davis%2C+Martin&amp;rft.aufirst=Martin&amp;rft.aulast=Davis&amp;rft.btitle=The+Undecidable%3A+Basic+Papers+On+Undecidable+Propositions%2C+Unsolvable+Problems+and+Computable+Functions&amp;rft.date=1965&amp;rft.genre=book&amp;rft.isbn=0-486-43228-9&amp;rft.place=New+York&amp;rft.pub=Raven+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span> Davis gives commentary before each article. Papers of <a href="http://en.wikipedia.org/wiki/Gödel" title="Gödel" class="mw-redirect">Gödel</a>, <a href="http://en.wikipedia.org/wiki/Alonzo_Church" title="Alonzo Church">Alonzo Church</a>, <a href="Alan_Turing.html" title="Alan Turing">Turing</a>, <a href="http://en.wikipedia.org/wiki/J._Barkley_Rosser" title="J. Barkley Rosser">Rosser</a>, <a href="http://en.wikipedia.org/wiki/Kleene" title="Kleene" class="mw-redirect">Kleene</a>, and <a href="http://en.wikipedia.org/wiki/Emil_Post" title="Emil Post" class="mw-redirect">Emil Post</a> are included; those cited in the article are listed here by author's name.</li>
<li><span class="citation book"><a href="http://en.wikipedia.org/wiki/Martin_Davis" title="Martin Davis">Davis, Martin</a> (2000). <i>Engines of Logic: Mathematicians and the Origin of the Computer</i>. New York: W. W. Nortion. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-393-32229-7" title="Special:BookSources/0-393-32229-7">0-393-32229-7</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Davis%2C+Martin&amp;rft.aufirst=Martin&amp;rft.aulast=Davis&amp;rft.btitle=Engines+of+Logic%3A+Mathematicians+and+the+Origin+of+the+Computer&amp;rft.date=2000&amp;rft.genre=book&amp;rft.isbn=0-393-32229-7&amp;rft.place=New+York&amp;rft.pub=W.+W.+Nortion&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span> Davis offers concise biographies of <a href="Gottfried_Leibniz.html" title="Gottfried Leibniz" class="mw-redirect">Leibniz</a>, <a href="http://en.wikipedia.org/wiki/George_Boole" title="George Boole">Boole</a>, <a href="http://en.wikipedia.org/wiki/Gottlob_Frege" title="Gottlob Frege">Frege</a>, <a href="http://en.wikipedia.org/wiki/Georg_Cantor" title="Georg Cantor">Cantor</a>, <a href="http://en.wikipedia.org/wiki/David_Hilbert" title="David Hilbert">Hilbert</a>, Gödel and Turing with <a href="http://en.wikipedia.org/wiki/John_von_Neumann" title="John von Neumann">von Neumann</a> as the show-stealing villain. Very brief bios of <a href="http://en.wikipedia.org/wiki/Joseph-Marie_Jacquard" title="Joseph-Marie Jacquard" class="mw-redirect">Joseph-Marie Jacquard</a>, <a href="http://en.wikipedia.org/wiki/Babbage" title="Babbage" class="mw-redirect">Babbage</a>, <a href="Ada_Lovelace.html" title="Ada Lovelace">Ada Lovelace</a>, <a href="Claude_Shannon.html" title="Claude Shannon">Claude Shannon</a>, <a href="Howard_Aiken.html" title="Howard Aiken" class="mw-redirect">Howard Aiken</a>, etc.</li>
<li>Paul E. Black, <a rel="nofollow" class="external text" href="http://www.nist.gov/dads/HTML/algorithm.html">algorithm</a> at the <a href="http://en.wikipedia.org/wiki/National_Institute_of_Standards_and_Technology" title="National Institute of Standards and Technology">NIST</a> <a href="Dictionary_of_Algorithms_and_Data_Structures.html" title="Dictionary of Algorithms and Data Structures">Dictionary of Algorithms and Data Structures</a>.</li>
<li><span class="citation journal">Dean, Tim (2012). "Evolution and moral diversity". <i>Baltic International Yearbook of Cognition, Logic and Communication</i> <b>7</b>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=Evolution+and+moral+diversity&amp;rft.au=Dean%2C+Tim&amp;rft.aulast=Dean%2C+Tim&amp;rft.date=2012&amp;rft.genre=article&amp;rft.jtitle=Baltic+International+Yearbook+of+Cognition%2C+Logic+and+Communication&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=7" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation book"><a href="http://en.wikipedia.org/wiki/Daniel_Dennett" title="Daniel Dennett">Dennett, Daniel</a> (1995). <i>Darwin's Dangerous Idea</i>. New York: Touchstone/Simon &amp; Schuster. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-684-80290-2" title="Special:BookSources/0-684-80290-2">0-684-80290-2</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Dennett%2C+Daniel&amp;rft.aufirst=Daniel&amp;rft.aulast=Dennett&amp;rft.btitle=Darwin%27s+Dangerous+Idea&amp;rft.date=1995&amp;rft.genre=book&amp;rft.isbn=0-684-80290-2&amp;rft.place=New+York&amp;rft.pub=Touchstone%2FSimon+%26+Schuster&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><a href="http://en.wikipedia.org/wiki/Yuri_Gurevich" title="Yuri Gurevich">Yuri Gurevich</a>, <a rel="nofollow" class="external text" href="http://research.microsoft.com/~gurevich/Opera/141.pdf"><i>Sequential Abstract State Machines Capture Sequential Algorithms</i></a>, ACM Transactions on Computational Logic, Vol 1, no 1 (July 2000), pages 77–111. Includes bibliography of 33 sources.</li>
<li><span id="CITEREFHertzkeMcRorie1998" class="citation book">Hertzke, Allen D.; McRorie, Chris (1998). "The Concept of Moral Ecology". In Lawler, Peter Augustine; McConkey, Dale. <i>Community and Political Thought Today</i>. Westort, CT: <a href="http://en.wikipedia.org/wiki/Praeger" title="Praeger" class="mw-redirect">Praeger</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=Community+and+Political+Thought+Today&amp;rft.aufirst=Allen+D.&amp;rft.au=Hertzke%2C+Allen+D.&amp;rft.aulast=Hertzke&amp;rft.au=McRorie%2C+Chris&amp;rft.btitle=The+Concept+of+Moral+Ecology&amp;rft.date=1998&amp;rft.genre=bookitem&amp;rft.place=Westort%2C+CT&amp;rft.pub=Praeger&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation journal"><a href="http://en.wikipedia.org/wiki/Stephen_Kleene" title="Stephen Kleene" class="mw-redirect">Kleene, Stephen C.</a> (1936). <a rel="nofollow" class="external text" href="http://gdz.sub.uni-goettingen.de/index.php?id=11&amp;PPN=GDZPPN002278499&amp;L=1">"General Recursive Functions of Natural Numbers"</a>. <i>Mathematische Annalen</i> <b>112</b> (5): 727–742. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1007%2FBF01565439">10.1007/BF01565439</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=General+Recursive+Functions+of+Natural+Numbers&amp;rft.aufirst=Stephen+C.&amp;rft.au=Kleene%2C+Stephen+C.&amp;rft.aulast=Kleene&amp;rft.date=1936&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fgdz.sub.uni-goettingen.de%2Findex.php%3Fid%3D11%26PPN%3DGDZPPN002278499%26L%3D1&amp;rft_id=info%3Adoi%2F10.1007%2FBF01565439&amp;rft.issue=5&amp;rft.jtitle=Mathematische+Annalen&amp;rft.pages=727%E2%80%93742&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=112" class="Z3988"><span style="display:none;">&#160;</span></span> Presented to the American Mathematical Society, September 1935. Reprinted in <i>The Undecidable</i>, p.&#160;237ff. Kleene's definition of "general recursion" (known now as mu-recursion) was used by Church in his 1935 paper <i>An Unsolvable Problem of Elementary Number Theory</i> that proved the "decision problem" to be "undecidable" (i.e., a negative result).</li>
<li><span class="citation journal"><a href="http://en.wikipedia.org/wiki/Stephen_Kleene" title="Stephen Kleene" class="mw-redirect">Kleene, Stephen C.</a> (1943). "Recursive Predicates and Quantifiers". <i>American Mathematical Society Transactions</i> <b>54</b> (1): 41–73. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.2307%2F1990131">10.2307/1990131</a>. <a href="http://en.wikipedia.org/wiki/JSTOR" title="JSTOR">JSTOR</a>&#160;<a rel="nofollow" class="external text" href="http://www.jstor.org/stable/1990131">1990131</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=Recursive+Predicates+and+Quantifiers&amp;rft.aufirst=Stephen+C.&amp;rft.au=Kleene%2C+Stephen+C.&amp;rft.aulast=Kleene&amp;rft.date=1943&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.2307%2F1990131&amp;rft.issue=1&amp;rft.jstor=1990131&amp;rft.jtitle=American+Mathematical+Society+Transactions&amp;rft.pages=41%E2%80%9373&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=54" class="Z3988"><span style="display:none;">&#160;</span></span> Reprinted in <i>The Undecidable</i>, p.&#160;255ff. Kleene refined his definition of "general recursion" and proceeded in his chapter "12. Algorithmic theories" to posit "Thesis I" (p.&#160;274); he would later repeat this thesis (in Kleene 1952:300) and name it "Church's Thesis"(Kleene 1952:317) (i.e., the <a href="http://en.wikipedia.org/wiki/Church_thesis" title="Church thesis" class="mw-redirect">Church thesis</a>).</li>
<li><span class="citation book"><a href="http://en.wikipedia.org/wiki/Kleene" title="Kleene" class="mw-redirect">Kleene, Stephen C.</a> (First Edition 1952). <i>Introduction to Metamathematics</i> (Tenth Edition 1991 ed.). North-Holland Publishing Company. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-7204-2103-9" title="Special:BookSources/0-7204-2103-9">0-7204-2103-9</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Stephen+C.&amp;rft.au=Kleene%2C+Stephen+C.&amp;rft.aulast=Kleene&amp;rft.btitle=Introduction+to+Metamathematics&amp;rft.date=First+Edition+1952&amp;rft.edition=Tenth+Edition+1991&amp;rft.genre=book&amp;rft.isbn=0-7204-2103-9&amp;rft.pub=North-Holland+Publishing+Company&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span> <span style="display:none;font-size:100%" class="error citation-comment">Check date values in: <code>|date=</code> (<a href="http://en.wikipedia.org/wiki/Help:CS1_errors#bad_date" title="Help:CS1 errors">help</a>)</span> Excellent—accessible, readable—reference source for mathematical "foundations".</li>
<li><span class="citation book"><a href="Donald_Knuth.html" title="Donald Knuth">Knuth, Donald</a> (1997). <i>Fundamental Algorithms, Third Edition</i>. Reading, Massachusetts: Addison–Wesley. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-201-89683-4" title="Special:BookSources/0-201-89683-4">0-201-89683-4</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Donald&amp;rft.au=Knuth%2C+Donald&amp;rft.aulast=Knuth&amp;rft.btitle=Fundamental+Algorithms%2C+Third+Edition&amp;rft.date=1997&amp;rft.genre=book&amp;rft.isbn=0-201-89683-4&amp;rft.place=Reading%2C+Massachusetts&amp;rft.pub=Addison%E2%80%93Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation book"><a href="Donald_Knuth.html" title="Donald Knuth">Knuth, Donald</a> (1969). <i>Volume 2/Seminumerical Algorithms, The Art of Computer Programming First Edition</i>. Reading, Massachusetts: Addison–Wesley.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Donald&amp;rft.au=Knuth%2C+Donald&amp;rft.aulast=Knuth&amp;rft.btitle=Volume+2%2FSeminumerical+Algorithms%2C+The+Art+of+Computer+Programming+First+Edition&amp;rft.date=1969&amp;rft.genre=book&amp;rft.place=Reading%2C+Massachusetts&amp;rft.pub=Addison%E2%80%93Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li>Kosovsky, N. K. <i>Elements of Mathematical Logic and its Application to the theory of Subrecursive Algorithms</i>, LSU Publ., Leningrad, 1981</li>
<li><span class="citation journal"><a href="http://en.wikipedia.org/wiki/Robert_Kowalski" title="Robert Kowalski">Kowalski, Robert</a> (1979). "Algorithm=Logic+Control". <i><a href="Communications_of_the_ACM.html" title="Communications of the ACM">Communications of the ACM</a></i> <b>22</b> (7): 424–436. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1145%2F359131.359136">10.1145/359131.359136</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=Algorithm%3DLogic%2BControl&amp;rft.aufirst=Robert&amp;rft.au=Kowalski%2C+Robert&amp;rft.aulast=Kowalski&amp;rft.date=1979&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1145%2F359131.359136&amp;rft.issue=7&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.pages=424%E2%80%93436&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=22" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><a href="http://en.wikipedia.org/wiki/A._A._Markov" title="A. A. Markov" class="mw-redirect">A. A. Markov</a> (1954) <i>Theory of algorithms</i>. [Translated by Jacques J. Schorr-Kon and PST staff] Imprint Moscow, Academy of Sciences of the USSR, 1954 [i.e., Jerusalem, Israel Program for Scientific Translations, 1961; available from the Office of Technical Services, U.S. Dept. of Commerce, Washington] Description 444 p.&#160;28&#160;cm. Added t.p. in Russian Translation of Works of the Mathematical Institute, Academy of Sciences of the USSR, v. 42. Original title: Teoriya algerifmov. [QA248.M2943 Dartmouth College library. U.S. Dept. of Commerce, Office of Technical Services, number OTS 60-51085.]</li>
<li><span class="citation book"><a href="http://en.wikipedia.org/wiki/Marvin_Minsky" title="Marvin Minsky">Minsky, Marvin</a> (1967). <i>Computation: Finite and Infinite Machines</i> (First ed.). Prentice-Hall, Englewood Cliffs, NJ. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-13-165449-7" title="Special:BookSources/0-13-165449-7">0-13-165449-7</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Marvin&amp;rft.aulast=Minsky&amp;rft.au=Minsky%2C+Marvin&amp;rft.btitle=Computation%3A+Finite+and+Infinite+Machines&amp;rft.date=1967&amp;rft.edition=First&amp;rft.genre=book&amp;rft.isbn=0-13-165449-7&amp;rft.pub=Prentice-Hall%2C+Englewood+Cliffs%2C+NJ&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span> Minsky expands his "...idea of an algorithm—an effective procedure..." in chapter 5.1 <i>Computability, Effective Procedures and Algorithms. Infinite machines."</i></li>
<li><span class="citation journal"><a href="http://en.wikipedia.org/wiki/Emil_Post" title="Emil Post" class="mw-redirect">Post, Emil</a> (1936). "Finite Combinatory Processes, Formulation I". <i>The Journal of Symbolic Logic</i> <b>1</b> (3): 103–105. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.2307%2F2269031">10.2307/2269031</a>. <a href="http://en.wikipedia.org/wiki/JSTOR" title="JSTOR">JSTOR</a>&#160;<a rel="nofollow" class="external text" href="http://www.jstor.org/stable/2269031">2269031</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=Finite+Combinatory+Processes%2C+Formulation+I&amp;rft.aufirst=Emil&amp;rft.aulast=Post&amp;rft.au=Post%2C+Emil&amp;rft.date=1936&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.2307%2F2269031&amp;rft.issue=3&amp;rft.jstor=2269031&amp;rft.jtitle=The+Journal+of+Symbolic+Logic&amp;rft.pages=103%E2%80%93105&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=1" class="Z3988"><span style="display:none;">&#160;</span></span> Reprinted in <i>The Undecidable</i>, p. 289ff. Post defines a simple algorithmic-like process of a man writing marks or erasing marks and going from box to box and eventually halting, as he follows a list of simple instructions. This is cited by Kleene as one source of his "Thesis I", the so-called <a href="http://en.wikipedia.org/wiki/Church–Turing_thesis" title="Church–Turing thesis">Church–Turing thesis</a>.</li>
<li><span class="citation book">Rogers, Jr, Hartley (1987). <i>Theory of Recursive Functions and Effective Computability</i>. The MIT Press. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-262-68052-1" title="Special:BookSources/0-262-68052-1">0-262-68052-1</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Hartley&amp;rft.aulast=Rogers%2C+Jr&amp;rft.au=Rogers%2C+Jr%2C+Hartley&amp;rft.btitle=Theory+of+Recursive+Functions+and+Effective+Computability&amp;rft.date=1987&amp;rft.genre=book&amp;rft.isbn=0-262-68052-1&amp;rft.pub=The+MIT+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation journal"><a href="http://en.wikipedia.org/wiki/J.B._Rosser" title="J.B. Rosser" class="mw-redirect">Rosser, J.B.</a> (1939). "An Informal Exposition of Proofs of Godel's Theorem and Church's Theorem". <i>Journal of Symbolic Logic</i> <b>4</b>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=An+Informal+Exposition+of+Proofs+of+Godel%27s+Theorem+and+Church%27s+Theorem&amp;rft.aufirst=J.B.&amp;rft.aulast=Rosser&amp;rft.au=Rosser%2C+J.B.&amp;rft.date=1939&amp;rft.genre=article&amp;rft.jtitle=Journal+of+Symbolic+Logic&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=4" class="Z3988"><span style="display:none;">&#160;</span></span> Reprinted in <i>The Undecidable</i>, p.&#160;223ff. Herein is Rosser's famous definition of "effective method": "...a method each step of which is precisely predetermined and which is certain to produce the answer in a finite number of steps... a machine which will then solve any problem of the set with no human intervention beyond inserting the question and (later) reading the answer" (p.&#160;225–226, <i>The Undecidable</i>)</li>
<li><span class="citation book">Santos-Lang, Christopher (2014). <a rel="nofollow" class="external text" href="http://grinfree.com/MoralEcology.pdf">"Chapter 6: Moral Ecology Approaches"</a> (PDF). In van Rysewyk, Simon; Pontier, Matthijs. <i>Machine Medical Ethics</i>. New York: Springer. pp.&#160;74–96.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=Machine+Medical+Ethics&amp;rft.aufirst=Christopher&amp;rft.aulast=Santos-Lang&amp;rft.au=Santos-Lang%2C+Christopher&amp;rft.btitle=Chapter+6%3A+Moral+Ecology+Approaches&amp;rft.date=2014&amp;rft.genre=bookitem&amp;rft_id=http%3A%2F%2Fgrinfree.com%2FMoralEcology.pdf&amp;rft.pages=74%E2%80%9396&amp;rft.place=New+York&amp;rft.pub=Springer&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation book">Scott, Michael L. (2009). <i>Programming Language Pragmatics</i> (3rd ed.). Morgan Kaufmann Publishers/Elsevier. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0-12-374514-9" title="Special:BookSources/978-0-12-374514-9">978-0-12-374514-9</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Michael+L.&amp;rft.aulast=Scott&amp;rft.au=Scott%2C+Michael+L.&amp;rft.btitle=Programming+Language+Pragmatics&amp;rft.date=2009&amp;rft.edition=3rd&amp;rft.genre=book&amp;rft.isbn=978-0-12-374514-9&amp;rft.pub=Morgan+Kaufmann+Publishers%2FElsevier&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation book">Sipser, Michael (2006). <i>Introduction to the Theory of Computation</i>. PWS Publishing Company. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-534-94728-X" title="Special:BookSources/0-534-94728-X">0-534-94728-X</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Michael&amp;rft.aulast=Sipser&amp;rft.au=Sipser%2C+Michael&amp;rft.btitle=Introduction+to+the+Theory+of+Computation&amp;rft.date=2006&amp;rft.genre=book&amp;rft.isbn=0-534-94728-X&amp;rft.pub=PWS+Publishing+Company&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation book">Sober, Elliott; Wilson, David Sloan (1998). <i>Unto Others: The Evolution and Psychology of Unselfish Behavior</i>. Cambridge: Harvard University Press.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Elliott&amp;rft.aulast=Sober&amp;rft.au=Sober%2C+Elliott&amp;rft.au=Wilson%2C+David+Sloan&amp;rft.btitle=Unto+Others%3A+The+Evolution+and+Psychology+of+Unselfish+Behavior&amp;rft.date=1998&amp;rft.genre=book&amp;rft.place=Cambridge&amp;rft.pub=Harvard+University+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation book">Stone, Harold S. (1972). <i>Introduction to Computer Organization and Data Structures</i> (1972 ed.). McGraw-Hill, New York. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-07-061726-0" title="Special:BookSources/0-07-061726-0">0-07-061726-0</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Harold+S.&amp;rft.aulast=Stone&amp;rft.au=Stone%2C+Harold+S.&amp;rft.btitle=Introduction+to+Computer+Organization+and+Data+Structures&amp;rft.date=1972&amp;rft.edition=1972&amp;rft.genre=book&amp;rft.isbn=0-07-061726-0&amp;rft.pub=McGraw-Hill%2C+New+York&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span> Cf. in particular the first chapter titled: <i>Algorithms, Turing Machines, and Programs</i>. His succinct informal definition: "...any sequence of instructions that can be obeyed by a robot, is called an <i>algorithm</i>" (p.&#160;4).</li>
<li><span class="citation book">Tausworthe, Robert C (1977). <i>Standardized Development of Computer Software Part 1 Methods</i>. Englewood Cliffs NJ: Prentice-Hall, Inc. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-13-842195-1" title="Special:BookSources/0-13-842195-1">0-13-842195-1</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Robert+C&amp;rft.aulast=Tausworthe&amp;rft.au=Tausworthe%2C+Robert+C&amp;rft.btitle=Standardized+Development+of+Computer+Software+Part+1+Methods&amp;rft.date=1977&amp;rft.genre=book&amp;rft.isbn=0-13-842195-1&amp;rft.place=Englewood+Cliffs+NJ&amp;rft.pub=Prentice-Hall%2C+Inc.&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation journal"><a href="http://en.wikipedia.org/wiki/A._M._Turing" title="A. M. Turing" class="mw-redirect">Turing, Alan M.</a> (1936–7). "On Computable Numbers, With An Application to the Entscheidungsproblem". <i><a href="http://en.wikipedia.org/wiki/Proceedings_of_the_London_Mathematical_Society" title="Proceedings of the London Mathematical Society" class="mw-redirect">Proceedings of the London Mathematical Society</a>, Series 2</i> <b>42</b>: 230–265. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1112%2Fplms%2Fs2-42.1.230">10.1112/plms/s2-42.1.230</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=On+Computable+Numbers%2C+With+An+Application+to+the+Entscheidungsproblem&amp;rft.aufirst=Alan+M.&amp;rft.aulast=Turing&amp;rft.au=Turing%2C+Alan+M.&amp;rft.date=1936%E2%80%937&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1112%2Fplms%2Fs2-42.1.230&amp;rft.jtitle=Proceedings+of+the+London+Mathematical+Society%2C+Series+2&amp;rft.pages=230%E2%80%93265&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=42" class="Z3988"><span style="display:none;">&#160;</span></span> <span style="display:none;font-size:100%" class="error citation-comment">Check date values in: <code>|date=</code> (<a href="http://en.wikipedia.org/wiki/Help:CS1_errors#bad_date" title="Help:CS1 errors">help</a>)</span>. Corrections, ibid, vol. 43(1937) pp.&#160;544–546. Reprinted in <i>The Undecidable</i>, p.&#160;116ff. Turing's famous paper completed as a Master's dissertation while at King's College Cambridge UK.</li>
<li><span class="citation journal"><a href="http://en.wikipedia.org/wiki/A._M._Turing" title="A. M. Turing" class="mw-redirect">Turing, Alan M.</a> (1939). "Systems of Logic Based on Ordinals". <i>Proceedings of the London Mathematical Society</i> <b>45</b>: 161–228. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1112%2Fplms%2Fs2-45.1.161">10.1112/plms/s2-45.1.161</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=Systems+of+Logic+Based+on+Ordinals&amp;rft.aufirst=Alan+M.&amp;rft.aulast=Turing&amp;rft.au=Turing%2C+Alan+M.&amp;rft.date=1939&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1112%2Fplms%2Fs2-45.1.161&amp;rft.jtitle=Proceedings+of+the+London+Mathematical+Society&amp;rft.pages=161%E2%80%93228&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=45" class="Z3988"><span style="display:none;">&#160;</span></span> Reprinted in <i>The Undecidable</i>, p.&#160;155ff. Turing's paper that defined "the oracle" was his PhD thesis while at Princeton USA.</li>
<li><span id="CITEREFWallachAllen2008" class="citation book">Wallach, Wendell; Allen, Colin (November 2008). <i>Moral Machines: Teaching Robots Right from Wrong</i>. USA: Oxford University Press. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0-19-537404-9" title="Special:BookSources/978-0-19-537404-9">978-0-19-537404-9</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Allen%2C+Colin&amp;rft.aufirst=Wendell&amp;rft.aulast=Wallach&amp;rft.au=Wallach%2C+Wendell&amp;rft.btitle=Moral+Machines%3A+Teaching+Robots+Right+from+Wrong&amp;rft.date=November+2008&amp;rft.genre=book&amp;rft.isbn=978-0-19-537404-9&amp;rft.place=USA&amp;rft.pub=Oxford+University+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><a href="http://en.wikipedia.org/wiki/United_States_Patent_and_Trademark_Office" title="United States Patent and Trademark Office">United States Patent and Trademark Office</a> (2006), <a rel="nofollow" class="external text" href="http://www.uspto.gov/web/offices/pac/mpep/documents/2100_2106_02.htm"><i>2106.02 **&gt;Mathematical Algorithms: 2100 Patentability</i></a>, Manual of Patent Examining Procedure (MPEP). Latest revision August 2006</li>
</ul>
<h3><span class="mw-headline" id="Secondary_references">Secondary references</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=38" title="Edit section: Secondary references">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li><span class="citation book">Bolter, David J. (1984). <i>Turing's Man: Western Culture in the Computer Age</i> (1984 ed.). The University of North Carolina Press, Chapel Hill NC. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-8078-1564-0" title="Special:BookSources/0-8078-1564-0">0-8078-1564-0</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Bolter%2C+David+J.&amp;rft.aufirst=David+J.&amp;rft.aulast=Bolter&amp;rft.btitle=Turing%27s+Man%3A+Western+Culture+in+the+Computer+Age&amp;rft.date=1984&amp;rft.edition=1984&amp;rft.genre=book&amp;rft.isbn=0-8078-1564-0&amp;rft.pub=The+University+of+North+Carolina+Press%2C+Chapel+Hill+NC&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span>, <a href="http://en.wikipedia.org/wiki/Special:BookSources/0807841080" class="internal mw-magiclink-isbn">ISBN 0-8078-4108-0</a> pbk.</li>
<li><span class="citation book"><a href="http://en.wikipedia.org/w/index.php?title=Dilson&amp;action=edit&amp;redlink=1" class="new" title="Dilson (page does not exist)">Dilson, Jesse</a> (2007). <i>The Abacus</i> ((1968,1994) ed.). St. Martin's Press, NY. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-312-10409-X" title="Special:BookSources/0-312-10409-X">0-312-10409-X</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Dilson%2C+Jesse&amp;rft.aufirst=Jesse&amp;rft.aulast=Dilson&amp;rft.btitle=The+Abacus&amp;rft.date=2007&amp;rft.edition=%281968%2C1994%29&amp;rft.genre=book&amp;rft.isbn=0-312-10409-X&amp;rft.pub=St.+Martin%27s+Press%2C+NY&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span>, <a href="http://en.wikipedia.org/wiki/Special:BookSources/031210409X" class="internal mw-magiclink-isbn">ISBN 0-312-10409-X</a> (pbk.)</li>
<li><span class="citation book"><a href="http://en.wikipedia.org/w/index.php?title=Van_Heijenoort&amp;action=edit&amp;redlink=1" class="new" title="Van Heijenoort (page does not exist)">van Heijenoort, Jean</a> (2001). <i>From Frege to Gödel, A Source Book in Mathematical Logic, 1879–1931</i> ((1967) ed.). Harvard University Press, Cambridge, MA. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-674-32449-8" title="Special:BookSources/0-674-32449-8">0-674-32449-8</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Jean&amp;rft.aulast=van+Heijenoort&amp;rft.au=van+Heijenoort%2C+Jean&amp;rft.btitle=From+Frege+to+G%C3%B6del%2C+A+Source+Book+in+Mathematical+Logic%2C+1879%E2%80%931931&amp;rft.date=2001&amp;rft.edition=%281967%29&amp;rft.genre=book&amp;rft.isbn=0-674-32449-8&amp;rft.pub=Harvard+University+Press%2C+Cambridge%2C+MA&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span>, 3rd edition 1976[?], <a href="http://en.wikipedia.org/wiki/Special:BookSources/0674324498" class="internal mw-magiclink-isbn">ISBN 0-674-32449-8</a> (pbk.)</li>
<li><span class="citation book">Hodges, Andrew (1983). <i>Alan Turing: The Enigma</i> ((1983) ed.). Simon and Schuster, New York. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-671-49207-1" title="Special:BookSources/0-671-49207-1">0-671-49207-1</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aufirst=Andrew&amp;rft.au=Hodges%2C+Andrew&amp;rft.aulast=Hodges&amp;rft.btitle=Alan+Turing%3A+The+Enigma&amp;rft.date=1983&amp;rft.edition=%281983%29&amp;rft.genre=book&amp;rft.isbn=0-671-49207-1&amp;rft.pub=Simon+and+Schuster%2C+New+York&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span>, <a href="http://en.wikipedia.org/wiki/Special:BookSources/0671492071" class="internal mw-magiclink-isbn">ISBN 0-671-49207-1</a>. Cf. Chapter "The Spirit of Truth" for a history leading to, and a discussion of, his proof.</li>
</ul>
</div>
<h2><span class="mw-headline" id="Further_reading">Further reading</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=39" title="Edit section: Further reading">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="refbegin" style="">
<ul>
<li><span class="citation book">Jean Luc Chabert (1999). <i>A History of Algorithms: From the Pebble to the Microchip</i>. Springer Verlag. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-3-540-63369-3" title="Special:BookSources/978-3-540-63369-3">978-3-540-63369-3</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Jean+Luc+Chabert&amp;rft.aulast=Jean+Luc+Chabert&amp;rft.btitle=A+History+of+Algorithms%3A+From+the+Pebble+to+the+Microchip&amp;rft.date=1999&amp;rft.genre=book&amp;rft.isbn=978-3-540-63369-3&amp;rft.pub=Springer+Verlag&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation book"><i>Algorithmics.: The Spirit of Computing</i>. Addison-Wesley. 2004. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0-321-11784-7" title="Special:BookSources/978-0-321-11784-7">978-0-321-11784-7</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.btitle=Algorithmics.%3A+The+Spirit+of+Computing.&amp;rft.date=2004&amp;rft.genre=book&amp;rft.isbn=978-0-321-11784-7&amp;rft.pub=Addison-Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><a href="Donald_Knuth.html" title="Donald Knuth">Knuth, Donald E.</a> (2000). <i><a rel="nofollow" class="external text" href="http://www-cs-faculty.stanford.edu/~uno/aa.html">Selected Papers on Analysis of Algorithms</a></i>. Stanford, California: Center for the Study of Language and Information.</li>
<li>Knuth, Donald E. (2010). <i><a rel="nofollow" class="external text" href="http://www-cs-faculty.stanford.edu/~uno/da.html">Selected Papers on Design of Algorithms</a></i>. Stanford, California: Center for the Study of Language and Information.</li>
<li><span class="citation book">Berlinski, David (2001). <i>The Advent of the Algorithm: The 300-Year Journey from an Idea to the Computer</i>. Harvest Books. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0-15-601391-8" title="Special:BookSources/978-0-15-601391-8">978-0-15-601391-8</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.au=Berlinski%2C+David&amp;rft.aufirst=David&amp;rft.aulast=Berlinski&amp;rft.btitle=The+Advent+of+the+Algorithm%3A+The+300-Year+Journey+from+an+Idea+to+the+Computer&amp;rft.date=2001&amp;rft.genre=book&amp;rft.isbn=978-0-15-601391-8&amp;rft.pub=Harvest+Books&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation book">Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest and Clifford Stein (2009). <i>Introduction To Algorithms, Third Edition</i>. MIT Press. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0262033848" title="Special:BookSources/978-0262033848">978-0262033848</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.aulast=Thomas+H.+Cormen%2C+Charles+E.+Leiserson%2C+Ronald+L.+Rivest+and+Clifford+Stein&amp;rft.au=Thomas+H.+Cormen%2C+Charles+E.+Leiserson%2C+Ronald+L.+Rivest+and+Clifford+Stein&amp;rft.btitle=Introduction+To+Algorithms%2C+Third+Edition&amp;rft.date=2009&amp;rft.genre=book&amp;rft.isbn=978-0262033848&amp;rft.pub=MIT+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
</ul>
</div>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit&amp;section=40" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table class="metadata mbox-small plainlinks" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Wiktionary-logo-en.svg/37px-Wiktionary-logo-en.svg.png" width="37" height="40" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Wiktionary-logo-en.svg/55px-Wiktionary-logo-en.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Wiktionary-logo-en.svg/73px-Wiktionary-logo-en.svg.png 2x" /></td>
<td class="mbox-text plainlist" style="">Look up <i><b><a href="http://en.wiktionary.org/wiki/Special:Search/algorithm" class="extiw" title="wiktionary:Special:Search/algorithm">algorithm</a></b></i> in Wiktionary, the free dictionary.</td>
</tr>
</table>
<table class="metadata mbox-small plainlinks" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/60px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/80px-Wikibooks-logo-en-noslogan.svg.png 2x" /></td>
<td class="mbox-text plainlist" style="">Wikibooks has a book on the topic of: <i><b><a href="http://en.wikibooks.org/wiki/Algorithms" class="extiw" title="wikibooks:Algorithms">Algorithms</a></b></i></td>
</tr>
</table>
<table class="metadata mbox-small plainlinks" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Wikiversity-logo.svg/40px-Wikiversity-logo.svg.png" width="40" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/9/91/Wikiversity-logo.svg/60px-Wikiversity-logo.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/9/91/Wikiversity-logo.svg/80px-Wikiversity-logo.svg.png 2x" /></td>
<td class="mbox-text plainlist" style="">At <a href="http://en.wikipedia.org/wiki/Wikiversity" title="Wikiversity">Wikiversity</a> you can learn more and teach others about <b>Algorithm</b> at:
<div style="margin-left: 10px;"><a href="http://en.wikiversity.org/wiki/Topic:Algorithm" class="extiw" title="v:Topic:Algorithm">The Department of Algorithm</a></div>
</td>
</tr>
</table>
<ul>
<li><span id="CITEREFHazewinkel2001" class="citation">Hazewinkel, Michiel, ed. (2001), <a rel="nofollow" class="external text" href="http://www.encyclopediaofmath.org/index.php?title=p/a011780">"Algorithm"</a>, <i><a href="http://en.wikipedia.org/wiki/Encyclopedia_of_Mathematics" title="Encyclopedia of Mathematics">Encyclopedia of Mathematics</a></i>, <a href="http://en.wikipedia.org/wiki/Springer_Science+Business_Media" title="Springer Science+Business Media">Springer</a>, <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-1-55608-010-4" title="Special:BookSources/978-1-55608-010-4">978-1-55608-010-4</a></span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAlgorithm&amp;rft.atitle=Encyclopedia+of+Mathematics&amp;rft.btitle=Algorithm&amp;rft.date=2001&amp;rft.genre=bookitem&amp;rft_id=http%3A%2F%2Fwww.encyclopediaofmath.org%2Findex.php%3Ftitle%3Dp%2Fa011780&amp;rft.isbn=978-1-55608-010-4&amp;rft.pub=Springer&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><a rel="nofollow" class="external text" href="http://www.dmoz.org/Computers/Algorithms/">Algorithms</a> on the <a href="Open_Directory_Project.html" title="Open Directory Project">Open Directory Project</a></li>
<li><span class="citation mathworld" id="Reference-Mathworld-Algorithm"><a href="http://en.wikipedia.org/wiki/Eric_W._Weisstein" title="Eric W. Weisstein">Weisstein, Eric W.</a>, "<a rel="nofollow" class="external text" href="http://mathworld.wolfram.com/Algorithm.html">Algorithm</a>", <i><a href="http://en.wikipedia.org/wiki/MathWorld" title="MathWorld">MathWorld</a></i>.</span></li>
<li><a rel="nofollow" class="external text" href="http://www.nist.gov/dads/">Dictionary of Algorithms and Data Structures</a>—<a href="http://en.wikipedia.org/wiki/National_Institute_of_Standards_and_Technology" title="National Institute of Standards and Technology">National Institute of Standards and Technology</a></li>
<li><a rel="nofollow" class="external text" href="http://www.softpanorama.org/Algorithms/index.shtml">Algorithms and Data Structures by Dr Nikolai Bezroukov</a></li>
</ul>
<dl>
<dt>Algorithm repositories</dt>
</dl>
<ul>
<li><a rel="nofollow" class="external text" href="http://www.cs.sunysb.edu/~algorith/">The Stony Brook Algorithm Repository</a>—<a href="http://en.wikipedia.org/wiki/State_University_of_New_York_at_Stony_Brook" title="State University of New York at Stony Brook" class="mw-redirect">State University of New York at Stony Brook</a></li>
<li><a rel="nofollow" class="external text" href="http://www.netlib.org/">Netlib Repository</a>—<a href="http://en.wikipedia.org/wiki/University_of_Tennessee" title="University of Tennessee">University of Tennessee</a> and <a href="http://en.wikipedia.org/wiki/Oak_Ridge_National_Laboratory" title="Oak Ridge National Laboratory">Oak Ridge National Laboratory</a></li>
<li><a rel="nofollow" class="external text" href="http://calgo.acm.org/">Collected Algorithms of the ACM</a>—<a href="Association_for_Computing_Machinery.html" title="Association for Computing Machinery">Association for Computing Machinery</a></li>
<li><a rel="nofollow" class="external text" href="http://www-cs-staff.stanford.edu/~knuth/sgb.html">The Stanford GraphBase</a>—<a href="http://en.wikipedia.org/wiki/Stanford_University" title="Stanford University">Stanford University</a></li>
<li><a rel="nofollow" class="external text" href="http://www.combinatorica.com/">Combinatorica</a>—<a href="http://en.wikipedia.org/wiki/University_of_Iowa" title="University of Iowa">University of Iowa</a> and <a href="http://en.wikipedia.org/wiki/State_University_of_New_York_at_Stony_Brook" title="State University of New York at Stony Brook" class="mw-redirect">State University of New York at Stony Brook</a></li>
<li><a rel="nofollow" class="external text" href="http://www.algorithmic-solutions.com/">Library of Efficient Datastructures and Algorithms (LEDA)</a>—previously from <a href="http://en.wikipedia.org/wiki/Max-Planck-Institut_für_Informatik" title="Max-Planck-Institut für Informatik" class="mw-redirect">Max-Planck-Institut für Informatik</a></li>
<li><a rel="nofollow" class="external text" href="http://www.keithschwarz.com/interesting/">Archive of Interesting Code</a></li>
<li><a rel="nofollow" class="external text" href="http://allmyalgorithms.org/">A semantic wiki to collect, categorize and relate all algorithms and data structures</a></li>
</ul>
<dl>
<dt>Lecture notes</dt>
</dl>
<ul>
<li><a rel="nofollow" class="external text" href="http://compgeom.cs.uiuc.edu/~jeffe//teaching/algorithms/">Algorithms Course Materials</a>. Jeff Erickson. <a href="http://en.wikipedia.org/wiki/University_of_Illinois" title="University of Illinois" class="mw-redirect">University of Illinois</a>.</li>
</ul>
<dl>
<dt>Community</dt>
</dl>
<ul>
<li><a rel="nofollow" class="external text" href="https://plus.google.com/communities/101392274103811461838">Algorithms</a> on <a href="http://en.wikipedia.org/wiki/Google+" title="Google+">Google+</a></li>
</ul>
<p><span id="interwiki-uk-ga"></span> <span id="interwiki-tt-fa"></span></p>


<!-- 
NewPP limit report
Parsed by mw1042
CPU time usage: 2.936 seconds
Real time usage: 3.040 seconds
Preprocessor visited node count: 7364/1000000
Preprocessor generated node count: 30266/1500000
Post‐expand include size: 103853/2048000 bytes
Template argument size: 7927/2048000 bytes
Highest expansion depth: 16/40
Expensive parser function count: 0/500
Lua time usage: 0.168/10.000 seconds
Lua memory usage: 2.69 MB/50 MB
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:775-0!*!0!!en!4!* and timestamp 20140329233839
 -->
<noscript><img src="http://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>								<div class="printfooter">
				Retrieved from "<a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;oldid=601889939">http://en.wikipedia.org/w/index.php?title=Algorithm&amp;oldid=601889939</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="http://en.wikipedia.org/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="http://en.wikipedia.org/wiki/Category:Algorithms" title="Category:Algorithms">Algorithms</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Mathematical_logic" title="Category:Mathematical logic">Mathematical logic</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Theoretical_computer_science" title="Category:Theoretical computer science">Theoretical computer science</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="http://en.wikipedia.org/wiki/Category:All_articles_with_broken_links_to_citations" title="Category:All articles with broken links to citations">All articles with broken links to citations</a></li><li><a href="http://en.wikipedia.org/wiki/Category:All_articles_with_dead_external_links" title="Category:All articles with dead external links">All articles with dead external links</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_dead_external_links_from_March_2010" title="Category:Articles with dead external links from March 2010">Articles with dead external links from March 2010</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Use_mdy_dates_from_June_2013" title="Category:Use mdy dates from June 2013">Use mdy dates from June 2013</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_including_recorded_pronunciations" title="Category:Articles including recorded pronunciations">Articles including recorded pronunciations</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_containing_Persian-language_text" title="Category:Articles containing Persian-language text">Articles containing Persian-language text</a></li><li><a href="http://en.wikipedia.org/wiki/Category:CS1_errors:_dates" title="Category:CS1 errors: dates">CS1 errors: dates</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_Open_Directory_Project_links" title="Category:Articles with Open Directory Project links">Articles with Open Directory Project links</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_example_pseudocode" title="Category:Articles with example pseudocode">Articles with example pseudocode</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Algorithm&amp;type=signup">Create account</a></li><li id="pt-login"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Algorithm" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Algorithm.html"  title="View the content page [c]" accesskey="c">Article</a></span></li>
					<li  id="ca-talk"><span><a href="http://en.wikipedia.org/wiki/Talk:Algorithm"  title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Algorithm.html" >Read</a></span></li>
					<li id="ca-edit"><span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=edit"  title="You can edit this page. &#10;Please review your changes before saving. [e]" accesskey="e">Edit</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=history"  title="Past versions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="http://en.wikipedia.org/w/index.php" id="searchform">
					<div id="simpleSearch">
					<input type="search" name="search" placeholder="Search" title="Search Wikipedia [f]" accesskey="f" id="searchInput" /><input type="hidden" value="Special:Search" name="title" /><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton" /><input type="submit" name="go" value="Go" title="Go to a page with this exact name if one exists" id="searchButton" class="searchButton" />		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="Main_Page.html"  title="Visit the main page"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="Main_Page.html" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-contents"><a href="http://en.wikipedia.org/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
			<li id="n-featuredcontent"><a href="http://en.wikipedia.org/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li>
			<li id="n-currentevents"><a href="http://en.wikipedia.org/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
			<li id="n-randompage"><a href="http://en.wikipedia.org/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			<li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li>
			<li id="n-shoplink"><a href="http://shop.wikimedia.org/" title="Visit the Wikimedia Shop">Wikimedia Shop</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
	<h3 id='p-interaction-label'>Interaction</h3>
	<div class="body">
		<ul>
			<li id="n-help"><a href="http://en.wikipedia.org/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			<li id="n-aboutsite"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
			<li id="n-portal"><a href="http://en.wikipedia.org/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
			<li id="n-recentchanges"><a href="http://en.wikipedia.org/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-contactpage"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://en.wikipedia.org/wiki/Special:WhatLinksHere/Algorithm" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://en.wikipedia.org/wiki/Special:RecentChangesLinked/Algorithm" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-upload"><a href="http://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li>
			<li id="t-specialpages"><a href="http://en.wikipedia.org/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;oldid=601889939" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;action=info">Page information</a></li>
			<li id="t-wikibase"><a href="http://www.wikidata.org/wiki/Q8366" title="Link to connected data repository item [g]" accesskey="g">Data item</a></li>
<li id="t-cite"><a href="http://en.wikipedia.org/w/index.php?title=Special:Cite&amp;page=Algorithm&amp;id=601889939" title="Information on how to cite this page">Cite this page</a></li>		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
	<h3 id='p-coll-print_export-label'>Print/export</h3>
	<div class="body">
		<ul>
			<li id="coll-create_a_book"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Algorithm">Create a book</a></li>
			<li id="coll-download-as-rl"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Algorithm&amp;oldid=601889939&amp;writer=rl">Download as PDF</a></li>
			<li id="t-print"><a href="http://en.wikipedia.org/w/index.php?title=Algorithm&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
	<h3 id='p-lang-label'>Languages</h3>
	<div class="body">
		<ul>
			<li class="interlanguage-link interwiki-af"><a href="http://af.wikipedia.org/wiki/Algoritme" title="Algoritme – Afrikaans" lang="af" hreflang="af">Afrikaans</a></li>
			<li class="interlanguage-link interwiki-am"><a href="http://am.wikipedia.org/wiki/አልጎሪዝም" title="አልጎሪዝም – Amharic" lang="am" hreflang="am">አማርኛ</a></li>
			<li class="interlanguage-link interwiki-ar"><a href="http://ar.wikipedia.org/wiki/خوارزمية" title="خوارزمية – Arabic" lang="ar" hreflang="ar">العربية</a></li>
			<li class="interlanguage-link interwiki-an"><a href="http://an.wikipedia.org/wiki/Algorismo" title="Algorismo – Aragonese" lang="an" hreflang="an">Aragonés</a></li>
			<li class="interlanguage-link interwiki-as"><a href="http://as.wikipedia.org/wiki/এলগৰিথম_আৰু_ডেইটা_ষ্ট্ৰাকচাৰ" title="এলগৰিথম আৰু ডেইটা ষ্ট্ৰাকচাৰ – Assamese" lang="as" hreflang="as">অসমীয়া</a></li>
			<li class="interlanguage-link interwiki-ast"><a href="http://ast.wikipedia.org/wiki/Algoritmu" title="Algoritmu – Asturian" lang="ast" hreflang="ast">Asturianu</a></li>
			<li class="interlanguage-link interwiki-az"><a href="http://az.wikipedia.org/wiki/Alqoritm" title="Alqoritm – Azerbaijani" lang="az" hreflang="az">Azərbaycanca</a></li>
			<li class="interlanguage-link interwiki-bn"><a href="http://bn.wikipedia.org/wiki/অ্যালগরিদম" title="অ্যালগরিদম – Bengali" lang="bn" hreflang="bn">বাংলা</a></li>
			<li class="interlanguage-link interwiki-zh-min-nan"><a href="http://zh-min-nan.wikipedia.org/wiki/Ián-sǹg-hoat" title="Ián-sǹg-hoat – Chinese (Min Nan)" lang="zh-min-nan" hreflang="zh-min-nan">Bân-lâm-gú</a></li>
			<li class="interlanguage-link interwiki-ba"><a href="http://ba.wikipedia.org/wiki/Алгоритм" title="Алгоритм – Bashkir" lang="ba" hreflang="ba">Башҡортса</a></li>
			<li class="interlanguage-link interwiki-be"><a href="http://be.wikipedia.org/wiki/Алгарытм" title="Алгарытм – Belarusian" lang="be" hreflang="be">Беларуская</a></li>
			<li class="interlanguage-link interwiki-be-x-old"><a href="http://be-x-old.wikipedia.org/wiki/Альгарытм" title="Альгарытм – беларуская (тарашкевіца)‎" lang="be-x-old" hreflang="be-x-old">Беларуская (тарашкевіца)‎</a></li>
			<li class="interlanguage-link interwiki-bg"><a href="http://bg.wikipedia.org/wiki/Алгоритъм" title="Алгоритъм – Bulgarian" lang="bg" hreflang="bg">Български</a></li>
			<li class="interlanguage-link interwiki-bs"><a href="http://bs.wikipedia.org/wiki/Algoritam" title="Algoritam – Bosnian" lang="bs" hreflang="bs">Bosanski</a></li>
			<li class="interlanguage-link interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Algorisme" title="Algorisme – Catalan" lang="ca" hreflang="ca">Català</a></li>
			<li class="interlanguage-link interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Algoritmus" title="Algoritmus – Czech" lang="cs" hreflang="cs">Čeština</a></li>
			<li class="interlanguage-link interwiki-da"><a href="http://da.wikipedia.org/wiki/Algoritme" title="Algoritme – Danish" lang="da" hreflang="da">Dansk</a></li>
			<li class="interlanguage-link interwiki-de"><a href="http://de.wikipedia.org/wiki/Algorithmus" title="Algorithmus – German" lang="de" hreflang="de">Deutsch</a></li>
			<li class="interlanguage-link interwiki-et"><a href="http://et.wikipedia.org/wiki/Algoritm" title="Algoritm – Estonian" lang="et" hreflang="et">Eesti</a></li>
			<li class="interlanguage-link interwiki-el"><a href="http://el.wikipedia.org/wiki/Αλγόριθμος" title="Αλγόριθμος – Greek" lang="el" hreflang="el">Ελληνικά</a></li>
			<li class="interlanguage-link interwiki-es"><a href="http://es.wikipedia.org/wiki/Algoritmo" title="Algoritmo – Spanish" lang="es" hreflang="es">Español</a></li>
			<li class="interlanguage-link interwiki-eo"><a href="http://eo.wikipedia.org/wiki/Algoritmo" title="Algoritmo – Esperanto" lang="eo" hreflang="eo">Esperanto</a></li>
			<li class="interlanguage-link interwiki-eu"><a href="http://eu.wikipedia.org/wiki/Algoritmo" title="Algoritmo – Basque" lang="eu" hreflang="eu">Euskara</a></li>
			<li class="interlanguage-link interwiki-fa"><a href="http://fa.wikipedia.org/wiki/الگوریتم" title="الگوریتم – Persian" lang="fa" hreflang="fa">فارسی</a></li>
			<li class="interlanguage-link interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Algorithme" title="Algorithme – French" lang="fr" hreflang="fr">Français</a></li>
			<li class="interlanguage-link interwiki-ga"><a href="http://ga.wikipedia.org/wiki/Algartam" title="Algartam – Irish" lang="ga" hreflang="ga">Gaeilge</a></li>
			<li class="interlanguage-link interwiki-gl"><a href="http://gl.wikipedia.org/wiki/Algoritmo" title="Algoritmo – Galician" lang="gl" hreflang="gl">Galego</a></li>
			<li class="interlanguage-link interwiki-ki"><a href="http://ki.wikipedia.org/wiki/Algorithm" title="Algorithm – Kikuyu" lang="ki" hreflang="ki">Gĩkũyũ</a></li>
			<li class="interlanguage-link interwiki-ko"><a href="http://ko.wikipedia.org/wiki/알고리즘" title="알고리즘 – Korean" lang="ko" hreflang="ko">한국어</a></li>
			<li class="interlanguage-link interwiki-hy"><a href="http://hy.wikipedia.org/wiki/Ալգորիթմ" title="Ալգորիթմ – Armenian" lang="hy" hreflang="hy">Հայերեն</a></li>
			<li class="interlanguage-link interwiki-hi"><a href="http://hi.wikipedia.org/wiki/अल्गोरिद्म" title="अल्गोरिद्म – Hindi" lang="hi" hreflang="hi">हिन्दी</a></li>
			<li class="interlanguage-link interwiki-hr"><a href="http://hr.wikipedia.org/wiki/Algoritam" title="Algoritam – Croatian" lang="hr" hreflang="hr">Hrvatski</a></li>
			<li class="interlanguage-link interwiki-io"><a href="http://io.wikipedia.org/wiki/Algoritmo" title="Algoritmo – Ido" lang="io" hreflang="io">Ido</a></li>
			<li class="interlanguage-link interwiki-ilo"><a href="http://ilo.wikipedia.org/wiki/Algoritmo" title="Algoritmo – Iloko" lang="ilo" hreflang="ilo">Ilokano</a></li>
			<li class="interlanguage-link interwiki-id"><a href="http://id.wikipedia.org/wiki/Algoritma" title="Algoritma – Indonesian" lang="id" hreflang="id">Bahasa Indonesia</a></li>
			<li class="interlanguage-link interwiki-ia"><a href="http://ia.wikipedia.org/wiki/Algorithmo" title="Algorithmo – Interlingua" lang="ia" hreflang="ia">Interlingua</a></li>
			<li class="interlanguage-link interwiki-is"><a href="http://is.wikipedia.org/wiki/Reiknirit" title="Reiknirit – Icelandic" lang="is" hreflang="is">Íslenska</a></li>
			<li class="interlanguage-link interwiki-it"><a href="http://it.wikipedia.org/wiki/Algoritmo" title="Algoritmo – Italian" lang="it" hreflang="it">Italiano</a></li>
			<li class="interlanguage-link interwiki-he"><a href="http://he.wikipedia.org/wiki/אלגוריתם" title="אלגוריתם – Hebrew" lang="he" hreflang="he">עברית</a></li>
			<li class="interlanguage-link interwiki-ka"><a href="http://ka.wikipedia.org/wiki/ალგორითმი" title="ალგორითმი – Georgian" lang="ka" hreflang="ka">ქართული</a></li>
			<li class="interlanguage-link interwiki-kk"><a href="http://kk.wikipedia.org/wiki/Алгоритм" title="Алгоритм – Kazakh" lang="kk" hreflang="kk">Қазақша</a></li>
			<li class="interlanguage-link interwiki-ku"><a href="http://ku.wikipedia.org/wiki/Algorîtma" title="Algorîtma – Kurdish" lang="ku" hreflang="ku">Kurdî</a></li>
			<li class="interlanguage-link interwiki-ky"><a href="http://ky.wikipedia.org/wiki/Алгоритм" title="Алгоритм – Kyrgyz" lang="ky" hreflang="ky">Кыргызча</a></li>
			<li class="interlanguage-link interwiki-lo"><a href="http://lo.wikipedia.org/wiki/ຂັ້ນຕອນວິທີ" title="ຂັ້ນຕອນວິທີ – Lao" lang="lo" hreflang="lo">ລາວ</a></li>
			<li class="interlanguage-link interwiki-la"><a href="http://la.wikipedia.org/wiki/Algorithmus" title="Algorithmus – Latin" lang="la" hreflang="la">Latina</a></li>
			<li class="interlanguage-link interwiki-lv"><a href="http://lv.wikipedia.org/wiki/Algoritms" title="Algoritms – Latvian" lang="lv" hreflang="lv">Latviešu</a></li>
			<li class="interlanguage-link interwiki-lb"><a href="http://lb.wikipedia.org/wiki/Algorithmus" title="Algorithmus – Luxembourgish" lang="lb" hreflang="lb">Lëtzebuergesch</a></li>
			<li class="interlanguage-link interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Algoritmas" title="Algoritmas – Lithuanian" lang="lt" hreflang="lt">Lietuvių</a></li>
			<li class="interlanguage-link interwiki-hu"><a href="http://hu.wikipedia.org/wiki/Algoritmus" title="Algoritmus – Hungarian" lang="hu" hreflang="hu">Magyar</a></li>
			<li class="interlanguage-link interwiki-mk"><a href="http://mk.wikipedia.org/wiki/Алгоритам" title="Алгоритам – Macedonian" lang="mk" hreflang="mk">Македонски</a></li>
			<li class="interlanguage-link interwiki-ml"><a href="http://ml.wikipedia.org/wiki/അൽഗൊരിതം" title="അൽഗൊരിതം – Malayalam" lang="ml" hreflang="ml">മലയാളം</a></li>
			<li class="interlanguage-link interwiki-mr"><a href="http://mr.wikipedia.org/wiki/अल्गोरिदम" title="अल्गोरिदम – Marathi" lang="mr" hreflang="mr">मराठी</a></li>
			<li class="interlanguage-link interwiki-arz"><a href="http://arz.wikipedia.org/wiki/الجوريتم" title="الجوريتم – Egyptian Spoken Arabic" lang="arz" hreflang="arz">مصرى</a></li>
			<li class="interlanguage-link interwiki-ms"><a href="http://ms.wikipedia.org/wiki/Algoritma" title="Algoritma – Malay" lang="ms" hreflang="ms">Bahasa Melayu</a></li>
			<li class="interlanguage-link interwiki-mwl"><a href="http://mwl.wikipedia.org/wiki/Algoritmo" title="Algoritmo – Mirandese" lang="mwl" hreflang="mwl">Mirandés</a></li>
			<li class="interlanguage-link interwiki-mn"><a href="http://mn.wikipedia.org/wiki/Алгоритм" title="Алгоритм – Mongolian" lang="mn" hreflang="mn">Монгол</a></li>
			<li class="interlanguage-link interwiki-my"><a href="http://my.wikipedia.org/wiki/အယ်လ်ဂေါ်ရစ်သမ်" title="အယ်လ်ဂေါ်ရစ်သမ် – Burmese" lang="my" hreflang="my">မြန်မာဘာသာ</a></li>
			<li class="interlanguage-link interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Algoritme" title="Algoritme – Dutch" lang="nl" hreflang="nl">Nederlands</a></li>
			<li class="interlanguage-link interwiki-ne"><a href="http://ne.wikipedia.org/wiki/अल्गोरिदम" title="अल्गोरिदम – Nepali" lang="ne" hreflang="ne">नेपाली</a></li>
			<li class="interlanguage-link interwiki-ja"><a href="http://ja.wikipedia.org/wiki/アルゴリズム" title="アルゴリズム – Japanese" lang="ja" hreflang="ja">日本語</a></li>
			<li class="interlanguage-link interwiki-no"><a href="http://no.wikipedia.org/wiki/Algoritme" title="Algoritme – Norwegian (bokmål)" lang="no" hreflang="no">Norsk bokmål</a></li>
			<li class="interlanguage-link interwiki-nn"><a href="http://nn.wikipedia.org/wiki/Algoritme" title="Algoritme – Norwegian Nynorsk" lang="nn" hreflang="nn">Norsk nynorsk</a></li>
			<li class="interlanguage-link interwiki-oc"><a href="http://oc.wikipedia.org/wiki/Algoritme" title="Algoritme – Occitan" lang="oc" hreflang="oc">Occitan</a></li>
			<li class="interlanguage-link interwiki-mhr"><a href="http://mhr.wikipedia.org/wiki/Алгоритм" title="Алгоритм – Eastern Mari" lang="mhr" hreflang="mhr">Олык марий</a></li>
			<li class="interlanguage-link interwiki-uz"><a href="http://uz.wikipedia.org/wiki/Algoritm" title="Algoritm – Uzbek" lang="uz" hreflang="uz">Oʻzbekcha</a></li>
			<li class="interlanguage-link interwiki-pnb"><a href="http://pnb.wikipedia.org/wiki/الگورتھم" title="الگورتھم – Western Punjabi" lang="pnb" hreflang="pnb">پنجابی</a></li>
			<li class="interlanguage-link interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Algorytm" title="Algorytm – Polish" lang="pl" hreflang="pl">Polski</a></li>
			<li class="interlanguage-link interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Algoritmo" title="Algoritmo – Portuguese" lang="pt" hreflang="pt">Português</a></li>
			<li class="interlanguage-link interwiki-kaa"><a href="http://kaa.wikipedia.org/wiki/Algoritm" title="Algoritm – Kara-Kalpak" lang="kaa" hreflang="kaa">Qaraqalpaqsha</a></li>
			<li class="interlanguage-link interwiki-ro"><a href="http://ro.wikipedia.org/wiki/Algoritm" title="Algoritm – Romanian" lang="ro" hreflang="ro">Română</a></li>
			<li class="interlanguage-link interwiki-rue"><a href="http://rue.wikipedia.org/wiki/Алґорітм" title="Алґорітм – Rusyn" lang="rue" hreflang="rue">Русиньскый</a></li>
			<li class="interlanguage-link interwiki-ru"><a href="http://ru.wikipedia.org/wiki/Алгоритм" title="Алгоритм – Russian" lang="ru" hreflang="ru">Русский</a></li>
			<li class="interlanguage-link interwiki-sah"><a href="http://sah.wikipedia.org/wiki/Алгоритм" title="Алгоритм – Sakha" lang="sah" hreflang="sah">Саха тыла</a></li>
			<li class="interlanguage-link interwiki-sco"><a href="http://sco.wikipedia.org/wiki/Algorithm" title="Algorithm – Scots" lang="sco" hreflang="sco">Scots</a></li>
			<li class="interlanguage-link interwiki-sq"><a href="http://sq.wikipedia.org/wiki/Algoritmi" title="Algoritmi – Albanian" lang="sq" hreflang="sq">Shqip</a></li>
			<li class="interlanguage-link interwiki-scn"><a href="http://scn.wikipedia.org/wiki/Alguritmu" title="Alguritmu – Sicilian" lang="scn" hreflang="scn">Sicilianu</a></li>
			<li class="interlanguage-link interwiki-si"><a href="http://si.wikipedia.org/wiki/ඇල්ගොරිතම" title="ඇල්ගොරිතම – Sinhala" lang="si" hreflang="si">සිංහල</a></li>
			<li class="interlanguage-link interwiki-simple"><a href="http://simple.wikipedia.org/wiki/Algorithm" title="Algorithm – Simple English" lang="simple" hreflang="simple">Simple English</a></li>
			<li class="interlanguage-link interwiki-sk"><a href="http://sk.wikipedia.org/wiki/Algoritmus" title="Algoritmus – Slovak" lang="sk" hreflang="sk">Slovenčina</a></li>
			<li class="interlanguage-link interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Algoritem" title="Algoritem – Slovenian" lang="sl" hreflang="sl">Slovenščina</a></li>
			<li class="interlanguage-link interwiki-sr"><a href="http://sr.wikipedia.org/wiki/Алгоритам" title="Алгоритам – Serbian" lang="sr" hreflang="sr">Српски / srpski</a></li>
			<li class="interlanguage-link interwiki-sh"><a href="http://sh.wikipedia.org/wiki/Algoritam" title="Algoritam – Serbo-Croatian" lang="sh" hreflang="sh">Srpskohrvatski / српскохрватски</a></li>
			<li class="interlanguage-link interwiki-su"><a href="http://su.wikipedia.org/wiki/Algoritma" title="Algoritma – Sundanese" lang="su" hreflang="su">Basa Sunda</a></li>
			<li class="interlanguage-link interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Algoritmi" title="Algoritmi – Finnish" lang="fi" hreflang="fi">Suomi</a></li>
			<li class="interlanguage-link interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Algoritm" title="Algoritm – Swedish" lang="sv" hreflang="sv">Svenska</a></li>
			<li class="interlanguage-link interwiki-tl"><a href="http://tl.wikipedia.org/wiki/Algoritmo" title="Algoritmo – Tagalog" lang="tl" hreflang="tl">Tagalog</a></li>
			<li class="interlanguage-link interwiki-ta"><a href="http://ta.wikipedia.org/wiki/படிமுறைத்_தீர்வு" title="படிமுறைத் தீர்வு – Tamil" lang="ta" hreflang="ta">தமிழ்</a></li>
			<li class="interlanguage-link interwiki-tt"><a href="http://tt.wikipedia.org/wiki/Алгоритм" title="Алгоритм – Tatar" lang="tt" hreflang="tt">Татарча/tatarça</a></li>
			<li class="interlanguage-link interwiki-te"><a href="http://te.wikipedia.org/wiki/అల్గారిథం" title="అల్గారిథం – Telugu" lang="te" hreflang="te">తెలుగు</a></li>
			<li class="interlanguage-link interwiki-th"><a href="http://th.wikipedia.org/wiki/ขั้นตอนวิธี" title="ขั้นตอนวิธี – Thai" lang="th" hreflang="th">ไทย</a></li>
			<li class="interlanguage-link interwiki-tg"><a href="http://tg.wikipedia.org/wiki/Алгоритм" title="Алгоритм – Tajik" lang="tg" hreflang="tg">Тоҷикӣ</a></li>
			<li class="interlanguage-link interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Algoritma" title="Algoritma – Turkish" lang="tr" hreflang="tr">Türkçe</a></li>
			<li class="interlanguage-link interwiki-uk"><a href="http://uk.wikipedia.org/wiki/Алгоритм" title="Алгоритм – Ukrainian" lang="uk" hreflang="uk">Українська</a></li>
			<li class="interlanguage-link interwiki-ur"><a href="http://ur.wikipedia.org/wiki/الخوارزم" title="الخوارزم – Urdu" lang="ur" hreflang="ur">اردو</a></li>
			<li class="interlanguage-link interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Thuật_toán" title="Thuật toán – Vietnamese" lang="vi" hreflang="vi">Tiếng Việt</a></li>
			<li class="interlanguage-link interwiki-wa"><a href="http://wa.wikipedia.org/wiki/Algorisse" title="Algorisse – Walloon" lang="wa" hreflang="wa">Walon</a></li>
			<li class="interlanguage-link interwiki-war"><a href="http://war.wikipedia.org/wiki/Algoritmo" title="Algoritmo – Waray" lang="war" hreflang="war">Winaray</a></li>
			<li class="interlanguage-link interwiki-yi"><a href="http://yi.wikipedia.org/wiki/אלגאריטם" title="אלגאריטם – Yiddish" lang="yi" hreflang="yi">ייִדיש</a></li>
			<li class="interlanguage-link interwiki-zh-yue"><a href="http://zh-yue.wikipedia.org/wiki/演算法" title="演算法 – Cantonese" lang="zh-yue" hreflang="zh-yue">粵語</a></li>
			<li class="interlanguage-link interwiki-zh"><a href="http://zh.wikipedia.org/wiki/算法" title="算法 – Chinese" lang="zh" hreflang="zh">中文</a></li>
			<li class="uls-p-lang-dummy"><a href="#"></a></li>
			<li class="wbc-editpage"><a href="http://www.wikidata.org/wiki/Q8366#sitelinks-wikipedia" title="Edit interlanguage links">Edit links</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 29 March 2014 at 23:38.<br /></li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="http://wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="http://wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy.</a> <br/>
Wikipedia® is a registered trademark of the <a href="http://www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="http://en.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a class="external" href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-mobileview"><a href="http://en.m.wikipedia.org/wiki/Algorithm" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<a href="http://wikimediafoundation.org/"><img src="http://bits.wikimedia.org/images/wikimedia-button.png" width="88" height="31" alt="Wikimedia Foundation"/></a>
					</li>
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["ext.cite","mobile.desktop","mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.DRN-wizard","ext.gadget.charinsert","mw.MwEmbedSupport.style","ext.navigationTiming","schema.UniversalLanguageSelector","ext.uls.eventlogger","ext.uls.interlanguage","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served by mw1105 in 0.393 secs. -->
	</body>

<!-- Mirrored from en.wikipedia.org/wiki/Algorithm by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 29 Mar 2014 23:54:44 GMT -->
</html>
