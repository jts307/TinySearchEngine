http://old-www.cs.dartmouth.edu/~cs50/data/tse/wikipedia/Time_complexity.html
2
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">

<!-- Mirrored from en.wikipedia.org/wiki/Time_complexity by HTTrack Website Copier/3.x [XR&CO'2013], Sun, 30 Mar 2014 00:02:02 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="UTF-8" />
<title>Time complexity - Wikipedia, the free encyclopedia</title>
<meta http-equiv="X-UA-Compatible" content="IE=EDGE" />
<meta name="generator" content="MediaWiki 1.23wmf19" />
<link rel="alternate" href="http://en.wikipedia.org/wiki/android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Time_complexity" />
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit" />
<link rel="edit" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit" />
<link rel="apple-touch-icon" href="http://bits.wikimedia.org/apple-touch/wikipedia.png" />
<link rel="shortcut icon" href="http://bits.wikimedia.org/favicon/wikipedia.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://en.wikipedia.org/w/opensearch_desc.php" title="Wikipedia (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://en.wikipedia.org/w/api.php?action=rsd" />
<link rel="copyright" href="http://creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="canonical" href="Time_complexity.html" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cteahouse%7Cext.geshi.local%7Cext.rtlcite%2Cwikihiero%7Cext.uls.nojs%7Cext.visualEditor.viewPageTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.ui.button%7Cskins.common.interface%7Cskins.vector.styles&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: enwiki:resourceloader:filter:minify-css:7:3904d24a08aa08f6a68dc338f9be277e */</style>

<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Time_complexity","wgTitle":"Time complexity","wgCurRevisionId":599906657,"wgRevisionId":599906657,"wgArticleId":405944,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages containing cite templates with deprecated parameters","Articles needing additional references from January 2010","All articles needing additional references","Use dmy dates from September 2010","Analysis of algorithms","Computational complexity theory","Computational resources"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Time_complexity","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":false,"previewDialog":false,"publish":false,"toc":false},"wgBetaFeaturesFeatures":[],"wgVisualEditor":{"isPageWatched":false,"magnifyClipIconURL":"//bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png","pageLanguageCode":"en","pageLanguageDir":"ltr","svgMaxSize":2048},"wikilove-recipient":"","wikilove-anon":0,"wgGuidedTourHelpGuiderUrl":"Help:Guided tours/guider","wgFlowTermsOfUseEdit":"By saving changes, you agree to our \u003Ca class=\"external text\" href=\"//wikimediafoundation.org/wiki/Terms_of_use\"\u003ETerms of Use\u003C/a\u003E and agree to irrevocably release your text under the \u003Ca rel=\"nofollow\" class=\"external text\" href=\"//creativecommons.org/licenses/by-sa/3.0\"\u003ECC BY-SA 3.0 License\u003C/a\u003E and \u003Ca class=\"external text\" href=\"//en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License\"\u003EGFDL\u003C/a\u003E","wgULSAcceptLanguageList":["ru","uk","be","en","*"],"wgULSCurrentAutonym":"English","wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgNoticeProject":"wikipedia","wgWikibaseItemId":"Q2393193"});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"editfont":"default","editondblclick":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nickname":"","norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"showhiddencats":false,"shownumberswatching":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":4,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,
"wllimit":250,"useeditwarning":1,"prefershttps":1,"flaggedrevssimpleui":1,"flaggedrevsstable":0,"flaggedrevseditdiffs":true,"flaggedrevsviewdiffs":false,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"visualeditor-enable":0,"visualeditor-enable-experimental":0,"visualeditor-betatempdisable":0,"wikilove-enabled":1,"echo-subscriptions-web-page-review":true,"echo-subscriptions-email-page-review":false,"ep_showtoplink":false,"ep_bulkdelorgs":false,"ep_bulkdelcourses":true,"ep_showdyk":true,"echo-subscriptions-web-education-program":true,"echo-subscriptions-email-education-program":false,"echo-notify-show-link":true,"echo-show-alert":true,"echo-email-frequency":0,"echo-email-format":"html","echo-subscriptions-email-system":true,"echo-subscriptions-web-system":true,"echo-subscriptions-email-other":false,"echo-subscriptions-web-other":true,"echo-subscriptions-email-edit-user-talk":false,"echo-subscriptions-web-edit-user-talk":true,"echo-subscriptions-email-reverted":false,
"echo-subscriptions-web-reverted":true,"echo-subscriptions-email-article-linked":false,"echo-subscriptions-web-article-linked":false,"echo-subscriptions-email-mention":false,"echo-subscriptions-web-mention":true,"echo-subscriptions-web-edit-thank":true,"echo-subscriptions-email-edit-thank":false,"echo-subscriptions-web-flow-discussion":true,"echo-subscriptions-email-flow-discussion":false,"gettingstarted-task-toolbar-show-intro":true,"uls-preferences":"","language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"searchNs100":false,"searchNs101":false,"searchNs108":false,
"searchNs109":false,"searchNs118":false,"searchNs119":false,"searchNs446":false,"searchNs447":false,"searchNs710":false,"searchNs711":false,"searchNs828":false,"searchNs829":false,"gadget-teahouse":1,"gadget-ReferenceTooltips":1,"gadget-DRN-wizard":1,"gadget-charinsert":1,"gadget-mySandbox":1,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: enwiki:resourceloader:filter:minify-js:7:868e43d07ede2616d2d1dc3507cd8145 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","ext.centralauth.centralautologin","skins.vector.compactPersonalBar.defaultTracking","ext.visualEditor.viewPageTarget.init","ext.uls.init","ext.uls.interface","wikibase.client.init","ext.centralNotice.bannerController","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-javascript {line-height: normal;}
.source-javascript li, .source-javascript pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for javascript
 * CSS class: source-javascript, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.javascript.source-javascript .de1, .javascript.source-javascript .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.javascript.source-javascript  {font-family:monospace;}
.javascript.source-javascript .imp {font-weight: bold; color: red;}
.javascript.source-javascript li, .javascript.source-javascript .li1 {font-weight: normal; vertical-align:top;}
.javascript.source-javascript .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.javascript.source-javascript .li2 {font-weight: bold; vertical-align:top;}
.javascript.source-javascript .kw1 {color: #000066; font-weight: bold;}
.javascript.source-javascript .kw2 {color: #003366; font-weight: bold;}
.javascript.source-javascript .kw3 {color: #000066;}
.javascript.source-javascript .kw5 {color: #FF0000;}
.javascript.source-javascript .co1 {color: #006600; font-style: italic;}
.javascript.source-javascript .co2 {color: #009966; font-style: italic;}
.javascript.source-javascript .coMULTI {color: #006600; font-style: italic;}
.javascript.source-javascript .es0 {color: #000099; font-weight: bold;}
.javascript.source-javascript .br0 {color: #009900;}
.javascript.source-javascript .sy0 {color: #339933;}
.javascript.source-javascript .st0 {color: #3366CC;}
.javascript.source-javascript .nu0 {color: #CC0000;}
.javascript.source-javascript .me1 {color: #660066;}
.javascript.source-javascript .ln-xtra, .javascript.source-javascript li.ln-xtra, .javascript.source-javascript div.ln-xtra {background-color: #ffc;}
.javascript.source-javascript span.xtra { display:block; }

/*]]>*/
</style><link rel="dns-prefetch" href="http://meta.wikimedia.org/" /><!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/static-1.23wmf19/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Time_complexity skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<div id="siteNotice"><!-- CentralNotice --></div>
						<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Time complexity</span></h1>
						<div id="bodyContent">
								<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-navigation">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="dablink">"Running time" redirects here. For the film, see <a href="http://en.wikipedia.org/wiki/Running_Time_(film)" title="Running Time (film)">Running Time (film)</a>.</div>
<table class="metadata plainlinks ambox ambox-content ambox-Refimprove" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px;"><a href="http://en.wikipedia.org/wiki/File:Question_book-new.svg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x" /></a></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This article <b>needs additional citations for <a href="http://en.wikipedia.org/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit">improve this article</a> by <a href="http://en.wikipedia.org/wiki/Help:Introduction_to_referencing/1" title="Help:Introduction to referencing/1">adding citations to reliable sources</a>. Unsourced material may be challenged and removed.</span> <small><i>(January 2010)</i></small></span></td>
</tr>
</table>
<p>In <a href="Computer_science.html" title="Computer science">computer science</a>, the <b>time complexity</b> of an <a href="Algorithm.html" title="Algorithm">algorithm</a> quantifies the amount of time taken by an algorithm to run as a function of the length of the <a href="http://en.wikipedia.org/wiki/String_(computer_science)" title="String (computer science)">string</a> representing the input<sup id="cite_ref-Sipser_1-0" class="reference"><a href="#cite_note-Sipser-1"><span>[</span>1<span>]</span></a></sup><sup class="reference" style="white-space:nowrap;">:226</sup>. The time complexity of an algorithm is commonly expressed using <a href="Big_O_notation.html" title="Big O notation">big O notation</a>, which excludes coefficients and lower order terms. When expressed this way, the time complexity is said to be described <i>asymptotically</i>, i.e., as the input size goes to infinity. For example, if the time required by an algorithm on all inputs of size <i>n</i> is at most <span class="nowrap">5<i>n</i><sup>3</sup> + 3<i>n</i></span>, the asymptotic time complexity is O(<i>n</i><sup>3</sup>).</p>
<p>Time complexity is commonly estimated by counting the number of elementary operations performed by the algorithm, where an elementary operation takes a fixed amount of time to perform. Thus the amount of time taken and the number of elementary operations performed by the algorithm differ by at most a constant factor.</p>
<p>Since an algorithm's performance time may vary with different inputs of the same size, one commonly uses the <a href="http://en.wikipedia.org/wiki/Worst-case_complexity" title="Worst-case complexity">worst-case time complexity</a> of an algorithm, denoted as <b><i>T</i>(<i>n</i>)</b>, which is defined as the maximum amount of time taken on any input of size <i>n</i>. Time complexities are classified by the nature of the function <i>T</i>(<i>n</i>). For instance, an algorithm with <i>T</i>(<i>n</i>) = O(<i>n</i>) is called a linear time algorithm, and an algorithm with <i>T</i>(<i>n</i>) = O(2<sup><i>n</i></sup>) is said to be an exponential time algorithm.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Table_of_common_time_complexities"><span class="tocnumber">1</span> <span class="toctext">Table of common time complexities</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Constant_time"><span class="tocnumber">2</span> <span class="toctext">Constant time</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Logarithmic_time"><span class="tocnumber">3</span> <span class="toctext">Logarithmic time</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Polylogarithmic_time"><span class="tocnumber">4</span> <span class="toctext">Polylogarithmic time</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Sub-linear_time"><span class="tocnumber">5</span> <span class="toctext">Sub-linear time</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#Linear_time"><span class="tocnumber">6</span> <span class="toctext">Linear time</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#Linearithmic_time"><span class="tocnumber">7</span> <span class="toctext">Linearithmic time</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#Quasilinear_time"><span class="tocnumber">8</span> <span class="toctext">Quasilinear time</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#Sub-quadratic_time"><span class="tocnumber">9</span> <span class="toctext">Sub-quadratic time</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#Polynomial_time"><span class="tocnumber">10</span> <span class="toctext">Polynomial time</span></a>
<ul>
<li class="toclevel-2 tocsection-11"><a href="#Strongly_and_weakly_polynomial_time"><span class="tocnumber">10.1</span> <span class="toctext">Strongly and weakly polynomial time</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="#Complexity_classes"><span class="tocnumber">10.2</span> <span class="toctext">Complexity classes</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="#Superpolynomial_time"><span class="tocnumber">11</span> <span class="toctext">Superpolynomial time</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#Quasi-polynomial_time"><span class="tocnumber">12</span> <span class="toctext">Quasi-polynomial time</span></a>
<ul>
<li class="toclevel-2 tocsection-15"><a href="#Relation_to_NP-complete_problems"><span class="tocnumber">12.1</span> <span class="toctext">Relation to NP-complete problems</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-16"><a href="#Sub-exponential_time"><span class="tocnumber">13</span> <span class="toctext">Sub-exponential time</span></a>
<ul>
<li class="toclevel-2 tocsection-17"><a href="#First_definition"><span class="tocnumber">13.1</span> <span class="toctext">First definition</span></a></li>
<li class="toclevel-2 tocsection-18"><a href="#Second_definition"><span class="tocnumber">13.2</span> <span class="toctext">Second definition</span></a>
<ul>
<li class="toclevel-3 tocsection-19"><a href="#Exponential_time_hypothesis"><span class="tocnumber">13.2.1</span> <span class="toctext">Exponential time hypothesis</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-20"><a href="#Exponential_time"><span class="tocnumber">14</span> <span class="toctext">Exponential time</span></a></li>
<li class="toclevel-1 tocsection-21"><a href="#Double_exponential_time"><span class="tocnumber">15</span> <span class="toctext">Double exponential time</span></a></li>
<li class="toclevel-1 tocsection-22"><a href="#See_also"><span class="tocnumber">16</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-23"><a href="#References"><span class="tocnumber">17</span> <span class="toctext">References</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Table_of_common_time_complexities">Table of common time complexities</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=1" title="Edit section: Table of common time complexities">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="rellink">Further information: <a href="http://en.wikipedia.org/wiki/Computational_complexity_of_mathematical_operations" title="Computational complexity of mathematical operations">Computational complexity of mathematical operations</a></div>
<p>The following table summarizes some classes of commonly encountered time complexities. In the table, poly(<i>x</i>)&#160;=&#160;<i>x</i><sup><i>O</i>(1)</sup>, i.e., polynomial in <i>x</i>.</p>
<table class="wikitable">
<tr>
<th>Name</th>
<th><a href="http://en.wikipedia.org/wiki/Complexity_class" title="Complexity class">Complexity class</a></th>
<th>Running time (<i>T</i>(<i>n</i>))</th>
<th>Examples of running times</th>
<th>Example algorithms</th>
</tr>
<tr>
<td>constant time</td>
<td></td>
<td><i>O</i>(1)</td>
<td>10</td>
<td>Determining if an integer (represented in binary) is even or odd</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Inverse_Ackermann_function" title="Inverse Ackermann function" class="mw-redirect">inverse Ackermann</a> time</td>
<td></td>
<td><i>O</i>(α(n))</td>
<td></td>
<td><a href="http://en.wikipedia.org/wiki/Amortized_time" title="Amortized time" class="mw-redirect">Amortized time</a> per operation using a <a href="http://en.wikipedia.org/wiki/Disjoint_set_data_structure" title="Disjoint set data structure" class="mw-redirect">disjoint set</a></td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Iterated_logarithm" title="Iterated logarithm">iterated logarithmic</a> time</td>
<td></td>
<td><i>O</i>(<a href="http://en.wikipedia.org/wiki/Iterated_logarithm" title="Iterated logarithm">log<span style="vertical-align: 10%">*</span></a>&#160;<i>n</i>)</td>
<td></td>
<td><a href="http://en.wikipedia.org/wiki/Cole-Vishkin_algorithm" title="Cole-Vishkin algorithm" class="mw-redirect">Distributed coloring of cycles</a></td>
</tr>
<tr>
<td>log-logarithmic</td>
<td></td>
<td><i>O</i>(log log <i>n</i>)</td>
<td></td>
<td>Amortized time per operation using a bounded <a href="Priority_queue.html" title="Priority queue">priority queue</a><sup id="cite_ref-2" class="reference"><a href="#cite_note-2"><span>[</span>2<span>]</span></a></sup></td>
</tr>
<tr>
<td>logarithmic time</td>
<td><a href="http://en.wikipedia.org/wiki/DLOGTIME" title="DLOGTIME">DLOGTIME</a></td>
<td><i>O</i>(log&#160;<i>n</i>)</td>
<td>log&#160;<i>n</i>, log(<i>n</i><sup>2</sup>)</td>
<td><a href="http://en.wikipedia.org/wiki/Binary_search" title="Binary search" class="mw-redirect">Binary search</a></td>
</tr>
<tr>
<td>polylogarithmic time</td>
<td></td>
<td>poly(log&#160;<i>n</i>)</td>
<td>(log&#160;<i>n</i>)<sup>2</sup></td>
<td></td>
</tr>
<tr>
<td>fractional power</td>
<td></td>
<td><i>O</i>(<i>n</i><sup>c</sup>) where 0 &lt; c &lt; 1</td>
<td><i>n<sup>1/2</sup></i>, <i>n<sup>2/3</sup></i></td>
<td>Searching in a <a href="http://en.wikipedia.org/wiki/Kd-tree" title="Kd-tree" class="mw-redirect">kd-tree</a></td>
</tr>
<tr>
<td>linear time</td>
<td></td>
<td><i>O</i>(<i>n</i>)</td>
<td><i>n</i></td>
<td>Finding the smallest item in an unsorted <a href="Array_data_structure.html" title="Array data structure">array</a></td>
</tr>
<tr>
<td>"n log star n" time</td>
<td></td>
<td><i>O</i>(<i>n</i>&#160;<a href="http://en.wikipedia.org/wiki/Iterated_logarithm" title="Iterated logarithm">log<span style="vertical-align: 10%">*</span></a>&#160;<i>n</i>)</td>
<td></td>
<td><a href="http://en.wikipedia.org/wiki/Raimund_Seidel" title="Raimund Seidel">Seidel</a>'s <a href="http://en.wikipedia.org/wiki/Polygon_triangulation" title="Polygon triangulation">polygon triangulation</a> algorithm.</td>
</tr>
<tr>
<td>linearithmic time</td>
<td></td>
<td><i>O</i>(<i>n</i>&#160;log&#160;<i>n</i>)</td>
<td><i>n</i>&#160;log&#160;<i>n</i>, log <i>n</i>!</td>
<td>Fastest possible <a href="http://en.wikipedia.org/wiki/Comparison_sort" title="Comparison sort">comparison sort</a></td>
</tr>
<tr>
<td>quadratic time</td>
<td></td>
<td><i>O</i>(<i>n</i><sup>2</sup>)</td>
<td><i>n</i><sup>2</sup></td>
<td><a href="http://en.wikipedia.org/wiki/Bubble_sort" title="Bubble sort">Bubble sort</a>; <a href="http://en.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">Insertion sort</a>; <a href="http://en.wikipedia.org/wiki/Convolution_theorem" title="Convolution theorem">Direct convolution</a></td>
</tr>
<tr>
<td>cubic time</td>
<td></td>
<td><i>O</i>(<i>n</i><sup>3</sup>)</td>
<td><i>n</i><sup>3</sup></td>
<td>Naive multiplication of two <i>n</i>×<i>n</i> matrices. Calculating <a href="http://en.wikipedia.org/wiki/Partial_correlation" title="Partial correlation">partial correlation</a>.</td>
</tr>
<tr>
<td>polynomial time</td>
<td><a href="http://en.wikipedia.org/wiki/P_(complexity)" title="P (complexity)">P</a></td>
<td>2<sup><i>O</i>(log&#160;<i>n</i>)</sup> = poly(<i>n</i>)</td>
<td><i>n</i>, <i>n</i>&#160;log&#160;<i>n</i>, <i>n</i><sup>10</sup></td>
<td><a href="http://en.wikipedia.org/wiki/Karmarkar%27s_algorithm" title="Karmarkar's algorithm">Karmarkar's algorithm</a> for <a href="http://en.wikipedia.org/wiki/Linear_programming" title="Linear programming">linear programming</a>; <a href="http://en.wikipedia.org/wiki/AKS_primality_test" title="AKS primality test">AKS primality test</a></td>
</tr>
<tr>
<td>quasi-polynomial time</td>
<td>QP</td>
<td>2<sup>poly(log&#160;<i>n</i>)</sup></td>
<td><i>n</i><sup>log&#160;log&#160;<i>n</i></sup>, <i>n</i><sup>log&#160;<i>n</i></sup></td>
<td>Best-known O(log<sup>2</sup> <i>n</i>)-<a href="http://en.wikipedia.org/wiki/Approximation_algorithm" title="Approximation algorithm">approximation algorithm</a> for the directed <a href="http://en.wikipedia.org/wiki/Steiner_tree_problem" title="Steiner tree problem">Steiner tree problem</a>.</td>
</tr>
<tr>
<td>sub-exponential time<br />
(first definition)</td>
<td>SUBEXP</td>
<td><i>O</i>(2<sup><i>n</i><sup><i>ε</i></sup></sup>) for all <i>ε</i>&#160;&gt;&#160;0</td>
<td><i>O</i>(2<sup>log <i>n</i><sup>log log <i>n</i></sup></sup>)</td>
<td>Assuming complexity theoretic conjectures, <a href="http://en.wikipedia.org/wiki/Bounded-error_probabilistic_polynomial" title="Bounded-error probabilistic polynomial" class="mw-redirect">BPP</a> is contained in SUBEXP.<sup id="cite_ref-bpp_3-0" class="reference"><a href="#cite_note-bpp-3"><span>[</span>3<span>]</span></a></sup></td>
</tr>
<tr>
<td>sub-exponential time<br />
(second definition)</td>
<td></td>
<td>2<sup><i>o</i>(<i>n</i>)</sup></td>
<td>2<sup><i>n</i><sup>1/3</sup></sup></td>
<td>Best-known algorithm for <a href="http://en.wikipedia.org/wiki/Integer_factorization" title="Integer factorization">integer factorization</a> and <a href="http://en.wikipedia.org/wiki/Graph_isomorphism_problem" title="Graph isomorphism problem">graph isomorphism</a></td>
</tr>
<tr>
<td>exponential time</td>
<td><a href="http://en.wikipedia.org/wiki/E_(complexity)" title="E (complexity)">E</a></td>
<td>2<sup><i>O</i>(<i>n</i>)</sup></td>
<td>1.1<sup><i>n</i></sup>, 10<sup><i>n</i></sup></td>
<td>Solving the <a href="http://en.wikipedia.org/wiki/Traveling_salesman_problem" title="Traveling salesman problem" class="mw-redirect">traveling salesman problem</a> using <a href="http://en.wikipedia.org/wiki/Dynamic_programming" title="Dynamic programming">dynamic programming</a></td>
</tr>
<tr>
<td>factorial time</td>
<td></td>
<td><i>O</i>(<i>n</i>!)</td>
<td><i>n</i>!</td>
<td>Solving the traveling salesman problem via <a href="http://en.wikipedia.org/wiki/Brute-force_search" title="Brute-force search">brute-force search</a></td>
</tr>
<tr>
<td>exponential time</td>
<td><a href="http://en.wikipedia.org/wiki/EXPTIME" title="EXPTIME">EXPTIME</a></td>
<td>2<sup>poly(<i>n</i>)</sup></td>
<td>2<sup><i>n</i></sup>, 2<sup><i>n</i><sup>2</sup></sup></td>
<td></td>
</tr>
<tr>
<td>double exponential time</td>
<td><a href="http://en.wikipedia.org/wiki/2-EXPTIME" title="2-EXPTIME">2-EXPTIME</a></td>
<td>2<sup>2<sup>poly(<i>n</i>)</sup></sup></td>
<td>2<sup>2<sup><i>n</i></sup></sup></td>
<td>Deciding the truth of a given statement in <a href="http://en.wikipedia.org/wiki/Presburger_arithmetic" title="Presburger arithmetic">Presburger arithmetic</a></td>
</tr>
</table>
<h2><span class="mw-headline" id="Constant_time">Constant time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=2" title="Edit section: Constant time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>An algorithm is said to be <b>constant time</b> (also written as <b>O(1)</b> time) if the value of <i>T</i>(<i>n</i>) is bounded by a value that does not depend on the size of the input. For example, accessing any single element in an <a href="Array_data_structure.html" title="Array data structure">array</a> takes constant time as only one <a href="http://en.wikipedia.org/wiki/Instruction_(computer_science)" title="Instruction (computer science)" class="mw-redirect">operation</a> has to be performed to locate it. However, finding the minimal value in an unordered array is not a constant time operation as a scan over each <a href="http://en.wikipedia.org/wiki/Element_(math)" title="Element (math)" class="mw-redirect">element</a> in the array is needed in order to determine the minimal value. Hence it is a linear time operation, taking O(n) time. If the number of elements is known in advance and does not change, however, such an algorithm can still be said to run in constant time.</p>
<p>Despite the name "constant time", the running time does not have to be independent of the problem size, but an upper bound for the running time has to be bounded independently of the problem size. For example, the task "exchange the values of <i>a</i> and <i>b</i> if necessary so that <i>a</i>≤<i>b</i>" is called constant time even though the time may depend on whether or not it is already true that <i>a</i> ≤ <i>b</i>. However, there is some constant <i>t</i> such that the time required is always <i>at most</i> <i>t</i>.</p>
<p>Here are some examples of code fragments that run in constant time:</p>
<pre>
int index = 5;
int item = list[index];
<b>if</b> (condition true) <b>then</b>
   perform some operation that runs in constant time
<b>else</b>
   perform some other operation that runs in constant time
<b>for</b> i = 1 <b>to</b> 100
   <b>for</b> j = 1 <b>to</b> 200
      perform some operation that runs in constant time
</pre>
<p>If <i>T</i>(<i>n</i>) is O(<i>any constant value</i>), this is equivalent to and stated in standard notation as <i>T</i>(<i>n</i>) being O(1).</p>
<h2><span class="mw-headline" id="Logarithmic_time">Logarithmic time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=3" title="Edit section: Logarithmic time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="rellink">Further information: <a href="http://en.wikipedia.org/wiki/Logarithmic_growth" title="Logarithmic growth">Logarithmic growth</a></div>
<p>An algorithm is said to take <b>logarithmic time</b> if <i>T</i>(<i>n</i>) = <b>O(log <i>n</i>)</b>. Due to the use of the <a href="http://en.wikipedia.org/wiki/Binary_numeral_system" title="Binary numeral system" class="mw-redirect">binary numeral system</a> by computers, the <a href="http://en.wikipedia.org/wiki/Logarithm" title="Logarithm">logarithm</a> is frequently base 2 (that is, log<sub>2</sub> <i>n</i>, sometimes written lg <i>n</i>). However, by the <a href="http://en.wikipedia.org/wiki/Logarithmic_identities#Changing_the_base" title="Logarithmic identities" class="mw-redirect">change of base</a> for logarithms, log<sub>a</sub> <i>n</i> and log<sub>b</sub> <i>n</i> differ only by a constant multiplier, which in big-O notation is discarded; thus O(log <i>n</i>) is the standard notation for logarithmic time algorithms regardless of the base of the logarithm.</p>
<p>Algorithms taking logarithmic time are commonly found in operations on <a href="Binary_tree.html" title="Binary tree">binary trees</a> or when using <a href="http://en.wikipedia.org/wiki/Binary_search" title="Binary search" class="mw-redirect">binary search</a>.</p>
<p>An O(log n) algorithm is considered highly efficient, as the operations per instance required to complete decrease with each instance.</p>
<p>A very simple example of this type of f(n) is an algorithm that cuts a string in half. It will take O(log n) time (n being the length of the string) since we chop the string in half before each print (we make the assumption that <i>console.log</i> and <i>str.substring</i> run in constant time). This means, in order to increase the number of prints, we have to double the length of the string.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="javascript source-javascript">
<pre class="de1">
<span class="co1">// Function to recursively print the right half of a string</span>
<span class="kw1">var</span> right <span class="sy0">=</span> <span class="kw1">function</span><span class="br0">(</span>str<span class="br0">)</span><span class="br0">{</span>
    <span class="kw1">var</span> length <span class="sy0">=</span> str.<span class="me1">length</span><span class="sy0">;</span>
 
    <span class="co1">// Helper function</span>
    <span class="kw1">var</span> help <span class="sy0">=</span> <span class="kw1">function</span><span class="br0">(</span>index<span class="br0">)</span><span class="br0">{</span>
 
        <span class="co1">// Recursive Case: Print right half</span>
        <span class="kw1">if</span><span class="br0">(</span>index <span class="sy0">&lt;</span> length<span class="br0">)</span><span class="br0">{</span>
 
            <span class="co1">// Prints characters from index until the end of the array</span>
            console.<span class="me1">log</span><span class="br0">(</span>str.<span class="me1">substring</span><span class="br0">(</span>index<span class="sy0">,</span> length<span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
 
            <span class="co1">// Recursive Call: call help on right half</span>
            help<span class="br0">(</span><span class="kw4">Math</span>.<span class="me1">ceil</span><span class="br0">(</span><span class="br0">(</span>length <span class="sy0">+</span> index<span class="br0">)</span><span class="sy0">/</span><span class="nu0">2</span><span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span>
        <span class="br0">}</span>
 
        <span class="co1">// Base Case: Do Nothing</span>
    <span class="br0">}</span>
    help<span class="br0">(</span><span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<h2><span class="mw-headline" id="Polylogarithmic_time">Polylogarithmic time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=4" title="Edit section: Polylogarithmic time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>An algorithm is said to run in <b>polylogarithmic time</b> if <i>T</i>(<i>n</i>) = O((log <i>n</i>)<sup><i>k</i></sup>), for some constant <i>k</i>. For example, matrix chain ordering can be solved in polylogarithmic time on a <a href="Parallel_Random_Access_Machine.html" title="Parallel Random Access Machine" class="mw-redirect">Parallel Random Access Machine</a>.<sup id="cite_ref-4" class="reference"><a href="#cite_note-4"><span>[</span>4<span>]</span></a></sup></p>
<h2><span class="mw-headline" id="Sub-linear_time">Sub-linear time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=5" title="Edit section: Sub-linear time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>An algorithm is said to run in <b>sub-linear time</b> (often spelled <b>sublinear time</b>) if <i>T</i>(<i>n</i>) = o(<i>n</i>). In particular this includes algorithms with the time complexities defined above, as well as others such as the O(<i>n</i><sup>½</sup>) <a href="http://en.wikipedia.org/wiki/Grover%27s_algorithm" title="Grover's algorithm">Grover's search</a> algorithm.</p>
<p>Typical algorithms that are exact and yet run in sub-linear time use <a href="Parallel_algorithm.html" title="Parallel algorithm">parallel processing</a> (as the NC<sub>1</sub> matrix determinant calculation does), <a href="http://en.wikipedia.org/wiki/Quantum_algorithm" title="Quantum algorithm">non-classical processing</a> (as Grover's search does), or alternatively have guaranteed assumptions on the input structure (as the logarithmic time <a href="http://en.wikipedia.org/wiki/Binary_search_algorithm" title="Binary search algorithm">binary search</a> and many tree maintenance algorithms do). However, languages such as the set of all strings that have a 1-bit in the position indicated by the first log(n) bits of the string may depend on every bit of the input and yet be computable in sub-linear time.</p>
<p>The specific term <i>sublinear time algorithm</i> is usually reserved to algorithms that are unlike the above in that they are run over classical serial machine models and are not allowed prior assumptions on the input.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5"><span>[</span>5<span>]</span></a></sup> They are however allowed to be <a href="http://en.wikipedia.org/wiki/Randomized_algorithm" title="Randomized algorithm">randomized</a>, and indeed must be randomized for all but the most trivial of tasks.</p>
<p>As such an algorithm must provide an answer without reading the entire input, its particulars heavily depend on the access allowed to the input. Usually for an input that is represented as a binary string <i>b</i><sub>1</sub>,...,<i>b<sub>k</sub></i> it is assumed that the algorithm can in time O(1) request and obtain the value of <i>b<sub>i</sub></i> for any <i>i</i>.</p>
<p>Sub-linear time algorithms are typically randomized, and provide only <a href="http://en.wikipedia.org/wiki/Approximation_algorithm" title="Approximation algorithm">approximate</a> solutions. In fact, the property of a binary string having only zeros (and no ones) can be easily proved not to be decidable by a (non-approximate) sub-linear time algorithm. Sub-linear time algorithms arise naturally in the investigation of <a href="http://en.wikipedia.org/wiki/Property_testing" title="Property testing">property testing</a>.</p>
<h2><span class="mw-headline" id="Linear_time">Linear time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=6" title="Edit section: Linear time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>An algorithm is said to take <b>linear time</b>, or <b>O(<i>n</i>)</b> time, if its time complexity is O(<i>n</i>). Informally, this means that for large enough input sizes the running time increases linearly with the size of the input. For example, a procedure that adds up all elements of a list requires time proportional to the length of the list. This description is slightly inaccurate, since the running time can significantly deviate from a precise proportionality, especially for small values of <i>n</i>.</p>
<p>Linear time is often viewed as a desirable attribute for an algorithm. Much research has been invested into creating algorithms exhibiting (nearly) linear time or better. This research includes both software and hardware methods. In the case of hardware, some algorithms which, mathematically speaking, can never achieve linear time with standard <a href="http://en.wikipedia.org/wiki/Computation_model" title="Computation model" class="mw-redirect">computation models</a> are able to run in linear time. There are several hardware technologies which exploit <a href="Parallel_computing.html" title="Parallel computing">parallelism</a> to provide this. An example is <a href="http://en.wikipedia.org/wiki/Content-addressable_memory" title="Content-addressable memory">content-addressable memory</a>. This concept of linear time is used in string matching algorithms such as the <a href="http://en.wikipedia.org/wiki/Boyer–Moore_string_search_algorithm" title="Boyer–Moore string search algorithm">Boyer-Moore Algorithm</a> and <a href="http://en.wikipedia.org/wiki/Ukkonen%27s_Algorithm" title="Ukkonen's Algorithm" class="mw-redirect">Ukkonen's Algorithm</a>.</p>
<h2><span class="mw-headline" id="Linearithmic_time">Linearithmic time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=7" title="Edit section: Linearithmic time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>A <b>linearithmic function</b> (<a href="http://en.wikipedia.org/wiki/Portmanteau" title="Portmanteau">portmanteau</a> of <i>linear</i> and <i>logarithmic</i>) is a function of the form <i>n</i> · log <i>n</i> (i.e., a <a href="http://en.wikipedia.org/wiki/Product_(mathematics)" title="Product (mathematics)">product</a> of a <a href="http://en.wikipedia.org/wiki/Linear" title="Linear" class="mw-redirect">linear</a> and a <a href="http://en.wikipedia.org/wiki/Logarithm" title="Logarithm">logarithmic</a> term). An algorithm is said to run in <b>linearithmic time</b> if <i>T</i>(<i>n</i>) = <b>O(<i>n</i> log <i>n</i>)</b>. Compared to other functions, a linearithmic function is ω(<i>n</i>), o(<i>n</i><sup>1+ε</sup>) for every ε &gt; 0, and Θ(<i>n</i> · log <i>n</i>). Thus, a linearithmic term grows faster than a linear term but slower than any polynomial in <i>n</i> with exponent strictly greater than 1.</p>
<p>In many cases, the <i>n</i> · log <i>n</i> running time is simply the result of performing a Θ(log <i>n</i>) operation <i>n</i> times. For example, <a href="http://en.wikipedia.org/wiki/Binary_tree_sort" title="Binary tree sort" class="mw-redirect">binary tree sort</a> creates a <a href="Binary_tree.html" title="Binary tree">binary tree</a> by inserting each element of the n-sized array one by one. Since the insert operation on a <a href="Self-balancing_binary_search_tree.html" title="Self-balancing binary search tree">self-balancing binary search tree</a> takes O(log <i>n</i>) time, the entire algorithm takes linearithmic time.</p>
<p><a href="http://en.wikipedia.org/wiki/Comparison_sort" title="Comparison sort">Comparison sorts</a> require at least linearithmic number of comparisons in the worst case because log(<i>n</i>!) = Θ(<i>n</i> log <i>n</i>), by <a href="http://en.wikipedia.org/wiki/Stirling%27s_approximation" title="Stirling's approximation">Stirling's approximation</a>. They also frequently arise from the <a href="http://en.wikipedia.org/wiki/Recurrence_relation" title="Recurrence relation">recurrence relation</a> <i>T</i>(<i>n</i>) = 2 <i>T</i>(<i>n</i>/2) + O(<i>n</i>).</p>
<p>Some famous <a href="Algorithm.html" title="Algorithm">algorithms</a> that run in linearithmic time include:</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Quicksort" title="Quicksort">Quicksort</a> in the average case</li>
<li><a href="Heapsort.html" title="Heapsort">Heapsort</a>, <a href="http://en.wikipedia.org/wiki/Merge_sort" title="Merge sort">merge sort</a>, <a href="http://en.wikipedia.org/wiki/Introsort" title="Introsort">introsort</a>, binary tree sort, <a href="http://en.wikipedia.org/wiki/Smoothsort" title="Smoothsort">smoothsort</a>, <a href="http://en.wikipedia.org/wiki/Patience_sorting" title="Patience sorting">patience sorting</a>, etc. in the worst case</li>
<li><a href="http://en.wikipedia.org/wiki/Fast_Fourier_transform" title="Fast Fourier transform">Fast Fourier transforms</a></li>
<li><a href="http://en.wikipedia.org/wiki/Monge_array" title="Monge array">Monge array</a> calculation</li>
</ul>
<h2><span class="mw-headline" id="Quasilinear_time">Quasilinear time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=8" title="Edit section: Quasilinear time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>A generalization of linearithmic time is <b>quasilinear time</b>. An algorithm is said to run in quasilinear time if <i>T</i>(<i>n</i>) = <b>O(<i>n</i> log<sup><i>k</i></sup> <i>n</i>)</b> for any constant <i>k</i>; linearithmic time is the case <i>k</i>&#160;=&#160;1. Quasilinear time algorithms are also o(<i>n</i><sup>1+ε</sup>) for every ε &gt; 0, and thus run faster than any polynomial in <i>n</i> with exponent strictly greater than 1.</p>
<p>Algorithms which run in quasilinear time, in addition to the linearithmic algorithms listed above, include:</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/In-place_merge_sort" title="In-place merge sort" class="mw-redirect">In-place merge sort</a>, O(<i>n</i> log<sup><i>2</i></sup> <i>n</i>)</li>
</ul>
<h2><span class="mw-headline" id="Sub-quadratic_time">Sub-quadratic time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=9" title="Edit section: Sub-quadratic time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>An <a href="Algorithm.html" title="Algorithm">algorithm</a> is said to be <b>subquadratic time</b> if <i>T</i>(<i>n</i>) = o(<i>n</i><sup>2</sup>).</p>
<p>For example, most naïve comparison-based <a href="http://en.wikipedia.org/wiki/Sorting_algorithm" title="Sorting algorithm">sorting algorithms</a> are quadratic (e.g. <a href="http://en.wikipedia.org/wiki/Insertion_sort" title="Insertion sort">insertion sort</a>), but more advanced algorithms can be found that are subquadratic (e.g. <a href="http://en.wikipedia.org/wiki/Shell_sort" title="Shell sort" class="mw-redirect">Shell sort</a>). No general-purpose sorts run in linear time, but the change from quadratic to sub-quadratic is of great practical importance.</p>
<h2><span class="mw-headline" id="Polynomial_time">Polynomial time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=10" title="Edit section: Polynomial time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>An algorithm is said to be of <b>polynomial time</b> if its running time is <a href="http://en.wikipedia.org/wiki/Upper_bound" title="Upper bound" class="mw-redirect">upper bounded</a> by a <a href="http://en.wikipedia.org/wiki/Polynomial_expression" title="Polynomial expression">polynomial expression</a> in the size of the input for the algorithm, i.e., <i>T</i>(<i>n</i>) = O(<i>n</i><sup><i>k</i></sup>) for some constant <i>k</i>.<sup id="cite_ref-Sipser_1-1" class="reference"><a href="#cite_note-Sipser-1"><span>[</span>1<span>]</span></a></sup><sup id="cite_ref-6" class="reference"><a href="#cite_note-6"><span>[</span>6<span>]</span></a></sup> <a href="http://en.wikipedia.org/wiki/Decision_problem" title="Decision problem">Problems</a> for which a deterministic polynomial time algorithm exists belong to the <a href="http://en.wikipedia.org/wiki/Complexity_class" title="Complexity class">complexity class</a> <b><a href="http://en.wikipedia.org/wiki/P_(complexity)" title="P (complexity)">P</a></b>, which is central in the field of <a href="Computational_complexity_theory.html" title="Computational complexity theory">computational complexity theory</a>. <a href="http://en.wikipedia.org/wiki/Cobham%27s_thesis" title="Cobham's thesis">Cobham's thesis</a> states that polynomial time is a synonym for "tractable", "feasible", "efficient", or "fast".<sup id="cite_ref-7" class="reference"><a href="#cite_note-7"><span>[</span>7<span>]</span></a></sup></p>
<p>Some examples of polynomial time algorithms:</p>
<ul>
<li>The <a href="http://en.wikipedia.org/wiki/Quicksort" title="Quicksort">quicksort</a> sorting algorithm on <i>n</i> integers performs at most <img class="tex" alt="An^2" src="http://upload.wikimedia.org/math/e/c/7/ec721483e12684d9b939638557bbec24.png" /> operations for some constant <i>A</i>. Thus it runs in time <img class="tex" alt="O(n^2)" src="http://upload.wikimedia.org/math/1/8/9/189317b4b935a745fcfaf95940d2b4f0.png" /> and is a polynomial time algorithm.</li>
<li>All the basic arithmetic operations (addition, subtraction, multiplication, division, and comparison) can be done in polynomial time.</li>
<li><a href="http://en.wikipedia.org/wiki/Maximum_matching" title="Maximum matching" class="mw-redirect">Maximum matchings</a> in <a href="http://en.wikipedia.org/wiki/Graph_(mathematics)" title="Graph (mathematics)">graphs</a> can be found in polynomial time.</li>
</ul>
<h3><span class="mw-headline" id="Strongly_and_weakly_polynomial_time">Strongly and weakly polynomial time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=11" title="Edit section: Strongly and weakly polynomial time">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>In some contexts, especially in <a href="http://en.wikipedia.org/wiki/Optimization_(mathematics)" title="Optimization (mathematics)" class="mw-redirect">optimization</a>, one differentiates between <b>strongly polynomial time</b> and <b>weakly polynomial time</b> algorithms. These two concepts are only relevant if the inputs to the algorithms consist of integers.</p>
<p>Strongly polynomial time is defined in the arithmetic model of computation. In this model of computation the basic arithmetic operations (addition, subtraction, multiplication, division, and comparison) take a unit time step to perform, regardless of the sizes of the operands. The algorithm runs in strongly polynomial time if <sup id="cite_ref-8" class="reference"><a href="#cite_note-8"><span>[</span>8<span>]</span></a></sup></p>
<ol>
<li>the number of operations in the arithmetic model of computation is bounded by a polynomial in the number of integers in the input instance; and</li>
<li>the space used by the algorithm is bounded by a polynomial in the size of the input.</li>
</ol>
<p>Any algorithm with these two properties can be converted to a polynomial time algorithm by replacing the arithmetic operations by suitable algorithms for performing the arithmetic operations on a <a href="Turing_machine.html" title="Turing machine">Turing machine</a>. If the second of the above requirement is not met, then this is not true anymore. Given the integer <img class="tex" alt="2^n" src="http://upload.wikimedia.org/math/9/a/a/9aa0ec0374c89d2f7f3d9cd2e05a4bc5.png" /> (which takes up space proportional to n), it is possible to compute <img class="tex" alt="2^{2^n}" src="http://upload.wikimedia.org/math/b/7/1/b7118a777168022f01f7439db6d769ad.png" /> with n multiplications using <a href="http://en.wikipedia.org/wiki/Repeated_squaring" title="Repeated squaring" class="mw-redirect">repeated squaring</a>. However, the space used to represent <img class="tex" alt="2^{2^n}" src="http://upload.wikimedia.org/math/b/7/1/b7118a777168022f01f7439db6d769ad.png" /> is proportional to <img class="tex" alt="2^n" src="http://upload.wikimedia.org/math/9/a/a/9aa0ec0374c89d2f7f3d9cd2e05a4bc5.png" />, and thus exponential rather than polynomial in the space used to represent the input. Hence, it is not possible to carry out this computation in polynomial time on a Turing machine, but it is possible to compute it by polynomially many arithmetic operations.</p>
<p>Conversely, there are algorithms which run in a number of Turing machine steps bounded by a polynomial in the length of binary-encoded input, but do not take a number of arithmetic operations bounded by a polynomial in the number of input numbers. The <a href="http://en.wikipedia.org/wiki/Euclidean_algorithm" title="Euclidean algorithm">Euclidean algorithm</a> for computing the <a href="http://en.wikipedia.org/wiki/Greatest_common_divisor" title="Greatest common divisor">greatest common divisor</a> of two integers is one example. Given two integers <img class="tex" alt="a" src="http://upload.wikimedia.org/math/0/c/c/0cc175b9c0f1b6a831c399e269772661.png" /> and <img class="tex" alt="b" src="http://upload.wikimedia.org/math/9/2/e/92eb5ffee6ae2fec3ad71c777531578f.png" /> the running time of the algorithm is bounded by <img class="tex" alt="O((\log\ a + \log\ b)^2)" src="http://upload.wikimedia.org/math/c/1/6/c16e33e7d766553b99a856a48ad25a5a.png" /> Turing machine steps. This is polynomial in the size of a binary representation of <img class="tex" alt="a" src="http://upload.wikimedia.org/math/0/c/c/0cc175b9c0f1b6a831c399e269772661.png" /> and <img class="tex" alt="b" src="http://upload.wikimedia.org/math/9/2/e/92eb5ffee6ae2fec3ad71c777531578f.png" /> as the size of such a representation is roughly <img class="tex" alt="\log\ a + \log\ b" src="http://upload.wikimedia.org/math/7/1/a/71abcaf742842a5a1a44be76b6205106.png" />. At the same time, the number of arithmetic operations cannot be bound by the number of integers in the input (which is constant in this case, there are always only two integers in the input). Due to the latter observation, the algorithm does not run in strongly polynomial time. Its real running time depends on the magnitudes of <img class="tex" alt="a" src="http://upload.wikimedia.org/math/0/c/c/0cc175b9c0f1b6a831c399e269772661.png" /> and <img class="tex" alt="b" src="http://upload.wikimedia.org/math/9/2/e/92eb5ffee6ae2fec3ad71c777531578f.png" /> and not only on the number of integers in the input.</p>
<p>An algorithm which runs in polynomial time but which is not strongly polynomial is said to run in <b>weakly polynomial time</b>.<sup id="cite_ref-9" class="reference"><a href="#cite_note-9"><span>[</span>9<span>]</span></a></sup> A well-known example of a problem for which a weakly polynomial-time algorithm is known, but is not known to admit a strongly polynomial-time algorithm, is <a href="http://en.wikipedia.org/wiki/Linear_programming" title="Linear programming">linear programming</a>. Weakly polynomial-time should not be confused with <a href="http://en.wikipedia.org/wiki/Pseudo-polynomial_time" title="Pseudo-polynomial time">pseudo-polynomial time</a>.</p>
<h3><span class="mw-headline" id="Complexity_classes">Complexity classes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=12" title="Edit section: Complexity classes">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The concept of polynomial time leads to several complexity classes in computational complexity theory. Some important classes defined using polynomial time are the following.</p>
<ul>
<li><b><a href="http://en.wikipedia.org/wiki/P_(complexity)" title="P (complexity)">P</a></b>: The <a href="http://en.wikipedia.org/wiki/Complexity_class" title="Complexity class">complexity class</a> of <a href="http://en.wikipedia.org/wiki/Decision_problem" title="Decision problem">decision problems</a> that can be solved on a <a href="http://en.wikipedia.org/wiki/Deterministic_Turing_machine" title="Deterministic Turing machine" class="mw-redirect">deterministic Turing machine</a> in polynomial time.</li>
<li><b><a href="http://en.wikipedia.org/wiki/NP_(complexity)" title="NP (complexity)">NP</a></b>: The complexity class of decision problems that can be solved on a <a href="http://en.wikipedia.org/wiki/Non-deterministic_Turing_machine" title="Non-deterministic Turing machine">non-deterministic Turing machine</a> in polynomial time.</li>
<li><b><a href="http://en.wikipedia.org/wiki/ZPP_(complexity)" title="ZPP (complexity)">ZPP</a></b>: The complexity class of decision problems that can be solved with zero error on a <a href="http://en.wikipedia.org/wiki/Probabilistic_Turing_machine" title="Probabilistic Turing machine">probabilistic Turing machine</a> in polynomial time.</li>
<li><b><a href="http://en.wikipedia.org/wiki/RP_(complexity)" title="RP (complexity)">RP</a></b>: The complexity class of decision problems that can be solved with 1-sided error on a probabilistic Turing machine in polynomial time.</li>
<li><b><a href="http://en.wikipedia.org/wiki/BPP_(complexity)" title="BPP (complexity)">BPP</a></b>: The complexity class of decision problems that can be solved with 2-sided error on a probabilistic Turing machine in polynomial time.</li>
<li><b><a href="http://en.wikipedia.org/wiki/BQP" title="BQP">BQP</a></b>: The complexity class of decision problems that can be solved with 2-sided error on a <a href="http://en.wikipedia.org/wiki/Quantum_Turing_machine" title="Quantum Turing machine">quantum Turing machine</a> in polynomial time.</li>
</ul>
<p>P is the smallest time-complexity class on a deterministic machine which is <a href="http://en.wikipedia.org/wiki/Robustness_(computer_science)" title="Robustness (computer science)">robust</a> in terms of machine model changes. (For example, a change from a single-tape Turing machine to a multi-tape machine can lead to a quadratic speedup, but any algorithm that runs in polynomial time under one model also does so on the other.) Any given <a href="http://en.wikipedia.org/wiki/Abstract_machine" title="Abstract machine">abstract machine</a> will have a complexity class corresponding to the problems which can be solved in polynomial time on that machine.</p>
<h2><span class="mw-headline" id="Superpolynomial_time">Superpolynomial time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=13" title="Edit section: Superpolynomial time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>An algorithm is said to take <b>superpolynomial time</b> if <i>T</i>(<i>n</i>) is not bounded above by any polynomial. It is ω(<i>n</i><sup><i>c</i></sup>) time for all constants <i>c</i>, where <i>n</i> is the input parameter, typically the number of bits in the input.</p>
<p>For example, an algorithm that runs for 2<sup><i>n</i></sup> steps on an input of size <i>n</i> requires superpolynomial time (more specifically, exponential time).</p>
<p>An algorithm that uses exponential resources is clearly superpolynomial, but some algorithms are only very weakly superpolynomial. For example, the <a href="http://en.wikipedia.org/wiki/Adleman–Pomerance–Rumely_primality_test" title="Adleman–Pomerance–Rumely primality test">Adleman–Pomerance–Rumely primality test</a> runs for <i>n</i><sup>O(log log <i>n</i>)</sup> time on <i>n</i>-bit inputs; this grows faster than any polynomial for large enough <i>n</i>, but the input size must become impractically large before it cannot be dominated by a polynomial with small degree.</p>
<p>An algorithm that requires superpolynomial time lies outside the <a href="http://en.wikipedia.org/wiki/Complexity_class" title="Complexity class">complexity class</a> <b><a href="http://en.wikipedia.org/wiki/P_(complexity)" title="P (complexity)">P</a></b>. <a href="http://en.wikipedia.org/wiki/Cobham%27s_thesis" title="Cobham's thesis">Cobham's thesis</a> posits that these algorithms are impractical, and in many cases they are. Since the <a href="http://en.wikipedia.org/wiki/P_versus_NP_problem" title="P versus NP problem">P versus NP problem</a> is unresolved, no algorithm for an <a href="http://en.wikipedia.org/wiki/NP-complete" title="NP-complete">NP-complete</a> problem is currently known to run in polynomial time.</p>
<h2><span class="mw-headline" id="Quasi-polynomial_time">Quasi-polynomial time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=14" title="Edit section: Quasi-polynomial time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p><b>Quasi-polynomial time</b> algorithms are algorithms which run slower than polynomial time, yet not so slow as to be exponential time. The worst case running time of a quasi-polynomial time algorithm is <img class="tex" alt="2^{O((\log n)^c)}" src="http://upload.wikimedia.org/math/c/6/d/c6d90993b64f34b1b580d0fe49c0bf2e.png" /> for some fixed <i>c</i>. The best-known classical algorithm for integer factorization, the <a href="http://en.wikipedia.org/wiki/General_number_field_sieve" title="General number field sieve">general number field sieve</a>, which runs in time about <img class="tex" alt="2^{\tilde{O}(n^{1/3})}" src="http://upload.wikimedia.org/math/1/a/3/1a38e0e85f3c2ffc26485d05899bfe92.png" /> is <i>not</i> quasi-polynomial since the running time cannot be expressed as <img class="tex" alt="2^{O((\log n)^c)}" src="http://upload.wikimedia.org/math/c/6/d/c6d90993b64f34b1b580d0fe49c0bf2e.png" /> for some fixed <i>c</i>. If the constant "c" in the definition of quasi-polynomial time algorithms is equal to 1, we get a polynomial time algorithm, and if it is less than 1, we get a sub-linear time algorithm.</p>
<p>Quasi-polynomial time algorithms typically arise in reductions from an <a href="http://en.wikipedia.org/wiki/NP-hard" title="NP-hard">NP-hard</a> problem to another problem. For example, one can take an instance of an NP hard problem, say <a href="http://en.wikipedia.org/wiki/3SAT" title="3SAT" class="mw-redirect">3SAT</a>, and convert it to an instance of another problem B, but the size of the instance becomes <img class="tex" alt="2^{O((\log n)^c)}" src="http://upload.wikimedia.org/math/c/6/d/c6d90993b64f34b1b580d0fe49c0bf2e.png" />. In that case, this reduction does not prove that problem B is NP-hard; this reduction only shows that there is no polynomial time algorithm for B unless there is a quasi-polynomial time algorithm for 3SAT (and thus all of <a href="http://en.wikipedia.org/wiki/NP_(complexity)" title="NP (complexity)">NP</a>). Similarly, there are some problems for which we know quasi-polynomial time algorithms, but no polynomial time algorithm is known. Such problems arise in approximation algorithms; a famous example is the directed <a href="http://en.wikipedia.org/wiki/Steiner_tree_problem" title="Steiner tree problem">Steiner tree problem</a>, for which there is a quasi-polynomial time approximation algorithm achieving an approximation factor of <img class="tex" alt="O(\log^3 n)" src="http://upload.wikimedia.org/math/9/3/4/934e9901e748f57e2761d47df3425dd5.png" /> (n being the number of vertices), but showing the existence of such a polynomial time algorithm is an open problem.</p>
<p>The complexity class <b>QP</b> consists of all problems which have quasi-polynomial time algorithms. It can be defined in terms of <a href="http://en.wikipedia.org/wiki/DTIME" title="DTIME">DTIME</a> as follows.<sup id="cite_ref-10" class="reference"><a href="#cite_note-10"><span>[</span>10<span>]</span></a></sup></p>
<dl>
<dd><img class="tex" alt="\mbox{QP} = \bigcup_{c \in \mathbb{N}} \mbox{DTIME}(2^{(\log n)^c})" src="http://upload.wikimedia.org/math/9/2/b/92b9070f9e6a91fb0f89ef8170c23b0b.png" /></dd>
</dl>
<h3><span class="mw-headline" id="Relation_to_NP-complete_problems">Relation to NP-complete problems</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=15" title="Edit section: Relation to NP-complete problems">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>In complexity theory, the unsolved <a href="http://en.wikipedia.org/wiki/P_versus_NP" title="P versus NP" class="mw-redirect">P versus NP</a> problem asks if all problems in NP have polynomial-time algorithms. All the best-known algorithms for <a href="http://en.wikipedia.org/wiki/NP-complete" title="NP-complete">NP-complete</a> problems like 3SAT etc. take exponential time. Indeed, it is conjectured for many natural NP-complete problems that they do not have sub-exponential time algorithms. Here "sub-exponential time" is taken to mean the second definition presented above. (On the other hand, many graph problems represented in the natural way by adjacency matrices are solvable in subexponential time simply because the size of the input is square of the number of vertices.) This conjecture (for the k-SAT problem) is known as the <a href="http://en.wikipedia.org/wiki/Exponential_time_hypothesis" title="Exponential time hypothesis">exponential time hypothesis</a>.<sup id="cite_ref-ETH_11-0" class="reference"><a href="#cite_note-ETH-11"><span>[</span>11<span>]</span></a></sup> Since it is conjectured that NP-complete problems do not have quasi-polynomial time algorithms, some inapproximability results in the field of <a href="http://en.wikipedia.org/wiki/Approximation_algorithms" title="Approximation algorithms" class="mw-redirect">approximation algorithms</a> make the assumption that NP-complete problems do not have quasi-polynomial time algorithms. For example, see the known inapproximability results for the <a href="http://en.wikipedia.org/wiki/Set_cover" title="Set cover" class="mw-redirect">set cover</a> problem.</p>
<h2><span class="mw-headline" id="Sub-exponential_time">Sub-exponential time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=16" title="Edit section: Sub-exponential time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The term <b>sub-exponential time</b> is used to express that the running time of some algorithm may grow faster than any polynomial but is still significantly smaller than an exponential. In this sense, problems that have sub-exponential time algorithms are somewhat more tractable than those that only have exponential algorithms. The precise definition of "sub-exponential" is not generally agreed upon,<sup id="cite_ref-12" class="reference"><a href="#cite_note-12"><span>[</span>12<span>]</span></a></sup> and we list the two most widely used ones below.</p>
<h3><span class="mw-headline" id="First_definition">First definition</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=17" title="Edit section: First definition">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>A problem is said to be sub-exponential time solvable if it can be solved in running times whose logarithms grow smaller than any given polynomial. More precisely, a problem is in sub-exponential time if for every ε&#160;&gt;&#160;0 there exists an algorithm which solves the problem in time O(2<sup>n<sup>ε</sup></sup>). The set of all such problems is the complexity class <b>SUBEXP</b> which can be defined in terms of <a href="http://en.wikipedia.org/wiki/DTIME" title="DTIME">DTIME</a> as follows.<sup id="cite_ref-bpp_3-1" class="reference"><a href="#cite_note-bpp-3"><span>[</span>3<span>]</span></a></sup><sup id="cite_ref-13" class="reference"><a href="#cite_note-13"><span>[</span>13<span>]</span></a></sup><sup id="cite_ref-14" class="reference"><a href="#cite_note-14"><span>[</span>14<span>]</span></a></sup><sup id="cite_ref-15" class="reference"><a href="#cite_note-15"><span>[</span>15<span>]</span></a></sup></p>
<dl>
<dd><img class="tex" alt="\text{SUBEXP}=\bigcap_{\varepsilon&gt;0} \text{DTIME}\left(2^{n^\varepsilon}\right)" src="http://upload.wikimedia.org/math/c/8/4/c84a87cde028a060b06e8eaf7c97d5e4.png" /></dd>
</dl>
<p>Note that this notion of sub-exponential is non-uniform in terms of ε in the sense that ε is not part of the input and each ε may have its own algorithm for the problem.</p>
<h3><span class="mw-headline" id="Second_definition">Second definition</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=18" title="Edit section: Second definition">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Some authors define sub-exponential time as running times in 2<sup>o(<i>n</i>)</sup>.<sup id="cite_ref-ETH_11-1" class="reference"><a href="#cite_note-ETH-11"><span>[</span>11<span>]</span></a></sup><sup id="cite_ref-16" class="reference"><a href="#cite_note-16"><span>[</span>16<span>]</span></a></sup><sup id="cite_ref-17" class="reference"><a href="#cite_note-17"><span>[</span>17<span>]</span></a></sup> This definition allows larger running times than the first definition of sub-exponential time. An example of such a sub-exponential time algorithm is the best-known classical algorithm for integer factorization, the <a href="http://en.wikipedia.org/wiki/General_number_field_sieve" title="General number field sieve">general number field sieve</a>, which runs in time about <img class="tex" alt="2^{\tilde{O}(n^{1/3})}" src="http://upload.wikimedia.org/math/1/a/3/1a38e0e85f3c2ffc26485d05899bfe92.png" />, where the length of the input is <i>n</i>. Another example is the best-known algorithm for the <a href="http://en.wikipedia.org/wiki/Graph_isomorphism_problem" title="Graph isomorphism problem">graph isomorphism problem</a>, which runs in time 2<sup>O(√(<i>n</i>&#160;log&#160;<i>n</i>))</sup>.</p>
<p>Note that it makes a difference whether the algorithm is allowed to be sub-exponential in the size of the instance, the number of vertices, or the number of edges. In <a href="http://en.wikipedia.org/wiki/Parameterized_complexity" title="Parameterized complexity">parameterized complexity</a>, this difference is made explicit by considering pairs <img class="tex" alt="(L,k)" src="http://upload.wikimedia.org/math/e/d/c/edcfd7520be5cdd8919403055ec97762.png" /> of <a href="http://en.wikipedia.org/wiki/Decision_problem" title="Decision problem">decision problems</a> and parameters <i>k</i>. <b>SUBEPT</b> is the class of all parameterized problems that run in time sub-exponential in <i>k</i> and polynomial in the input size <i>n</i>:<sup id="cite_ref-18" class="reference"><a href="#cite_note-18"><span>[</span>18<span>]</span></a></sup></p>
<dl>
<dd><img class="tex" alt="\text{SUBEPT}=\text{DTIME}\left(2^{o(k)} \cdot \text{poly}(n)\right)." src="http://upload.wikimedia.org/math/7/7/9/7791cc109e38c09ed3348de8297eb251.png" /></dd>
</dl>
<p>More precisely, SUBEPT is the class of all parameterized problems <img class="tex" alt="(L,k)" src="http://upload.wikimedia.org/math/e/d/c/edcfd7520be5cdd8919403055ec97762.png" /> for which there is a <a href="http://en.wikipedia.org/wiki/Computable_function" title="Computable function">computable function</a> <img class="tex" alt="f&#160;: \mathbb N\to\mathbb N" src="http://upload.wikimedia.org/math/d/e/2/de2a2f2ac77f866456067895f72a1661.png" /> with <img class="tex" alt="f \in o(k)" src="http://upload.wikimedia.org/math/3/f/7/3f7886c0fab1a9f05420ab7dbcbafc01.png" /> and an algorithm that decides <i>L</i> in time <img class="tex" alt="2^{f(k)} \cdot \text{poly}(n)" src="http://upload.wikimedia.org/math/9/6/6/966e27d89ce2b251b61038ae4af75329.png" />.</p>
<h4><span class="mw-headline" id="Exponential_time_hypothesis">Exponential time hypothesis</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=19" title="Edit section: Exponential time hypothesis">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="rellink relarticle mainarticle">Main article: <a href="http://en.wikipedia.org/wiki/Exponential_time_hypothesis" title="Exponential time hypothesis">Exponential time hypothesis</a></div>
<p>The <b>exponential time hypothesis</b> (<b>ETH</b>) is that <a href="http://en.wikipedia.org/wiki/3SAT" title="3SAT" class="mw-redirect">3SAT</a>, the satisfiability problem of Boolean formulas in <a href="http://en.wikipedia.org/wiki/Conjunctive_normal_form" title="Conjunctive normal form">conjunctive normal form</a> with at most three literals per clause and with <i>n</i> variables, cannot be solved in time 2<sup><i>o</i>(<i>n</i>)</sup>. More precisely, the hypothesis is that there is some absolute constant <i>c</i>&gt;0 such that 3SAT cannot be decided in time 2<sup><i>cn</i></sup> by any deterministic Turing machine. With <i>m</i> denoting the number of clauses, ETH is equivalent to the hypothesis that <i>k</i>SAT cannot be solved in time 2<sup><i>o</i>(<i>m</i>)</sup> for any integer <i>k</i>&#160;≥&#160;3.<sup id="cite_ref-19" class="reference"><a href="#cite_note-19"><span>[</span>19<span>]</span></a></sup> The exponential time hypothesis implies <a href="http://en.wikipedia.org/wiki/P_≠_NP" title="P ≠ NP" class="mw-redirect">P ≠ NP</a>.</p>
<h2><span class="mw-headline" id="Exponential_time">Exponential time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=20" title="Edit section: Exponential time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>An algorithm is said to be <b>exponential time</b>, if <i>T</i>(<i>n</i>) is upper bounded by 2<sup>poly(<i>n</i>)</sup>, where poly(<i>n</i>) is some polynomial in <i>n</i>. More formally, an algorithm is exponential time if <i>T</i>(<i>n</i>) is bounded by O(2<sup><i>n</i><sup><i>k</i></sup></sup>) for some constant <i>k</i>. Problems which admit exponential time algorithms on a deterministic Turing machine form the complexity class known as <b><a href="http://en.wikipedia.org/wiki/EXP" title="EXP" class="mw-redirect">EXP</a></b>.</p>
<dl>
<dd><img class="tex" alt="\text{EXP} = \bigcup_{c \in \mathbb{N}} \text{DTIME}\left(2^{n^c}\right)" src="http://upload.wikimedia.org/math/8/0/5/805ef0580d70be22fead4c64e8940c77.png" /></dd>
</dl>
<p>Sometimes, exponential time is used to refer to algorithms that have <i>T</i>(<i>n</i>) = 2<sup>O(<i>n</i>)</sup>, where the exponent is at most a linear function of <i>n</i>. This gives rise to the complexity class <b><a href="http://en.wikipedia.org/wiki/E_(complexity)" title="E (complexity)">E</a></b>.</p>
<dl>
<dd><img class="tex" alt="\text{E} = \bigcup_{c \in \mathbb{N}} \text{DTIME}\left(2^{cn}\right)" src="http://upload.wikimedia.org/math/1/f/7/1f73bd8afa57c7762ee380be63e0638e.png" /></dd>
</dl>
<h2><span class="mw-headline" id="Double_exponential_time">Double exponential time</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=21" title="Edit section: Double exponential time">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>An algorithm is said to be <a href="http://en.wikipedia.org/wiki/Double_exponential_function" title="Double exponential function">double exponential</a> time if <i>T</i>(<i>n</i>) is upper bounded by 2<sup>2<sup>poly(<i>n</i>)</sup></sup>, where poly(<i>n</i>) is some polynomial in <i>n</i>. Such algorithms belong to the complexity class <a href="http://en.wikipedia.org/wiki/2-EXPTIME" title="2-EXPTIME">2-EXPTIME</a>.</p>
<dl>
<dd><img class="tex" alt="\mbox{2-EXPTIME} = \bigcup_{c \in \mathbb{N}} \mbox{DTIME}(2^{2^{n^c}})" src="http://upload.wikimedia.org/math/9/7/2/97294022906157602f43f08cf52f1460.png" /></dd>
</dl>
<p>Well-known double exponential time algorithms include:</p>
<ul>
<li>Decision procedures for <a href="http://en.wikipedia.org/wiki/Presburger_arithmetic" title="Presburger arithmetic">Presburger arithmetic</a></li>
<li>Computing a <a href="http://en.wikipedia.org/wiki/Gröbner_basis" title="Gröbner basis">Gröbner basis</a> (in the worst case)</li>
<li><a href="http://en.wikipedia.org/wiki/Quantifier_elimination" title="Quantifier elimination">Quantifier elimination</a> on <a href="http://en.wikipedia.org/wiki/Real_closed_field" title="Real closed field">real closed fields</a> takes at least double exponential time (but is not even known to be computable in <a href="http://en.wikipedia.org/wiki/ELEMENTARY" title="ELEMENTARY">ELEMENTARY</a>)</li>
</ul>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=22" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="http://en.wikipedia.org/wiki/L-notation" title="L-notation">L-notation</a></li>
</ul>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit&amp;section=23" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist references-column-width" style="-moz-column-width: 33em; -webkit-column-width: 33em; column-width: 33em; list-style-type: decimal;">
<ol class="references">
<li id="cite_note-Sipser-1"><span class="mw-cite-backlink">^ <a href="#cite_ref-Sipser_1-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Sipser_1-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><span class="citation book"><a href="http://en.wikipedia.org/wiki/Michael_Sipser" title="Michael Sipser">Sipser, Michael</a> (2006). <i>Introduction to the Theory of Computation</i>. Course Technology Inc. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-619-21764-2" title="Special:BookSources/0-619-21764-2">0-619-21764-2</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.aufirst=Michael&amp;rft.aulast=Sipser&amp;rft.au=Sipser%2C+Michael&amp;rft.btitle=Introduction+to+the+Theory+of+Computation&amp;rft.date=2006&amp;rft.genre=book&amp;rft.isbn=0-619-21764-2&amp;rft.pub=Course+Technology+Inc&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><span class="citation journal">Mehlhorn, Kurt; Naher, Stefan (1990). "Bounded ordered dictionaries in O(log log N) time and O(n) space". <i>Information Processing Letters</i> <b>35</b> (4): 183. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1016%2F0020-0190(90)90022-P">10.1016/0020-0190(90)90022-P</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=Bounded+ordered+dictionaries+in+O%28log+log+N%29+time+and+O%28n%29+space&amp;rft.aufirst=Kurt&amp;rft.aulast=Mehlhorn&amp;rft.au=Mehlhorn%2C+Kurt&amp;rft.au=Naher%2C+Stefan&amp;rft.date=1990&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1016%2F0020-0190%2890%2990022-P&amp;rft.issue=4&amp;rft.jtitle=Information+Processing+Letters&amp;rft.pages=183&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=35" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-bpp-3"><span class="mw-cite-backlink">^ <a href="#cite_ref-bpp_3-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-bpp_3-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><span class="citation journal"><a href="http://en.wikipedia.org/wiki/László_Babai" title="László Babai">Babai, László</a>; <a href="http://en.wikipedia.org/wiki/Lance_Fortnow" title="Lance Fortnow">Fortnow, Lance</a>; <a href="http://en.wikipedia.org/wiki/Noam_Nisan" title="Noam Nisan">Nisan, N.</a>; <a href="http://en.wikipedia.org/wiki/Avi_Wigderson" title="Avi Wigderson">Wigderson, Avi</a> (1993). "BPP has subexponential time simulations unless EXPTIME has publishable proofs". <i>Computational Complexity</i> (Berlin, New York: <a href="http://en.wikipedia.org/wiki/Springer-Verlag" title="Springer-Verlag" class="mw-redirect">Springer-Verlag</a>) <b>3</b> (4): 307–318. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1007%2FBF01275486">10.1007/BF01275486</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=BPP+has+subexponential+time+simulations+unless+EXPTIME+has+publishable+proofs&amp;rft.au=Babai%2C+L%C3%A1szl%C3%B3&amp;rft.aufirst=L%C3%A1szl%C3%B3&amp;rft.au=Fortnow%2C+Lance&amp;rft.aulast=Babai&amp;rft.au=Nisan%2C+N.&amp;rft.au=Wigderson%2C+Avi&amp;rft.date=1993&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1007%2FBF01275486&amp;rft.issue=4&amp;rft.jtitle=Computational+Complexity&amp;rft.pages=307%E2%80%93318&amp;rft.place=Berlin%2C+New+York&amp;rft.pub=Springer-Verlag&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=3" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-4">^</a></b></span> <span class="reference-text"><span class="citation journal">Bradford, Phillip G.; Rawlins, Gregory J. E.; Shannon, Gregory E. (1998). "Efficient Matrix Chain Ordering in Polylog Time". <i>SIAM Journal on Computing</i> (Philadelphia: <a href="http://en.wikipedia.org/wiki/Society_for_Industrial_and_Applied_Mathematics" title="Society for Industrial and Applied Mathematics">Society for Industrial and Applied Mathematics</a>) <b>27</b> (2): 466–490. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1137%2FS0097539794270698">10.1137/S0097539794270698</a>. <a href="International_Standard_Serial_Number.html" title="International Standard Serial Number">ISSN</a>&#160;<a rel="nofollow" class="external text" href="http://www.worldcat.org/issn/1095-7111">1095-7111</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=Efficient+Matrix+Chain+Ordering+in+Polylog+Time&amp;rft.au=Bradford%2C+Phillip+G.&amp;rft.aufirst=Phillip+G.&amp;rft.aulast=Bradford&amp;rft.au=Rawlins%2C+Gregory+J.+E.&amp;rft.au=Shannon%2C+Gregory+E.&amp;rft.date=1998&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1137%2FS0097539794270698&amp;rft.issn=1095-7111&amp;rft.issue=2&amp;rft.jtitle=SIAM+Journal+on+Computing&amp;rft.pages=466%E2%80%93490&amp;rft.place=Philadelphia&amp;rft.pub=Society+for+Industrial+and+Applied+Mathematics&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=27" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text"><span class="citation journal">Kumar, Ravi; Rubinfeld, Ronitt (2003). <a rel="nofollow" class="external text" href="http://www.cs.princeton.edu/courses/archive/spr04/cos598B/bib/kumarR-survey.pdf">"Sublinear time algorithms"</a>. <i>SIGACT News</i> <b>34</b> (4): 57–67.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=Sublinear+time+algorithms&amp;rft.aufirst=Ravi&amp;rft.au=Kumar%2C+Ravi&amp;rft.aulast=Kumar&amp;rft.au=Rubinfeld%2C+Ronitt&amp;rft.date=2003&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fwww.cs.princeton.edu%2Fcourses%2Farchive%2Fspr04%2Fcos598B%2Fbib%2FkumarR-survey.pdf&amp;rft.issue=4&amp;rft.jtitle=SIGACT+News&amp;rft.pages=57%E2%80%9367&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=34" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-6">^</a></b></span> <span class="reference-text"><span class="citation book"><a href="http://en.wikipedia.org/wiki/Christos_H._Papadimitriou" title="Christos H. Papadimitriou" class="mw-redirect">Papadimitriou, Christos H.</a> (1994). <i>Computational complexity</i>. Reading, Mass.: Addison-Wesley. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-201-53082-1" title="Special:BookSources/0-201-53082-1">0-201-53082-1</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.aufirst=Christos+H.&amp;rft.aulast=Papadimitriou&amp;rft.au=Papadimitriou%2C+Christos+H.&amp;rft.btitle=Computational+complexity&amp;rft.date=1994&amp;rft.genre=book&amp;rft.isbn=0-201-53082-1&amp;rft.place=Reading%2C+Mass.&amp;rft.pub=Addison-Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-7">^</a></b></span> <span class="reference-text"><span class="citation book"><a href="http://en.wikipedia.org/wiki/Alan_Cobham" title="Alan Cobham">Cobham, Alan</a> (1965). "The intrinsic computational difficulty of functions". <i>Proc. Logic, Methodology, and Philosophy of Science II</i>. North Holland.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=Proc.+Logic%2C+Methodology%2C+and+Philosophy+of+Science+II&amp;rft.au=Cobham%2C+Alan&amp;rft.aufirst=Alan&amp;rft.aulast=Cobham&amp;rft.btitle=The+intrinsic+computational+difficulty+of+functions&amp;rft.date=1965&amp;rft.genre=bookitem&amp;rft.pub=North+Holland&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text"><span class="citation book">Grötschel, Martin; <a href="http://en.wikipedia.org/wiki/László_Lovász" title="László Lovász">László Lovász</a>, <a href="http://en.wikipedia.org/wiki/Alexander_Schrijver" title="Alexander Schrijver">Alexander Schrijver</a> (1988). "Complexity, Oracles, and Numerical Computation". <i>Geometric Algorithms and Combinatorial Optimization</i>. Springer. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-387-13624-X" title="Special:BookSources/0-387-13624-X">0-387-13624-X</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=Geometric+Algorithms+and+Combinatorial+Optimization&amp;rft.aufirst=Martin&amp;rft.au=Gr%C3%B6tschel%2C+Martin&amp;rft.aulast=Gr%C3%B6tschel&amp;rft.btitle=Complexity%2C+Oracles%2C+and+Numerical+Computation&amp;rft.date=1988&amp;rft.genre=bookitem&amp;rft.isbn=0-387-13624-X&amp;rft.pub=Springer&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span> <span style="display:none;font-size:100%" class="error citation-comment">Cite uses deprecated parameters (<a href="http://en.wikipedia.org/wiki/Help:CS1_errors#deprecated_params" title="Help:CS1 errors">help</a>)</span></span></li>
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text"><span class="citation book"><a href="http://en.wikipedia.org/wiki/Alexander_Schrijver" title="Alexander Schrijver">Schrijver, Alexander</a> (2003). "Preliminaries on algorithms and Complexity". <i>Combinatorial Optimization: Polyhedra and Efficiency</i> <b>1</b>. Springer. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/3-540-44389-4" title="Special:BookSources/3-540-44389-4">3-540-44389-4</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=Combinatorial+Optimization%3A+Polyhedra+and+Efficiency&amp;rft.aufirst=Alexander&amp;rft.aulast=Schrijver&amp;rft.au=Schrijver%2C+Alexander&amp;rft.btitle=Preliminaries+on+algorithms+and+Complexity&amp;rft.date=2003&amp;rft.genre=bookitem&amp;rft.isbn=3-540-44389-4&amp;rft.pub=Springer&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.volume=1" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-10">^</a></b></span> <span class="reference-text"><i><a href="http://en.wikipedia.org/wiki/Complexity_Zoo" title="Complexity Zoo" class="mw-redirect">Complexity Zoo</a></i>: <a rel="nofollow" class="external text" href="http://complexity-zoo.net/Complexity_Zoo:Q#qp">Class QP: Quasipolynomial-Time</a></span></li>
<li id="cite_note-ETH-11"><span class="mw-cite-backlink">^ <a href="#cite_ref-ETH_11-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-ETH_11-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><span class="citation journal">Impagliazzo, R.; Paturi, R. (2001). "On the complexity of k-SAT". <i>Journal of Computer and System Sciences</i> (<a href="http://en.wikipedia.org/wiki/Elsevier" title="Elsevier">Elsevier</a>) <b>62</b> (2): 367–375. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1006%2Fjcss.2000.1727">10.1006/jcss.2000.1727</a>. <a href="International_Standard_Serial_Number.html" title="International Standard Serial Number">ISSN</a>&#160;<a rel="nofollow" class="external text" href="http://www.worldcat.org/issn/1090-2724">1090-2724</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=On+the+complexity+of+k-SAT&amp;rft.aufirst=R.&amp;rft.au=Impagliazzo%2C+R.&amp;rft.aulast=Impagliazzo&amp;rft.au=Paturi%2C+R.&amp;rft.date=2001&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1006%2Fjcss.2000.1727&amp;rft.issn=1090-2724&amp;rft.issue=2&amp;rft.jtitle=Journal+of+Computer+and+System+Sciences&amp;rft.pages=367%E2%80%93375&amp;rft.pub=Elsevier&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=62" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-12"><span class="mw-cite-backlink"><b><a href="#cite_ref-12">^</a></b></span> <span class="reference-text"><span class="citation web">Aaronson, Scott (5 April 2009). <a rel="nofollow" class="external text" href="http://scottaaronson.com/blog/?p=394">"A not-quite-exponential dilemma"</a>. <i>Shtetl-Optimized</i><span class="reference-accessdate">. Retrieved 2 December 2009</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=A+not-quite-exponential+dilemma&amp;rft.au=Aaronson%2C+Scott&amp;rft.aulast=Aaronson%2C+Scott&amp;rft.date=5+April+2009&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fscottaaronson.com%2Fblog%2F%3Fp%3D394&amp;rft.jtitle=Shtetl-Optimized&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-13"><span class="mw-cite-backlink"><b><a href="#cite_ref-13">^</a></b></span> <span class="reference-text"><i><a href="http://en.wikipedia.org/wiki/Complexity_Zoo" title="Complexity Zoo" class="mw-redirect">Complexity Zoo</a></i>: <a rel="nofollow" class="external text" href="http://complexity-zoo.net/Complexity_Zoo:S#subexp">Class SUBEXP: Deterministic Subexponential-Time</a></span></li>
<li id="cite_note-14"><span class="mw-cite-backlink"><b><a href="#cite_ref-14">^</a></b></span> <span class="reference-text"><span class="citation journal">Moser, P. (2003). "Baire's Categories on Small Complexity Classes". <i><a href="http://en.wikipedia.org/wiki/Lecture_Notes_in_Computer_Science" title="Lecture Notes in Computer Science">Lecture Notes in Computer Science</a></i> (Berlin, New York: Springer-Verlag): 333–342. <a href="International_Standard_Serial_Number.html" title="International Standard Serial Number">ISSN</a>&#160;<a rel="nofollow" class="external text" href="http://www.worldcat.org/issn/0302-9743">0302-9743</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=Baire%27s+Categories+on+Small+Complexity+Classes&amp;rft.aufirst=P.&amp;rft.aulast=Moser&amp;rft.au=Moser%2C+P.&amp;rft.date=2003&amp;rft.genre=article&amp;rft.issn=0302-9743&amp;rft.jtitle=Lecture+Notes+in+Computer+Science&amp;rft.pages=333%E2%80%93342&amp;rft.place=Berlin%2C+New+York&amp;rft.pub=Springer-Verlag&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-15"><span class="mw-cite-backlink"><b><a href="#cite_ref-15">^</a></b></span> <span class="reference-text"><span class="citation journal">Miltersen, P.B. (2001). "DERANDOMIZING COMPLEXITY CLASSES". <i>Handbook of Randomized Computing</i> (Kluwer Academic Pub): 843.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=DERANDOMIZING+COMPLEXITY+CLASSES&amp;rft.aufirst=P.B.&amp;rft.aulast=Miltersen&amp;rft.au=Miltersen%2C+P.B.&amp;rft.date=2001&amp;rft.genre=article&amp;rft.jtitle=Handbook+of+Randomized+Computing&amp;rft.pages=843&amp;rft.pub=Kluwer+Academic+Pub&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-16"><span class="mw-cite-backlink"><b><a href="#cite_ref-16">^</a></b></span> <span class="reference-text"><span class="citation journal">Kuperberg, Greg (2005). "A Subexponential-Time Quantum Algorithm for the Dihedral Hidden Subgroup Problem". <i>SIAM Journal on Computing</i> (Philadelphia: <a href="http://en.wikipedia.org/wiki/Society_for_Industrial_and_Applied_Mathematics" title="Society for Industrial and Applied Mathematics">Society for Industrial and Applied Mathematics</a>) <b>35</b> (1): 188. <a href="International_Standard_Serial_Number.html" title="International Standard Serial Number">ISSN</a>&#160;<a rel="nofollow" class="external text" href="http://www.worldcat.org/issn/1095-7111">1095-7111</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=A+Subexponential-Time+Quantum+Algorithm+for+the+Dihedral+Hidden+Subgroup+Problem&amp;rft.aufirst=Greg&amp;rft.au=Kuperberg%2C+Greg&amp;rft.aulast=Kuperberg&amp;rft.date=2005&amp;rft.genre=article&amp;rft.issn=1095-7111&amp;rft.issue=1&amp;rft.jtitle=SIAM+Journal+on+Computing&amp;rft.pages=188&amp;rft.place=Philadelphia&amp;rft.pub=Society+for+Industrial+and+Applied+Mathematics&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=35" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-17"><span class="mw-cite-backlink"><b><a href="#cite_ref-17">^</a></b></span> <span class="reference-text"><span class="citation Journal">Oded Regev (2004). "A Subexponential Time Algorithm for the Dihedral Hidden Subgroup Problem with Polynomial Space". <a href="http://en.wikipedia.org/wiki/ArXiv" title="ArXiv">arXiv</a>:<a rel="nofollow" class="external text" href="http://arxiv.org/abs/quant-ph/0406151v1">quant-ph/0406151v1</a>&#160;[<a rel="nofollow" class="external text" href="http://arxiv.org/archive/quant-ph">quant-ph</a>].</span></span></li>
<li id="cite_note-18"><span class="mw-cite-backlink"><b><a href="#cite_ref-18">^</a></b></span> <span class="reference-text"><span id="CITEREFFlumGrohe2006" class="citation book">Flum, Jörg; Grohe, Martin (2006). <a rel="nofollow" class="external text" href="http://www.springer.com/east/home/generic/search/results?SGWID=5-40109-22-141358322-0"><i>Parameterized Complexity Theory</i></a>. Springer. p.&#160;417. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-3-540-29952-3" title="Special:BookSources/978-3-540-29952-3">978-3-540-29952-3</a><span class="reference-accessdate">. Retrieved 2010-03-05</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.aufirst=J%C3%B6rg&amp;rft.au=Flum%2C+J%C3%B6rg&amp;rft.au=Grohe%2C+Martin&amp;rft.aulast=Flum&amp;rft.btitle=Parameterized+Complexity+Theory&amp;rft.date=2006&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.springer.com%2Feast%2Fhome%2Fgeneric%2Fsearch%2Fresults%3FSGWID%3D5-40109-22-141358322-0&amp;rft.isbn=978-3-540-29952-3&amp;rft.pages=417&amp;rft.pub=Springer&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-19"><span class="mw-cite-backlink"><b><a href="#cite_ref-19">^</a></b></span> <span class="reference-text"><span class="citation journal"><a href="http://en.wikipedia.org/wiki/Russell_Impagliazzo" title="Russell Impagliazzo">Impagliazzo, R.</a>; Paturi, R.; Zane, F. (2001). "Which problems have strongly exponential complexity?". <i><a href="http://en.wikipedia.org/wiki/Journal_of_Computer_and_System_Sciences" title="Journal of Computer and System Sciences">Journal of Computer and System Sciences</a></i> <b>63</b> (4): 512–530. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1006%2Fjcss.2001.1774">10.1006/jcss.2001.1774</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ATime+complexity&amp;rft.atitle=Which+problems+have+strongly+exponential+complexity%3F&amp;rft.aufirst=R.&amp;rft.au=Impagliazzo%2C+R.&amp;rft.aulast=Impagliazzo&amp;rft.au=Paturi%2C+R.&amp;rft.au=Zane%2C+F.&amp;rft.date=2001&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1006%2Fjcss.2001.1774&amp;rft.issue=4&amp;rft.jtitle=Journal+of+Computer+and+System+Sciences&amp;rft.pages=512%E2%80%93530&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=63" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
</ol>
</div>


<!-- 
NewPP limit report
Parsed by mw1096
CPU time usage: 1.164 seconds
Real time usage: 2.340 seconds
Preprocessor visited node count: 2181/1000000
Preprocessor generated node count: 18133/1500000
Post‐expand include size: 34748/2048000 bytes
Template argument size: 2319/2048000 bytes
Highest expansion depth: 14/40
Expensive parser function count: 4/500
Lua time usage: 0.135/10.000 seconds
Lua memory usage: 3.02 MB/50 MB
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:405944-0!*!0!!en!4!*!math=0 and timestamp 20140324192458
 -->
<noscript><img src="http://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>								<div class="printfooter">
				Retrieved from "<a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;oldid=599906657">http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;oldid=599906657</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="http://en.wikipedia.org/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="http://en.wikipedia.org/wiki/Category:Analysis_of_algorithms" title="Category:Analysis of algorithms">Analysis of algorithms</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Computational_complexity_theory" title="Category:Computational complexity theory">Computational complexity theory</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Computational_resources" title="Category:Computational resources">Computational resources</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="http://en.wikipedia.org/wiki/Category:Pages_containing_cite_templates_with_deprecated_parameters" title="Category:Pages containing cite templates with deprecated parameters">Pages containing cite templates with deprecated parameters</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_needing_additional_references_from_January_2010" title="Category:Articles needing additional references from January 2010">Articles needing additional references from January 2010</a></li><li><a href="http://en.wikipedia.org/wiki/Category:All_articles_needing_additional_references" title="Category:All articles needing additional references">All articles needing additional references</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Use_dmy_dates_from_September_2010" title="Category:Use dmy dates from September 2010">Use dmy dates from September 2010</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Time+complexity&amp;type=signup">Create account</a></li><li id="pt-login"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Time+complexity" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Time_complexity.html"  title="View the content page [c]" accesskey="c">Article</a></span></li>
					<li  id="ca-talk"><span><a href="http://en.wikipedia.org/wiki/Talk:Time_complexity"  title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Time_complexity.html" >Read</a></span></li>
					<li id="ca-edit"><span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=edit"  title="You can edit this page. &#10;Please review your changes before saving. [e]" accesskey="e">Edit</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=history"  title="Past versions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="http://en.wikipedia.org/w/index.php" id="searchform">
					<div id="simpleSearch">
					<input type="search" name="search" placeholder="Search" title="Search Wikipedia [f]" accesskey="f" id="searchInput" /><input type="hidden" value="Special:Search" name="title" /><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton" /><input type="submit" name="go" value="Go" title="Go to a page with this exact name if one exists" id="searchButton" class="searchButton" />		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="Main_Page.html"  title="Visit the main page"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="Main_Page.html" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-contents"><a href="http://en.wikipedia.org/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
			<li id="n-featuredcontent"><a href="http://en.wikipedia.org/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li>
			<li id="n-currentevents"><a href="http://en.wikipedia.org/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
			<li id="n-randompage"><a href="http://en.wikipedia.org/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			<li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li>
			<li id="n-shoplink"><a href="http://shop.wikimedia.org/" title="Visit the Wikimedia Shop">Wikimedia Shop</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
	<h3 id='p-interaction-label'>Interaction</h3>
	<div class="body">
		<ul>
			<li id="n-help"><a href="http://en.wikipedia.org/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			<li id="n-aboutsite"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
			<li id="n-portal"><a href="http://en.wikipedia.org/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
			<li id="n-recentchanges"><a href="http://en.wikipedia.org/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-contactpage"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://en.wikipedia.org/wiki/Special:WhatLinksHere/Time_complexity" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://en.wikipedia.org/wiki/Special:RecentChangesLinked/Time_complexity" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-upload"><a href="http://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li>
			<li id="t-specialpages"><a href="http://en.wikipedia.org/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;oldid=599906657" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;action=info">Page information</a></li>
			<li id="t-wikibase"><a href="http://www.wikidata.org/wiki/Q2393193" title="Link to connected data repository item [g]" accesskey="g">Data item</a></li>
<li id="t-cite"><a href="http://en.wikipedia.org/w/index.php?title=Special:Cite&amp;page=Time_complexity&amp;id=599906657" title="Information on how to cite this page">Cite this page</a></li>		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
	<h3 id='p-coll-print_export-label'>Print/export</h3>
	<div class="body">
		<ul>
			<li id="coll-create_a_book"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Time+complexity">Create a book</a></li>
			<li id="coll-download-as-rl"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Time+complexity&amp;oldid=599906657&amp;writer=rl">Download as PDF</a></li>
			<li id="t-print"><a href="http://en.wikipedia.org/w/index.php?title=Time_complexity&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
	<h3 id='p-lang-label'>Languages</h3>
	<div class="body">
		<ul>
			<li class="interlanguage-link interwiki-de"><a href="http://de.wikipedia.org/wiki/Zeitkomplexität" title="Zeitkomplexität – German" lang="de" hreflang="de">Deutsch</a></li>
			<li class="interlanguage-link interwiki-fa"><a href="http://fa.wikipedia.org/wiki/زمان_اجرای_الگوریتم" title="زمان اجرای الگوریتم – Persian" lang="fa" hreflang="fa">فارسی</a></li>
			<li class="interlanguage-link interwiki-ko"><a href="http://ko.wikipedia.org/wiki/시간_복잡도" title="시간 복잡도 – Korean" lang="ko" hreflang="ko">한국어</a></li>
			<li class="interlanguage-link interwiki-it"><a href="http://it.wikipedia.org/wiki/Complessità_temporale" title="Complessità temporale – Italian" lang="it" hreflang="it">Italiano</a></li>
			<li class="interlanguage-link interwiki-sr"><a href="http://sr.wikipedia.org/wiki/Субекспоненцијално_време" title="Субекспоненцијално време – Serbian" lang="sr" hreflang="sr">Српски / srpski</a></li>
			<li class="interlanguage-link interwiki-zh"><a href="http://zh.wikipedia.org/wiki/时间复杂度" title="时间复杂度 – Chinese" lang="zh" hreflang="zh">中文</a></li>
			<li class="uls-p-lang-dummy"><a href="#"></a></li>
			<li class="wbc-editpage"><a href="http://www.wikidata.org/wiki/Q2393193#sitelinks-wikipedia" title="Edit interlanguage links">Edit links</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 16 March 2014 at 20:01.<br /></li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="http://wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="http://wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy.</a> <br/>
Wikipedia® is a registered trademark of the <a href="http://www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="http://en.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a class="external" href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-mobileview"><a href="http://en.m.wikipedia.org/wiki/Time_complexity" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<a href="http://wikimediafoundation.org/"><img src="http://bits.wikimedia.org/images/wikimedia-button.png" width="88" height="31" alt="Wikimedia Foundation"/></a>
					</li>
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["ext.cite","mobile.desktop","mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.DRN-wizard","ext.gadget.charinsert","mw.MwEmbedSupport.style","ext.navigationTiming","schema.UniversalLanguageSelector","ext.uls.eventlogger","ext.uls.interlanguage","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served by mw1175 in 0.305 secs. -->
	</body>

<!-- Mirrored from en.wikipedia.org/wiki/Time_complexity by HTTrack Website Copier/3.x [XR&CO'2013], Sun, 30 Mar 2014 00:02:02 GMT -->
</html>
