http://old-www.cs.dartmouth.edu/~cs50/data/tse/wikipedia/Coroutine.html
2
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">

<!-- Mirrored from en.wikipedia.org/wiki/Coroutine by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 29 Mar 2014 23:59:02 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="UTF-8" />
<title>Coroutine - Wikipedia, the free encyclopedia</title>
<meta http-equiv="X-UA-Compatible" content="IE=EDGE" />
<meta name="generator" content="MediaWiki 1.23wmf19" />
<link rel="alternate" href="http://en.wikipedia.org/wiki/android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Coroutine" />
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit" />
<link rel="edit" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit" />
<link rel="apple-touch-icon" href="http://bits.wikimedia.org/apple-touch/wikipedia.png" />
<link rel="shortcut icon" href="http://bits.wikimedia.org/favicon/wikipedia.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://en.wikipedia.org/w/opensearch_desc.php" title="Wikipedia (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://en.wikipedia.org/w/api.php?action=rsd" />
<link rel="copyright" href="http://creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="canonical" href="Coroutine.html" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cteahouse%7Cext.rtlcite%2Cwikihiero%7Cext.uls.nojs%7Cext.visualEditor.viewPageTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.ui.button%7Cskins.common.interface%7Cskins.vector.styles&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: enwiki:resourceloader:filter:minify-css:7:3904d24a08aa08f6a68dc338f9be277e */</style>

<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Coroutine","wgTitle":"Coroutine","wgCurRevisionId":601737104,"wgRevisionId":601737104,"wgArticleId":243800,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["All articles with unsourced statements","Articles with unsourced statements from February 2011","Articles with unsourced statements from May 2010","Articles containing potentially dated statements from 2003","All articles containing potentially dated statements","Articles with unsourced statements from October 2007","Concurrent computing","Subroutines"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Coroutine","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":false,"previewDialog":false,"publish":false,"toc":false},"wgBetaFeaturesFeatures":[],"wgVisualEditor":{"isPageWatched":false,"magnifyClipIconURL":"//bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png","pageLanguageCode":"en","pageLanguageDir":"ltr","svgMaxSize":2048},"wikilove-recipient":"","wikilove-anon":0,"wgGuidedTourHelpGuiderUrl":"Help:Guided tours/guider","wgFlowTermsOfUseEdit":"By saving changes, you agree to our \u003Ca class=\"external text\" href=\"//wikimediafoundation.org/wiki/Terms_of_use\"\u003ETerms of Use\u003C/a\u003E and agree to irrevocably release your text under the \u003Ca rel=\"nofollow\" class=\"external text\" href=\"//creativecommons.org/licenses/by-sa/3.0\"\u003ECC BY-SA 3.0 License\u003C/a\u003E and \u003Ca class=\"external text\" href=\"//en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License\"\u003EGFDL\u003C/a\u003E","wgULSAcceptLanguageList":["en-us","en"],"wgULSCurrentAutonym":"English","wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgNoticeProject":"wikipedia","wgWikibaseItemId":"Q1339231"});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"editfont":"default","editondblclick":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nickname":"","norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"showhiddencats":false,"shownumberswatching":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":4,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,
"wllimit":250,"useeditwarning":1,"prefershttps":1,"flaggedrevssimpleui":1,"flaggedrevsstable":0,"flaggedrevseditdiffs":true,"flaggedrevsviewdiffs":false,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"visualeditor-enable":0,"visualeditor-enable-experimental":0,"visualeditor-betatempdisable":0,"wikilove-enabled":1,"echo-subscriptions-web-page-review":true,"echo-subscriptions-email-page-review":false,"ep_showtoplink":false,"ep_bulkdelorgs":false,"ep_bulkdelcourses":true,"ep_showdyk":true,"echo-subscriptions-web-education-program":true,"echo-subscriptions-email-education-program":false,"echo-notify-show-link":true,"echo-show-alert":true,"echo-email-frequency":0,"echo-email-format":"html","echo-subscriptions-email-system":true,"echo-subscriptions-web-system":true,"echo-subscriptions-email-other":false,"echo-subscriptions-web-other":true,"echo-subscriptions-email-edit-user-talk":false,"echo-subscriptions-web-edit-user-talk":true,"echo-subscriptions-email-reverted":false,
"echo-subscriptions-web-reverted":true,"echo-subscriptions-email-article-linked":false,"echo-subscriptions-web-article-linked":false,"echo-subscriptions-email-mention":false,"echo-subscriptions-web-mention":true,"echo-subscriptions-web-edit-thank":true,"echo-subscriptions-email-edit-thank":false,"echo-subscriptions-web-flow-discussion":true,"echo-subscriptions-email-flow-discussion":false,"gettingstarted-task-toolbar-show-intro":true,"uls-preferences":"","language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"searchNs100":false,"searchNs101":false,"searchNs108":false,
"searchNs109":false,"searchNs118":false,"searchNs119":false,"searchNs446":false,"searchNs447":false,"searchNs710":false,"searchNs711":false,"searchNs828":false,"searchNs829":false,"gadget-teahouse":1,"gadget-ReferenceTooltips":1,"gadget-DRN-wizard":1,"gadget-charinsert":1,"gadget-mySandbox":1,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: enwiki:resourceloader:filter:minify-js:7:868e43d07ede2616d2d1dc3507cd8145 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","ext.centralauth.centralautologin","skins.vector.compactPersonalBar.defaultTracking","ext.visualEditor.viewPageTarget.init","ext.uls.init","ext.uls.interface","wikibase.client.init","ext.centralNotice.bannerController","skins.vector.js"]);
}</script>
<link rel="dns-prefetch" href="http://meta.wikimedia.org/" /><!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/static-1.23wmf19/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Coroutine skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<div id="siteNotice"><!-- CentralNotice --></div>
						<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Coroutine</span></h1>
						<div id="bodyContent">
								<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-navigation">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p><b>Coroutines</b> are <a href="http://en.wikipedia.org/wiki/Computer_program" title="Computer program">computer program</a> components that generalize <a href="Subroutine.html" title="Subroutine">subroutines</a> to allow multiple <a href="http://en.wikipedia.org/wiki/Entry_point" title="Entry point">entry points</a> for suspending and resuming execution at certain locations. Coroutines are well-suited for implementing more familiar program components such as <a href="http://en.wikipedia.org/wiki/Cooperative_multitasking" title="Cooperative multitasking" class="mw-redirect">cooperative tasks</a>, <a href="http://en.wikipedia.org/wiki/Exception_handling" title="Exception handling">exceptions</a>, <a href="http://en.wikipedia.org/wiki/Event_loop" title="Event loop">event loop</a>, <a href="http://en.wikipedia.org/wiki/Iterator" title="Iterator">iterators</a>, <a href="http://en.wikipedia.org/wiki/Lazy_evaluation" title="Lazy evaluation">infinite lists</a> and <a href="http://en.wikipedia.org/wiki/Pipeline_(software)" title="Pipeline (software)">pipes</a>.</p>
<p>The term <i>coroutine</i> was coined by <a href="http://en.wikipedia.org/wiki/Melvin_Conway" title="Melvin Conway">Melvin Conway</a> in a 1963 paper.<sup id="cite_ref-Conway1963_1-0" class="reference"><a href="#cite_note-Conway1963-1"><span>[</span>1<span>]</span></a></sup></p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Comparison_with_subroutines"><span class="tocnumber">1</span> <span class="toctext">Comparison with subroutines</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Comparison_with_generators"><span class="tocnumber">2</span> <span class="toctext">Comparison with generators</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Common_uses"><span class="tocnumber">3</span> <span class="toctext">Common uses</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="#Comparison_with_mutual_recursion"><span class="tocnumber">3.1</span> <span class="toctext">Comparison with mutual recursion</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="#Programming_languages_with_native_support"><span class="tocnumber">4</span> <span class="toctext">Programming languages with native support</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#Implementations"><span class="tocnumber">5</span> <span class="toctext">Implementations</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#Alternatives"><span class="tocnumber">6</span> <span class="toctext">Alternatives</span></a>
<ul>
<li class="toclevel-2 tocsection-8"><a href="#Implementation_in_the_.NET_Framework_as_fibers"><span class="tocnumber">6.1</span> <span class="toctext">Implementation in the .NET Framework as fibers</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="#Implementation_in_Mono"><span class="tocnumber">6.2</span> <span class="toctext">Implementation in Mono</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="#Implementations_for_Java"><span class="tocnumber">6.3</span> <span class="toctext">Implementations for Java</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#Implementations_for_C"><span class="tocnumber">6.4</span> <span class="toctext">Implementations for C</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="#Implementations_for_C.2B.2B"><span class="tocnumber">6.5</span> <span class="toctext">Implementations for C++</span></a></li>
<li class="toclevel-2 tocsection-13"><a href="#Implementations_for_C.23"><span class="tocnumber">6.6</span> <span class="toctext">Implementations for C#</span></a></li>
<li class="toclevel-2 tocsection-14"><a href="#Implementations_for_Vala"><span class="tocnumber">6.7</span> <span class="toctext">Implementations for Vala</span></a></li>
<li class="toclevel-2 tocsection-15"><a href="#Implementations_for_Python"><span class="tocnumber">6.8</span> <span class="toctext">Implementations for Python</span></a></li>
<li class="toclevel-2 tocsection-16"><a href="#Implementations_for_Ruby"><span class="tocnumber">6.9</span> <span class="toctext">Implementations for Ruby</span></a></li>
<li class="toclevel-2 tocsection-17"><a href="#Implementations_for_Perl"><span class="tocnumber">6.10</span> <span class="toctext">Implementations for Perl</span></a></li>
<li class="toclevel-2 tocsection-18"><a href="#Implementations_for_Smalltalk"><span class="tocnumber">6.11</span> <span class="toctext">Implementations for Smalltalk</span></a></li>
<li class="toclevel-2 tocsection-19"><a href="#Implementations_for_Scheme"><span class="tocnumber">6.12</span> <span class="toctext">Implementations for Scheme</span></a></li>
<li class="toclevel-2 tocsection-20"><a href="#Implementations_for_Object_Pascal_.28Delphi.29"><span class="tocnumber">6.13</span> <span class="toctext">Implementations for Object Pascal (Delphi)</span></a></li>
<li class="toclevel-2 tocsection-21"><a href="#Implementations_in_assembly_languages"><span class="tocnumber">6.14</span> <span class="toctext">Implementations in assembly languages</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-22"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-23"><a href="#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-24"><a href="#Further_reading"><span class="tocnumber">9</span> <span class="toctext">Further reading</span></a></li>
<li class="toclevel-1 tocsection-25"><a href="#External_links"><span class="tocnumber">10</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Comparison_with_subroutines">Comparison with subroutines</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=1" title="Edit section: Comparison with subroutines">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<blockquote>
<p>"Subroutines are special cases of ... coroutines." –<a href="Donald_Knuth.html" title="Donald Knuth">Donald Knuth</a>.<sup id="cite_ref-KnuthVol1_1_4_2_2-0" class="reference"><a href="#cite_note-KnuthVol1_1_4_2-2"><span>[</span>2<span>]</span></a></sup></p>
</blockquote>
<p>When subroutines are invoked, execution begins at the start, and once a subroutine exits, it is finished; an instance of a subroutine only returns once, and does not hold state between invocations. By contrast, coroutines can exit by calling other coroutines, which may later return to the point where they were invoked in the original coroutine; from the coroutine's point of view, it is not exiting but calling another coroutine.<sup id="cite_ref-KnuthVol1_1_4_2_2-1" class="reference"><a href="#cite_note-KnuthVol1_1_4_2-2"><span>[</span>2<span>]</span></a></sup> Thus, a coroutine instance holds state, and varies between invocations; there can be multiple instances of a given coroutine at once. The difference between calling another coroutine by means of "yielding" to it and simply calling another routine (which then, also, would return to the original point), is that the latter is entered in the same continuous manner as the former. The relation between two coroutines which yield to each other is not that of caller-callee, but instead symmetric.</p>
<p>Any subroutine can be translated to a coroutine which does not call <i>yield</i>.<sup id="cite_ref-Perlis1982_6_3-0" class="reference"><a href="#cite_note-Perlis1982_6-3"><span>[</span>3<span>]</span></a></sup></p>
<p>To implement a programming language with subroutines requires only a single <a href="Stack_(data_structure).html" title="Stack (data structure)" class="mw-redirect">stack</a> that can be preallocated at the start of program execution. By contrast, coroutines, able to call on other coroutines as peers, are best implemented using <a href="http://en.wikipedia.org/wiki/Continuation" title="Continuation">continuations</a>.<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (February 2011)">citation needed</span></a></i>]</sup> Continuations may require allocation of additional stacks, and therefore are more commonly implemented in garbage-collected high-level languages.<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (February 2011)">citation needed</span></a></i>]</sup> Coroutine creation can be done cheaply by preallocating stacks or caching previously allocated stacks.<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (February 2011)">citation needed</span></a></i>]</sup></p>
<p>Here is a simple example of how coroutines can be useful. Suppose you have a consumer-producer relationship where one routine creates items and adds them to a queue and another removes items from the queue and uses them. For reasons of efficiency, you want to add and remove several items at once. The code might look like this:</p>
<pre>
<i>var</i> q := new queue
</pre>
<pre>
<b>coroutine</b> produce
    <b>loop</b>
        <b>while</b> q is not full
            create some new items
            add the items to q
        <b>yield</b> to consume
</pre>
<pre>
<b>coroutine</b> consume
    <b>loop</b>
        <b>while</b> q is not empty
            remove some items from q
            use the items
        <b>yield</b> to produce
</pre>
<p>The queue is then completely filled or emptied before yielding control to the other coroutine using the <i>yield</i> command. The further coroutines calls are starting right after the <i>yield</i>, in the outer coroutine loop.</p>
<p>Although this example is often used to introduce <a href="Thread_(computing).html" title="Thread (computing)">multithreading</a>, two threads are not needed for this: the <i>yield</i> statement can be implemented by a jump directly from one routine into the other.</p>
<h2><span class="mw-headline" id="Comparison_with_generators">Comparison with generators</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=2" title="Edit section: Comparison with generators">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p><a href="http://en.wikipedia.org/wiki/Generator_(computer_science)" title="Generator (computer science)" class="mw-redirect">Generators</a>, also known as semicoroutines,<sup id="cite_ref-Ralston2000_4-0" class="reference"><a href="#cite_note-Ralston2000-4"><span>[</span>4<span>]</span></a></sup> are also a generalisation of subroutines, but are more limited than coroutines. Specifically, while both of these can yield multiple times, suspending their execution and allowing re-entry at multiple entry points, they differ in that coroutines can control where execution continues after they yield, while generators cannot, instead transferring control back to the generator's caller.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5"><span>[</span>5<span>]</span></a></sup> That is, since generators are primarily used to simplify the writing of <a href="http://en.wikipedia.org/wiki/Iterator" title="Iterator">iterators</a>, the <code>yield</code> statement in a generator does not specify a coroutine to jump to, but rather passes a value back to a parent routine.</p>
<p>However, it is still possible to implement coroutines on top of a generator facility, with the aid of a top-level dispatcher routine (a <a href="http://en.wikipedia.org/wiki/Trampoline_(computing)" title="Trampoline (computing)">trampoline</a>, essentially) that passes control explicitly to child generators identified by tokens passed back from the generators:</p>
<pre>
<i>var</i> q := new queue
</pre>
<pre>
<b>generator</b> produce
    <b>loop</b>
        <b>while</b> q is not full
            create some new items
            add the items to q
        <b>yield</b> consume
</pre>
<pre>
<b>generator</b> consume
    <b>loop</b>
        <b>while</b> q is not empty
            remove some items from q
            use the items
        <b>yield</b> produce
</pre>
<pre>
<b>subroutine</b> dispatcher
    <i>var</i> d := new dictionary(<b>generator</b> → <b>iterator</b>)
    d[produce] := <b>start</b> produce
    d[consume] := <b>start</b> consume
    <i>var</i> current := produce
    <b>loop</b>
        current := <b>next</b> d[current]
</pre>
<p>A number of implementations of coroutines for languages with generator support but no native coroutines (e.g. Python<sup id="cite_ref-MertzIBM_6-0" class="reference"><a href="#cite_note-MertzIBM-6"><span>[</span>6<span>]</span></a></sup> before 2.5) use this or a similar model.</p>
<h2><span class="mw-headline" id="Common_uses">Common uses</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=3" title="Edit section: Common uses">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Coroutines are useful to implement the following:</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/State_machine" title="State machine" class="mw-redirect">State machines</a> within a single subroutine, where the state is determined by the current entry/exit point of the procedure; this can result in more readable code compared to use of <a href="Goto.html" title="Goto">goto</a>, and may also be implemented via <a href="http://en.wikipedia.org/wiki/Mutual_recursion" title="Mutual recursion">mutual recursion</a> with <a href="http://en.wikipedia.org/wiki/Tail_call" title="Tail call">tail calls</a>.</li>
<li><a href="http://en.wikipedia.org/wiki/Actor_model" title="Actor model">Actor model</a> of concurrency, for instance in <a href="Video_game.html" title="Video game">video games</a>. Each actor has its own procedures (this again logically separates the code), but they voluntarily give up control to central scheduler, which executes them sequentially (this is a form of <a href="http://en.wikipedia.org/wiki/Cooperative_multitasking" title="Cooperative multitasking" class="mw-redirect">cooperative multitasking</a>).</li>
<li><a href="http://en.wikipedia.org/wiki/Generator_(computer_programming)" title="Generator (computer programming)">Generators</a>, and these are useful for <a href="http://en.wikipedia.org/wiki/Stream_(computing)" title="Stream (computing)">streams</a> – particularly input/output – and for generic traversal of data structures.</li>
<li><a href="http://en.wikipedia.org/wiki/Communicating_sequential_processes" title="Communicating sequential processes">Communicating sequential processes</a> where each sub-process is a coroutine. Channel inputs/outputs and blocking operations yield coroutines and a scheduler unblocks them on completion events.</li>
</ul>
<h3><span class="mw-headline" id="Comparison_with_mutual_recursion">Comparison with mutual recursion</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=4" title="Edit section: Comparison with mutual recursion">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="rellink">Further information: <a href="http://en.wikipedia.org/wiki/Mutual_recursion" title="Mutual recursion">Mutual recursion</a></div>
<p>Using coroutines for state machines or concurrency is similar to using <a href="http://en.wikipedia.org/wiki/Mutual_recursion" title="Mutual recursion">mutual recursion</a> with <a href="http://en.wikipedia.org/wiki/Tail_call" title="Tail call">tail calls</a>, as in both cases the control changes to a different one of a set of routines. However, coroutines are more flexible and generally more efficient. Since coroutines yield rather than return, and then resume execution rather than restarting from the beginning, they are able to hold state, both variables (as in a closure) and execution point, and yields are not limited to being in tail position; mutually recursive subroutines must either use shared variables or pass state as parameters. Further, each mutually recursive call of a subroutine requires a new stack frame (unless <a href="http://en.wikipedia.org/wiki/Tail_call_elimination" title="Tail call elimination" class="mw-redirect">tail call elimination</a> is implemented), while passing control between coroutines uses the existing contexts and can be implemented simply by a jump.</p>
<h2><span class="mw-headline" id="Programming_languages_with_native_support">Programming languages with native support</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=5" title="Edit section: Programming languages with native support">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="div-col columns column-count column-count-4" style="-moz-column-count: 4; -webkit-column-count: 4; column-count: 4;">
<ul>
<li><a href="http://en.wikipedia.org/w/index.php?title=Aikido_(programming_language)&amp;action=edit&amp;redlink=1" class="new" title="Aikido (programming language) (page does not exist)">Aikido</a></li>
<li><a href="http://en.wikipedia.org/wiki/AngelScript" title="AngelScript">AngelScript</a></li>
<li><a href="BCPL.html" title="BCPL">BCPL</a></li>
<li><a href="Pascal_(programming_language).html" title="Pascal (programming language)">Pascal</a> (Borland <a href="http://en.wikipedia.org/wiki/Turbo_Pascal" title="Turbo Pascal">Turbo Pascal</a> 7.0 with uThreads module)</li>
<li><a href="http://en.wikipedia.org/wiki/BETA_(programming_language)" title="BETA (programming language)">BETA</a></li>
<li><a href="http://en.wikipedia.org/wiki/BLISS" title="BLISS">BLISS</a></li>
<li><a href="C_Sharp_(programming_language).html" title="C Sharp (programming language)">C#</a></li>
<li><a href="http://en.wikipedia.org/wiki/ChucK" title="ChucK">ChucK</a></li>
<li><a href="D_(programming_language).html" title="D (programming language)">D</a></li>
<li><a href="http://en.wikipedia.org/w/index.php?title=Dynamic_C&amp;action=edit&amp;redlink=1" class="new" title="Dynamic C (page does not exist)">Dynamic C</a></li>
<li><a href="http://en.wikipedia.org/wiki/Erlang_(programming_language)" title="Erlang (programming language)">Erlang</a></li>
<li><a href="http://en.wikipedia.org/wiki/F_Sharp_(programming_language)" title="F Sharp (programming language)">F#</a></li>
<li><a href="http://en.wikipedia.org/wiki/Factor_(programming_language)" title="Factor (programming language)">Factor</a></li>
<li><a href="http://en.wikipedia.org/wiki/GameMonkey_Script" title="GameMonkey Script">GameMonkey Script</a></li>
<li><a href="Go_(programming_language).html" title="Go (programming language)">Go</a></li>
<li><a href="http://en.wikipedia.org/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a><sup id="cite_ref-7" class="reference"><a href="#cite_note-7"><span>[</span>7<span>]</span></a></sup><sup id="cite_ref-8" class="reference"><a href="#cite_note-8"><span>[</span>8<span>]</span></a></sup></li>
<li><a href="http://en.wikipedia.org/wiki/High_Level_Assembly" title="High Level Assembly">High Level Assembly</a><sup id="cite_ref-9" class="reference"><a href="#cite_note-9"><span>[</span>9<span>]</span></a></sup></li>
<li><a href="http://en.wikipedia.org/wiki/Icon_(programming_language)" title="Icon (programming language)">Icon</a></li>
<li><a href="http://en.wikipedia.org/wiki/Io_(programming_language)" title="Io (programming language)">Io</a></li>
<li><a href="JavaScript.html" title="JavaScript">JavaScript</a> (since 1.7)<sup id="cite_ref-10" class="reference"><a href="#cite_note-10"><span>[</span>10<span>]</span></a></sup></li>
<li><a href="http://en.wikipedia.org/wiki/Julia_(programming_language)" title="Julia (programming language)">Julia</a><sup id="cite_ref-11" class="reference"><a href="#cite_note-11"><span>[</span>11<span>]</span></a></sup></li>
<li><a href="Limbo_(programming_language).html" title="Limbo (programming language)">Limbo</a></li>
<li><a href="http://en.wikipedia.org/wiki/Lua_(programming_language)" title="Lua (programming language)">Lua</a><sup id="cite_ref-12" class="reference"><a href="#cite_note-12"><span>[</span>12<span>]</span></a></sup></li>
<li><a href="http://en.wikipedia.org/wiki/Lucid_(programming_language)" title="Lucid (programming language)">Lucid</a></li>
<li><a href="http://en.wikipedia.org/wiki/ΜC++" title="ΜC++">µC++</a></li>
<li><a href="http://en.wikipedia.org/wiki/MiniD" title="MiniD">MiniD</a></li>
<li><a href="http://en.wikipedia.org/wiki/Modula-2" title="Modula-2">Modula-2</a></li>
<li><a href="http://en.wikipedia.org/wiki/Nemerle" title="Nemerle">Nemerle</a></li>
<li><a href="Perl.html" title="Perl">Perl</a> (Perl 5 with Coro, native since Perl 6<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (May 2010)">citation needed</span></a></i>]</sup>)</li>
<li><a href="PHP.html" title="PHP">PHP</a> (with <a rel="nofollow" class="external text" href="https://github.com/facebook/hiphop-php">HipHop</a>, native since PHP 5.5)</li>
<li><a href="http://en.wikipedia.org/wiki/Picolisp" title="Picolisp">Picolisp</a></li>
<li><a href="http://en.wikipedia.org/wiki/Prolog" title="Prolog">Prolog</a></li>
<li><a href="Python_(programming_language).html" title="Python (programming language)">Python</a> (since 2.5, with improved support since 3.3)</li>
<li><a href="Ruby_(programming_language).html" title="Ruby (programming language)">Ruby</a></li>
<li><a href="http://en.wikipedia.org/wiki/Sather" title="Sather">Sather</a></li>
<li><a href="http://en.wikipedia.org/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a></li>
<li><a href="http://en.wikipedia.org/wiki/Self_(programming_language)" title="Self (programming language)">Self</a></li>
<li><a href="http://en.wikipedia.org/wiki/Simula" title="Simula">Simula</a> 67</li>
<li><a href="http://en.wikipedia.org/wiki/Squirrel_(programming_language)" title="Squirrel (programming language)">Squirrel</a></li>
<li><a href="http://en.wikipedia.org/wiki/Stackless_Python" title="Stackless Python">Stackless Python</a></li>
<li><a href="http://en.wikipedia.org/wiki/SuperCollider" title="SuperCollider">SuperCollider</a><sup id="cite_ref-13" class="reference"><a href="#cite_note-13"><span>[</span>13<span>]</span></a></sup></li>
<li><a href="http://en.wikipedia.org/wiki/Tcl" title="Tcl">Tcl</a> (since 8.6)</li>
<li><a href="http://en.wikipedia.org/wiki/Urbiscript" title="Urbiscript">urbiscript</a></li>
</ul>
</div>
<p>Since <a href="http://en.wikipedia.org/wiki/Continuation" title="Continuation">continuations</a> can be used to implement coroutines, programming languages that support them can also quite easily support coroutines.</p>
<h2><span class="mw-headline" id="Implementations">Implementations</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=6" title="Edit section: Implementations">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Coroutines originated as an <a href="Assembly_language.html" title="Assembly language">assembly language</a> method, but are supported in some <a href="High-level_programming_language.html" title="High-level programming language">high-level programming languages</a>. Early examples include <a href="http://en.wikipedia.org/wiki/Simula" title="Simula">Simula</a><sup id="cite_ref-Dahl1972_14-0" class="reference"><a href="#cite_note-Dahl1972-14"><span>[</span>14<span>]</span></a></sup> and <a href="http://en.wikipedia.org/wiki/Modula-2" title="Modula-2">Modula-2</a>. More recent examples are <a href="Ruby_(programming_language).html" title="Ruby (programming language)">Ruby</a>, <a href="http://en.wikipedia.org/wiki/Lua_(programming_language)" title="Lua (programming language)">Lua</a>, and <a href="Go_(programming_language).html" title="Go (programming language)">Go</a>.</p>
<p>As of 2003<sup class="plainlinks noprint asof-tag update" style="display:none;"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit">[update]</a></sup>, many of the most popular programming languages, including C and its derivatives, do not have direct support for coroutines within the language or their standard libraries. (This is, in large part, due to the limitations of <a href="Call_stack.html" title="Call stack">stack-based</a> subroutine implementation). An exception is the C++ library <a rel="nofollow" class="external text" href="http://www.boost.org/doc/libs/1_55_0/libs/context/doc/html/index.html">Boost.Context</a>, part of <a rel="nofollow" class="external text" href="http://www.boost.org/">boost libraries</a>, which supports context swapping on ARM, MIPS, PowerPC, SPARC and X86 on POSIX, Mac OS X and Windows. Coroutines can be built upon Boost.Context.</p>
<h2><span class="mw-headline" id="Alternatives">Alternatives</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=7" title="Edit section: Alternatives">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>In situations where a coroutine would be the natural implementation of a mechanism, but is not available, the typical response is to use a <a href="http://en.wikipedia.org/wiki/Closure_(computer_science)" title="Closure (computer science)" class="mw-redirect">closure</a> – a subroutine with state variables (<a href="http://en.wikipedia.org/wiki/Static_variable" title="Static variable">static variables</a>, often boolean flags) to maintain an internal state between calls, and to transfer control to the correct point. Conditionals within the code result in the execution of different code paths on successive calls, based on the values of the state variables. Another typical response is to implement an explicit state machine in the form of a large and complex switch statement or via a <a href="Goto.html" title="Goto">goto</a> statement, particularly a <a href="http://en.wikipedia.org/wiki/Computed_goto" title="Computed goto" class="mw-redirect">computed goto</a>. Such implementations are considered difficult to understand and maintain, and a motivation for coroutine support.</p>
<p><a href="Thread_(computing).html" title="Thread (computing)">Threads</a>, and to a lesser extent <a href="http://en.wikipedia.org/wiki/Fiber_(computer_science)" title="Fiber (computer science)">fibers</a>, are an alternative to coroutines in mainstream programming environments today. Threads provide facilities for managing the realtime cooperative interaction of <i>simultaneously</i> executing pieces of code. Threads are widely available in environments that support C (and are supported natively in many other modern languages), are familiar to many programmers, and are usually well-implemented, well-documented and well-supported. However, as they solve a large and difficult problem they include many powerful and complex facilities and have a correspondingly difficult learning curve. As such, when a coroutine is all that is needed, using a thread can be overkill.</p>
<p>One important difference between threads and coroutines is that threads are typically preemptively scheduled while coroutines are not. Because threads can be rescheduled at any instant and can execute concurrently, programs using threads must be careful about <a href="http://en.wikipedia.org/wiki/Lock_(computer_science)" title="Lock (computer science)">locking</a>. In contrast, because coroutines can only be rescheduled at specific points in the program and do not execute concurrently, programs using coroutines can often avoid locking entirely. (This property is also cited as a benefit of <a href="http://en.wikipedia.org/wiki/Event-driven_programming" title="Event-driven programming">event-driven</a> or asynchronous programming.)</p>
<p>Since fibers are cooperatively scheduled, they provide an ideal base for implementing coroutines above.<sup id="cite_ref-msdn-wrap_15-0" class="reference"><a href="#cite_note-msdn-wrap-15"><span>[</span>15<span>]</span></a></sup> However, system support for fibers is often lacking compared to that for threads.</p>
<h3><span class="mw-headline" id="Implementation_in_the_.NET_Framework_as_fibers">Implementation in the .NET Framework as fibers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=8" title="Edit section: Implementation in the .NET Framework as fibers">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>During the development of the <a href=".html" title=".NET Framework">.NET Framework</a> 2.0, Microsoft extended the design of the <a href="http://en.wikipedia.org/wiki/Common_Language_Runtime" title="Common Language Runtime">Common Language Runtime</a> (CLR) hosting APIs to handle fiber-based scheduling with an eye towards its use in fiber-mode for SQL server.<sup id="cite_ref-cbrumme-fibermode_16-0" class="reference"><a href="#cite_note-cbrumme-fibermode-16"><span>[</span>16<span>]</span></a></sup> Before release, support for the task switching hook ICLRTask::SwitchOut was removed due to time constraints.<sup id="cite_ref-dino-fibermodegone_17-0" class="reference"><a href="#cite_note-dino-fibermodegone-17"><span>[</span>17<span>]</span></a></sup> Consequently the use of the fiber API to switch tasks is currently not a viable option in the .NET Framework.</p>
<h3><span class="mw-headline" id="Implementation_in_Mono">Implementation in Mono</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=9" title="Edit section: Implementation in Mono">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The <a href="http://en.wikipedia.org/wiki/Mono_(software)" title="Mono (software)">Mono</a> Common Language Runtime has support for continuations,<sup id="cite_ref-monoco_18-0" class="reference"><a href="#cite_note-monoco-18"><span>[</span>18<span>]</span></a></sup> from which coroutines can be built.</p>
<h3><span class="mw-headline" id="Implementations_for_Java">Implementations for Java</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=10" title="Edit section: Implementations for Java">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>There are several implementations for coroutines in <a href="Java_(programming_language).html" title="Java (programming language)">Java</a>. Despite the constraints imposed by Java's abstractions, the JVM does not preclude the possibility.<sup id="cite_ref-jvmsummit_19-0" class="reference"><a href="#cite_note-jvmsummit-19"><span>[</span>19<span>]</span></a></sup> There are four general methods used, but two break bytecode portability among standards-compliant JVMs.</p>
<ul>
<li>Modified JVMs. It is possible to build a patched JVM to support coroutines more natively. The <a rel="nofollow" class="external text" href="http://wikis.sun.com/display/mlvm/Building">Da Vinci JVM</a> has had patches created.<sup id="cite_ref-javanet-forax_20-0" class="reference"><a href="#cite_note-javanet-forax-20"><span>[</span>20<span>]</span></a></sup></li>
<li>Modified bytecode. Coroutine functionality is possible by rewriting regular Java bytecode, either on the fly or at compile time. One <a rel="nofollow" class="external text" href="http://code.google.com/p/coroutines/">Java Coroutines</a> project.</li>
<li>Platform-specific JNI mechanisms. These use JNI methods implemented in the OS or C libraries to provide the functionality to the JVM.</li>
<li>Thread abstractions. Coroutine libraries which are implemented using threads may be heavyweight, though performance will vary based on the JVM's thread implementation.</li>
</ul>
<h3><span class="mw-headline" id="Implementations_for_C">Implementations for C</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=11" title="Edit section: Implementations for C">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Several attempts have been made, with varying degrees of success, to implement coroutines in <a href="C_(programming_language).html" title="C (programming language)">C</a> with combinations of subroutines and macros. <a href="http://en.wikipedia.org/wiki/Simon_Tatham" title="Simon Tatham">Simon Tatham</a>'s contribution<sup id="cite_ref-tatham_21-0" class="reference"><a href="#cite_note-tatham-21"><span>[</span>21<span>]</span></a></sup> is a good example of the genre, and his own comments provide a good evaluation of the limitations of this approach. The use of such a device truly can improve the writability, readability and maintainability of a piece of code, but is likely to prove controversial. In Tatham's words: "Of course, this trick violates every coding standard in the book... [but] any coding standard which insists on syntactic clarity at the expense of algorithmic clarity should be rewritten. If your employer fires you for using this trick, tell them that repeatedly as the security staff drag you out of the building."</p>
<p>A more reliable approach to implementing coroutines in C is to give up on absolute portability and write processor-family-specific implementations, in assembly, of functions to save and restore a coroutine context. The <a href="http://en.wikipedia.org/wiki/Standard_C_library" title="Standard C library" class="mw-redirect">standard C library</a> includes functions named <a href="http://en.wikipedia.org/wiki/Setjmp/longjmp" title="Setjmp/longjmp" class="mw-redirect">setjmp and longjmp</a> which can be used to implement a form of coroutine. Unfortunately, as <a href="http://en.wikipedia.org/w/index.php?title=Samuel_P._Harbison&amp;action=edit&amp;redlink=1" class="new" title="Samuel P. Harbison (page does not exist)">Harbison</a> and <a href="http://en.wikipedia.org/wiki/Guy_L._Steele_Jr." title="Guy L. Steele Jr." class="mw-redirect">Steele</a> note, "the <i>setjmp</i> and <i>longjmp</i> functions are notoriously difficult to implement, and the programmer would do well to make minimal assumptions about them."<sup id="cite_ref-22" class="reference"><a href="#cite_note-22"><span>[</span>22<span>]</span></a></sup> What this means is if Harbison and Steele's many cautions and caveats are not carefully heeded, uses of setjmp and longjmp that appear to work in one environment may not work in another. Worse yet, faulty implementations of these routines are not rare.<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (October 2007)">citation needed</span></a></i>]</sup> Indeed, setjmp/longjmp, because it only countenances a single stack, cannot be used to implement natural coroutines, as variables located on the stack will be overwritten as another coroutine uses the same stack space.<sup id="cite_ref-23" class="reference"><a href="#cite_note-23"><span>[</span>23<span>]</span></a></sup></p>
<p>Thus for stack-based coroutines in C, functions are needed to create and jump between alternate stacks. A third function, which can usually be written in machine-specific C, is needed to create the context for a new coroutine. C libraries complying to <a href="POSIX.html" title="POSIX">POSIX</a> or the <a href="http://en.wikipedia.org/wiki/Single_Unix_Specification" title="Single Unix Specification" class="mw-redirect">Single Unix Specification</a> (SUSv3) provide such routines as <a href="http://en.wikipedia.org/wiki/Setcontext" title="Setcontext">getcontext, setcontext, makecontext and swapcontext</a>. The setcontext family of functions is thus considerably more powerful than <i>setjmp/longjmp</i>, but conforming implementations are as rare if not rarer. The main shortcoming of this approach is that the coroutine's stack is a fixed size and cannot be grown during execution. Thus, programs tend to allocate much more stack than they actually need to avoid the potential for stack overflow.</p>
<p>Due to the limits of standard libraries, some authors have written their own libraries for coroutines. Russ Cox's libtask library<sup id="cite_ref-libtask_24-0" class="reference"><a href="#cite_note-libtask-24"><span>[</span>24<span>]</span></a></sup> is a good example of this genre. It uses the context functions if they are provided by the native C library; otherwise it provides its own implementations for ARM, PowerPC, Sparc, and x86. Other notable implementations include libpcl,<sup id="cite_ref-25" class="reference"><a href="#cite_note-25"><span>[</span>25<span>]</span></a></sup> coro,<sup id="cite_ref-26" class="reference"><a href="#cite_note-26"><span>[</span>26<span>]</span></a></sup> lthread,<sup id="cite_ref-27" class="reference"><a href="#cite_note-27"><span>[</span>27<span>]</span></a></sup> libCoroutine,<sup id="cite_ref-28" class="reference"><a href="#cite_note-28"><span>[</span>28<span>]</span></a></sup> libconcurrency,<sup id="cite_ref-29" class="reference"><a href="#cite_note-29"><span>[</span>29<span>]</span></a></sup> libcoro<sup id="cite_ref-30" class="reference"><a href="#cite_note-30"><span>[</span>30<span>]</span></a></sup> and ribs2.<sup id="cite_ref-31" class="reference"><a href="#cite_note-31"><span>[</span>31<span>]</span></a></sup></p>
<h3><span class="mw-headline" id="Implementations_for_C.2B.2B">Implementations for C++</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=12" title="Edit section: Implementations for C++">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li><a rel="nofollow" class="external text" href="http://www.boost.org/doc/libs/1_53_0/libs/coroutine/doc/html/index.html">Boost.Coroutine</a> - created by Oliver Kowalke, is the official released portable coroutine library of <a rel="nofollow" class="external text" href="http://boost.org/">boost</a> since version 1.53. The library relies on <a rel="nofollow" class="external text" href="http://www.boost.org/doc/libs/1_53_0/libs/context/doc/html/index.html">Boost.Context</a> and supports ARM, MIPS, PowerPC, SPARC and X86 on POSIX, Mac OS X and Windows.</li>
<li><a rel="nofollow" class="external text" href="http://code.mozy.com/projects/mordor/">Mordor</a> - In 2010, <a href="http://en.wikipedia.org/wiki/Mozy" title="Mozy">Mozy</a> open sourced a C++ library implementing coroutines, with an emphasis on using them to abstract <a href="http://en.wikipedia.org/wiki/Asynchronous_I/O" title="Asynchronous I/O">asynchronous I/O</a> into a more familiar sequential model.<sup id="cite_ref-32" class="reference"><a href="#cite_note-32"><span>[</span>32<span>]</span></a></sup></li>
</ul>
<h3><span class="mw-headline" id="Implementations_for_C.23">Implementations for C#</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=13" title="Edit section: Implementations for C#">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li><a rel="nofollow" class="external text" href="http://developer.mindtouch.com/Dream">MindTouch Dream</a> - The MindTouch Dream REST framework provides an implementation of coroutines based on the <a href="C_Sharp_(programming_language).html" title="C Sharp (programming language)">C#</a> 2.0 iterator pattern</li>
<li><a rel="nofollow" class="external text" href="http://caliburn.codeplex.com/Wiki/View.aspx?title=IResult">Caliburn</a> - The Caliburn screen patterns framework for WPF uses C# 2.0 iterators to ease UI programming, particularly in asynchronous scenarios.</li>
<li><a rel="nofollow" class="external text" href="http://www.wintellect.com/PowerThreading.aspx">Power Threading Library</a> - The Power Threading Library by <a href="http://en.wikipedia.org/wiki/Jeffrey_Richter" title="Jeffrey Richter">Jeffrey Richter</a> implements an AsyncEnumerator that provides simplified Asynchronous Programming Model using iterator-based coroutines.</li>
<li><a rel="nofollow" class="external text" href="http://github.com/yevhen/Servelat-Pieces">Servelat Pieces</a> - The Servelat Pieces project by <a href="http://en.wikipedia.org/w/index.php?title=Yevhen_Bobrov&amp;action=edit&amp;redlink=1" class="new" title="Yevhen Bobrov (page does not exist)">Yevhen Bobrov</a> provides transparent asynchrony for Silverlight WCF services and ability to asynchronously call any synchronous method. The implementation is based on Caliburn's Coroutines iterator and C# iterator blocks.</li>
<li><a rel="nofollow" class="external autonumber" href="http://msdn.microsoft.com/en-us/library/dscyy5s0(VS.80).aspx">[14]</a> - The .NET 2.0+ Framework now provides semi-coroutine (<a href="http://en.wikipedia.org/wiki/Generator_(computer_programming)" title="Generator (computer programming)">generator</a>) functionality through the iterator pattern and yield keyword.</li>
</ul>
<h3><span class="mw-headline" id="Implementations_for_Vala">Implementations for Vala</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=14" title="Edit section: Implementations for Vala">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><a href="Vala_(programming_language).html" title="Vala (programming language)">Vala</a> implements native support for coroutines. They are designed to be used with a Gtk Main Loop, but can be used alone if care is taken to ensure that the end callback will never have to be called before doing, at least, one yield.</p>
<h3><span class="mw-headline" id="Implementations_for_Python">Implementations for Python</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=15" title="Edit section: Implementations for Python">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li><a href="Python_(programming_language).html" title="Python (programming language)">Python</a> 2.5 implements better support for coroutine-like functionality, based on extended generators (<a rel="nofollow" class="external text" href="http://www.python.org/dev/peps/pep-0342/">PEP 342</a>)</li>
<li><a href="Python_(programming_language).html" title="Python (programming language)">Python</a> 3.3 improves this ability, by supporting delegating to a subgenerator (<a rel="nofollow" class="external text" href="http://www.python.org/dev/peps/pep-0380/">PEP 380</a>)</li>
<li><a href="Python_(programming_language).html" title="Python (programming language)">Python</a> 3.4 introduces a comprehensive asynchronous I/O framework as standardized in <a rel="nofollow" class="external text" href="http://www.python.org/dev/peps/pep-3156/">PEP 3156</a>, which includes coroutines that leverage subgenerator delegation</li>
<li><a rel="nofollow" class="external text" href="https://github.com/python-greenlet/greenlet">Greenlets</a></li>
<li><a rel="nofollow" class="external text" href="http://www.async.com.br/projects/kiwi/api/kiwi.tasklet.html">kiwi tasklets</a></li>
<li><a rel="nofollow" class="external text" href="http://pypi.python.org/pypi/multitask">multitask</a></li>
<li><a rel="nofollow" class="external text" href="http://chiral.j4cbo.com/trac">chiral</a></li>
<li><a rel="nofollow" class="external text" href="http://code.google.com/p/cogen">cogen</a></li>
<li><a rel="nofollow" class="external text" href="http://www.kamaelia.org/">Kamaelia</a></li>
<li><a rel="nofollow" class="external text" href="https://github.com/ironport/shrapnel/">Shrapnel</a></li>
</ul>
<h3><span class="mw-headline" id="Implementations_for_Ruby">Implementations for Ruby</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=16" title="Edit section: Implementations for Ruby">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li><a href="Ruby_(programming_language).html" title="Ruby (programming language)">Ruby</a> 1.9 supports coroutines natively which are implemented as <a rel="nofollow" class="external text" href="http://rubydoc.info/stdlib/core/1.9.2/Fiber">fibers</a></li>
<li><a rel="nofollow" class="external text" href="http://liber.sourceforge.net/coroutines.rb">An implementation by Marc De Scheemaecker</a></li>
</ul>
<h3><span class="mw-headline" id="Implementations_for_Perl">Implementations for Perl</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=17" title="Edit section: Implementations for Perl">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li><a rel="nofollow" class="external text" href="https://metacpan.org/module/Coro">Coro</a></li>
</ul>
<p>Coroutines will also be a part of <a href="http://en.wikipedia.org/wiki/Perl_6" title="Perl 6">Perl 6</a>.<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (May 2010)">citation needed</span></a></i>]</sup></p>
<h3><span class="mw-headline" id="Implementations_for_Smalltalk">Implementations for Smalltalk</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=18" title="Edit section: Implementations for Smalltalk">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Since, in most <a href="Smalltalk.html" title="Smalltalk">Smalltalk</a> environments, the execution stack is a first-class citizen, coroutines can be implemented without additional library or VM support.</p>
<h3><span class="mw-headline" id="Implementations_for_Scheme">Implementations for Scheme</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=19" title="Edit section: Implementations for Scheme">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Since <a href="http://en.wikipedia.org/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> provides full support for continuations, implementing coroutines is nearly trivial, requiring only that a queue of continuations be maintained.</p>
<h3><span class="mw-headline" id="Implementations_for_Object_Pascal_.28Delphi.29">Implementations for Object Pascal (Delphi)</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=20" title="Edit section: Implementations for Object Pascal (Delphi)">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<h3><span class="mw-headline" id="Implementations_in_assembly_languages">Implementations in assembly languages</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=21" title="Edit section: Implementations in assembly languages">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Machine-dependent <a href="Assembly_language.html" title="Assembly language">assembly languages</a> often provide direct methods for coroutine execution. For example, in <a href="http://en.wikipedia.org/wiki/MACRO-11" title="MACRO-11">MACRO-11</a>, the assembly language of the <a href="PDP-11.html" title="PDP-11">PDP-11</a> family of minicomputers, the “classic” coroutine switch is effected by the instruction "JSR PC,@(SP)+", which jumps to the address popped from the stack and pushes the current (<i>i.e</i> that of the <b>next</b>) instruction address onto the stack. On <a href="http://en.wikipedia.org/wiki/VAX" title="VAX">VAXen</a> (in <a href="http://en.wikipedia.org/wiki/VAX_Macro" title="VAX Macro">Macro-32</a>) the comparable instruction is "JSB @(SP)+". Even on a <a href="http://en.wikipedia.org/wiki/Motorola_6809" title="Motorola 6809">Motorola 6809</a> there is the instruction "JSR [,S++]"; note the "++", as 2 bytes (of address) are popped from the stack. This instruction is much used in the (standard) 'monitor' <a href="http://en.wikipedia.org/wiki/ASSIST_(computing)" title="ASSIST (computing)">Assist</a> 09.</p>
<p>Simply calling back the routine whose address is on the top of the stack, does not, of course, exhaust the possibilities in assembly language(s)!</p>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=22" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="Pipeline_(Unix).html" title="Pipeline (Unix)">Pipeline (Unix)</a> – a kind of coroutine used for communicating between programs<sup id="cite_ref-EvolutionUnix_33-0" class="reference"><a href="#cite_note-EvolutionUnix-33"><span>[</span>33<span>]</span></a></sup></li>
</ul>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=23" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-Conway1963-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-Conway1963_1-0">^</a></b></span> <span class="reference-text"><span class="citation journal">Conway, M. E. (July 1963). "Design of a Separable Transition-Diagram Compiler". <i>Communications of the ACM</i> (New York, NY, USA: Association for Computing Machinery) <b>6</b> (7): 396–408. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1145%2F366663.366704">10.1145/366663.366704</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.atitle=Design+of+a+Separable+Transition-Diagram+Compiler&amp;rft.au=Conway%2C+M.+E.&amp;rft.aufirst=M.+E.&amp;rft.aulast=Conway&amp;rft.date=July+1963&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1145%2F366663.366704&amp;rft.issue=7&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.pages=396%26ndash%3B408&amp;rft.place=New+York%2C+NY%2C+USA&amp;rft.pub=Association+for+Computing+Machinery&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=6" class="Z3988"><span style="display:none;">&#160;</span></span> <span class="plainlinks noprint" style="font-size:smaller"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Cite_doi/10.1145.2F366663.366704&amp;action=edit&amp;editintro=Template:Cite_doi/editintro2">edit</a></span></span></li>
<li id="cite_note-KnuthVol1_1_4_2-2"><span class="mw-cite-backlink">^ <a href="#cite_ref-KnuthVol1_1_4_2_2-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-KnuthVol1_1_4_2_2-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><span class="citation book">Knuth, Donald Ervin (1997). <i>Fundamental Algorithms</i>. The Art of Computer Programming <b>1</b> (3rd ed.). Addison-Wesley. Section 1.4.2: Coroutines, pp.&#160;193–200. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-201-89683-4" title="Special:BookSources/0-201-89683-4">0-201-89683-4</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.aufirst=Donald+Ervin&amp;rft.au=Knuth%2C+Donald+Ervin&amp;rft.aulast=Knuth&amp;rft.btitle=Fundamental+Algorithms&amp;rft.date=1997&amp;rft.edition=3rd&amp;rft.genre=book&amp;rft.isbn=0-201-89683-4&amp;rft.pages=Section+1.4.2%3A+Coroutines%2C+pp.%26nbsp%3B193%26ndash%3B200&amp;rft.pub=Addison-Wesley&amp;rft.series=The+Art+of+Computer+Programming&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook&amp;rft.volume=1" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-Perlis1982_6-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-Perlis1982_6_3-0">^</a></b></span> <span class="reference-text"><span class="citation journal">Perlis, Alan J. (September 1982). <a rel="nofollow" class="external text" href="http://web.archive.org/web/19990117034445/http://www-pu.informatik.uni-tuebingen.de/users/klaeren/epigrams.html">"Epigrams on programming"</a>. <i>ACM SIGPLAN Notices</i> (New York, NY, USA: Association for Computing Machinery) <b>17</b> (9): 7–13. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1145%2F947955.1083808">10.1145/947955.1083808</a>. Archived from <a rel="nofollow" class="external text" href="http://www-pu.informatik.uni-tuebingen.de/users/klaeren/epigrams.html">the original</a> on January 17, 1999. "6. Symmetry is a complexity reducing concept (co-routines include sub-routines); seek it everywhere"</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.atitle=Epigrams+on+programming&amp;rft.aufirst=Alan+J.&amp;rft.aulast=Perlis&amp;rft.au=Perlis%2C+Alan+J.&amp;rft.date=September+1982&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fwww-pu.informatik.uni-tuebingen.de%2Fusers%2Fklaeren%2Fepigrams.html&amp;rft_id=info%3Adoi%2F10.1145%2F947955.1083808&amp;rft.issue=9&amp;rft.jtitle=ACM+SIGPLAN+Notices&amp;rft.pages=7%26ndash%3B13&amp;rft.place=New+York%2C+NY%2C+USA&amp;rft.pub=Association+for+Computing+Machinery&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=17" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-Ralston2000-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-Ralston2000_4-0">^</a></b></span> <span class="reference-text"><span class="citation book">Anthony Ralston (2000). <a rel="nofollow" class="external text" href="http://books.google.com/books?id=yQ9LAQAAIAAJ"><i>Encyclopedia of computer science</i></a>. Nature Pub. Group. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-1-56159-248-7" title="Special:BookSources/978-1-56159-248-7">978-1-56159-248-7</a><span class="reference-accessdate">. Retrieved 11 May 2013</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.au=Anthony+Ralston&amp;rft.aulast=Anthony+Ralston&amp;rft.btitle=Encyclopedia+of+computer+science&amp;rft.date=2000&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fbooks.google.com%2Fbooks%3Fid%3DyQ9LAQAAIAAJ&amp;rft.isbn=978-1-56159-248-7&amp;rft.pub=Nature+Pub.+Group&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text">See for example <i><a rel="nofollow" class="external text" href="http://docs.python.org/reference/index.html">The Python Language Reference</a></i> "<a rel="nofollow" class="external free" href="http://docs.python.org/reference/expressions.html#yieldexpr">http://docs.python.org/reference/expressions.html#yieldexpr</a> 5.2.10. Yield expressions]":<br />
"All of this makes generator functions quite similar to coroutines; they yield multiple times, they have more than one entry point and their execution can be suspended. The only difference is that a generator function cannot control where should the execution continue after it yields; the control is always transferred to the generator's caller."</span></li>
<li id="cite_note-MertzIBM-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-MertzIBM_6-0">^</a></b></span> <span class="reference-text"><span class="citation web">Mertz, David (July 1, 2002). <a rel="nofollow" class="external text" href="http://www.webcitation.org/5wCZa062h">"Generator-based State Machines"</a>. <i>Charming Python</i>. IBM developerWorks. Archived from <a rel="nofollow" class="external text" href="http://www.ibm.com/developerworks/library/l-pygen.html">the original</a> on February 2, 2011<span class="reference-accessdate">. Retrieved Feb 2, 2011</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.atitle=Generator-based+State+Machines&amp;rft.aufirst=David&amp;rft.aulast=Mertz&amp;rft.au=Mertz%2C+David&amp;rft.date=July+1%2C+2002&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fwww.ibm.com%2Fdeveloperworks%2Flibrary%2Fl-pygen.html&amp;rft.jtitle=Charming+Python&amp;rft.pub=IBM+developerWorks&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-7">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://hackage.haskell.org/cgi-bin/hackage-scripts/package/Coroutine">"Coroutine: Type-safe coroutines using lightweight session types"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.btitle=Coroutine%3A+Type-safe+coroutines+using+lightweight+session+types&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fhackage.haskell.org%2Fcgi-bin%2Fhackage-scripts%2Fpackage%2FCoroutine&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://random.axman6.com/blog/?p=231">"Co-routines in Haskell"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.btitle=Co-routines+in+Haskell&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Frandom.axman6.com%2Fblog%2F%3Fp%3D231&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://www.plantation-productions.com/Webster/HighLevelAsm/HLADoc/HLAStdlib/1_HTML/HLAStdlib.htm#50618574_pgfId-998318">"The Coroutines Module (coroutines.hhf)"</a>. <i>HLA Standard Library Manual</i>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.atitle=The+Coroutines+Module+%28coroutines.hhf%29&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fwww.plantation-productions.com%2FWebster%2FHighLevelAsm%2FHLADoc%2FHLAStdlib%2F1_HTML%2FHLAStdlib.htm%2350618574_pgfId-998318&amp;rft.jtitle=HLA+Standard+Library+Manual&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-10">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://developer.mozilla.org/en/docs/New_in_JavaScript_1.7">"New in JavaScript 1.7"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.btitle=New+in+JavaScript+1.7&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fdeveloper.mozilla.org%2Fen%2Fdocs%2FNew_in_JavaScript_1.7&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-11"><span class="mw-cite-backlink"><b><a href="#cite_ref-11">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://docs.julialang.org/en/latest/manual/control-flow/#man-tasks">"Julia Manual - Control Flow - Tasks (aka Coroutines)"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.btitle=Julia+Manual+-+Control+Flow+-+Tasks+%28aka+Coroutines%29&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fdocs.julialang.org%2Fen%2Flatest%2Fmanual%2Fcontrol-flow%2F%23man-tasks&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-12"><span class="mw-cite-backlink"><b><a href="#cite_ref-12">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://www.lua.org/manual/5.2/manual.html#2.6">"Lua 5.2 Reference Manual – 2.6 – Coroutines"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.btitle=Lua+5.2+Reference+Manual+%E2%80%93+2.6+%E2%80%93+Coroutines&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.lua.org%2Fmanual%2F5.2%2Fmanual.html%232.6&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-13"><span class="mw-cite-backlink"><b><a href="#cite_ref-13">^</a></b></span> <span class="reference-text">McCartney, J. <a rel="nofollow" class="external text" href="http://portal.acm.org/citation.cfm?id=1245228">"Rethinking the Computer Music Programming Language: SuperCollider"</a>. Computer Music Journal, 26(4):61-68. MIT Press, 2002.</span></li>
<li id="cite_note-Dahl1972-14"><span class="mw-cite-backlink"><b><a href="#cite_ref-Dahl1972_14-0">^</a></b></span> <span class="reference-text"><span class="citation book">Dahl,O.-.J. and Hoare,C.A.R.(ed) (1972). <i>"Hierarchical Program Structures" in Structured Programming. pp. 175-220</i>. Academic Press.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.au=Dahl%2CO.-.J.+and+Hoare%2CC.A.R.%28ed%29&amp;rft.aulast=Dahl%2CO.-.J.+and+Hoare%2CC.A.R.%28ed%29&amp;rft.btitle=%22Hierarchical+Program+Structures%22+in+Structured+Programming.+pp.+175-220.&amp;rft.date=1972&amp;rft.genre=book&amp;rft.pub=Academic+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-msdn-wrap-15"><span class="mw-cite-backlink"><b><a href="#cite_ref-msdn-wrap_15-0">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://msdn.microsoft.com/msdnmag/issues/03/09/CoroutinesinNET/default.aspx">Implementing Coroutines for .NET by Wrapping the Unmanaged Fiber API</a>, Ajai Shankar, <a href="http://en.wikipedia.org/wiki/MSDN_Magazine" title="MSDN Magazine" class="mw-redirect">MSDN Magazine</a></span></li>
<li id="cite_note-cbrumme-fibermode-16"><span class="mw-cite-backlink"><b><a href="#cite_ref-cbrumme-fibermode_16-0">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="http://blogs.msdn.com/cbrumme/archive/2004/02/21/77595.aspx">[1]</a>, Chris Brumme, <a rel="nofollow" class="external text" href="http://blogs.msdn.com/cbrumme/default.aspx">cbrumme's WebLog</a></span></li>
<li id="cite_note-dino-fibermodegone-17"><span class="mw-cite-backlink"><b><a href="#cite_ref-dino-fibermodegone_17-0">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="http://blogs.msdn.com/dinoviehland/archive/2005/09/15/469642.aspx">[2]</a>, Dino Viehland, <a rel="nofollow" class="external text" href="http://blogs.msdn.com/dinoviehland/default.aspx">Dino's Blog</a></span></li>
<li id="cite_note-monoco-18"><span class="mw-cite-backlink"><b><a href="#cite_ref-monoco_18-0">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="http://www.mono-project.com/Continuations">[3]</a> Mono Continuations</span></li>
<li id="cite_note-jvmsummit-19"><span class="mw-cite-backlink"><b><a href="#cite_ref-jvmsummit_19-0">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="http://www.wiki.jvmlangsummit.com/images/2/2b/JVMLanguageSummit_Stadler_Continuations.pdf">[4]</a> Lukas Stadler's JVM Continuations (pdf)</span></li>
<li id="cite_note-javanet-forax-20"><span class="mw-cite-backlink"><b><a href="#cite_ref-javanet-forax_20-0">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="http://weblogs.java.net/blog/forax/archive/2009/11/19/holy-crap-jvm-has-coroutinecontinuationfiber-etc">[5]</a> Remi Forax post on JVM coroutine/continuation/fiber</span></li>
<li id="cite_note-tatham-21"><span class="mw-cite-backlink"><b><a href="#cite_ref-tatham_21-0">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www.chiark.greenend.org.uk/~sgtatham/coroutines.html">Simon Tatham's implementation of coroutines in C</a>.</span></li>
<li id="cite_note-22"><span class="mw-cite-backlink"><b><a href="#cite_ref-22">^</a></b></span> <span class="reference-text"><i>C: A Reference Manual.</i> Samuel P. Harbison and Guy L. Steele, Jr. Third edition; Prentice-Hall, 1991, <a href="http://en.wikipedia.org/wiki/Special:BookSources/0131109332" class="internal mw-magiclink-isbn">ISBN 0-13-110933-2</a></span></li>
<li id="cite_note-23"><span class="mw-cite-backlink"><b><a href="#cite_ref-23">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www.csl.mtu.edu/cs4411.ck/www/NOTES/non-local-goto/coroutine.html">Building coroutines</a>. Dr. C.-K. Shene, Michigan Technical University</span></li>
<li id="cite_note-libtask-24"><span class="mw-cite-backlink"><b><a href="#cite_ref-libtask_24-0">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="http://swtch.com/libtask/">[6]</a> - Russ Cox's libtask coroutine library for FreeBSD, Linux, Mac OS X, and SunOS</span></li>
<li id="cite_note-25"><span class="mw-cite-backlink"><b><a href="#cite_ref-25">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://xmailserver.org/libpcl.html"><i>Portable Coroutine Library</i></a> - C library using POSIX/SUSv3 facilities</span></li>
<li id="cite_note-26"><span class="mw-cite-backlink"><b><a href="#cite_ref-26">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="http://www.goron.de/~froese/coro/">[7]</a> - Edgar Toernig's coro library for x86, Linux &amp; FreeBSD</span></li>
<li id="cite_note-27"><span class="mw-cite-backlink"><b><a href="#cite_ref-27">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="https://github.com/halayli/lthread">[8]</a> - lthread is a multicore/multithread coroutine library written in C</span></li>
<li id="cite_note-28"><span class="mw-cite-backlink"><b><a href="#cite_ref-28">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="http://dekorte.com/projects/opensource/libcoroutine/">[9]</a> - libCoroutine for FreeBSD, Linux, OS X PPC and x86, SunOS, Symbian and others.</span></li>
<li id="cite_note-29"><span class="mw-cite-backlink"><b><a href="#cite_ref-29">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="http://code.google.com/p/libconcurrency/">[10]</a> - libconcurrency is a simple C library for portable stack-switching coroutines</span></li>
<li id="cite_note-30"><span class="mw-cite-backlink"><b><a href="#cite_ref-30">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="http://software.schmorp.de/pkg/libcoro.html">[11]</a> - portable coroutines in C, used as the basis for the Coro perl module.</span></li>
<li id="cite_note-31"><span class="mw-cite-backlink"><b><a href="#cite_ref-31">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="https://github.com/Adaptv/ribs2">[12]</a> - Robust Infrastructure for Backend Systems.</span></li>
<li id="cite_note-32"><span class="mw-cite-backlink"><b><a href="#cite_ref-32">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="http://mozy.com/blog/announcements/open-source-and-mozy-the-debut-of-mozy-code/">[13]</a> - Open Source and Mozy: The Debut of Mozy Code</span></li>
<li id="cite_note-EvolutionUnix-33"><span class="mw-cite-backlink"><b><a href="#cite_ref-EvolutionUnix_33-0">^</a></b></span> <span class="reference-text"><span class="citation journal">Ritchie, Dennis M. (1980). <a rel="nofollow" class="external text" href="http://cm.bell-labs.com/cm/cs/who/dmr/hist.html">"The Evolution of the Unix Time-sharing System"</a>. <i>Lecture Notes in Computer Science</i> <b>79</b> (Language Design and Programming Methodology): 25–35.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.atitle=The+Evolution+of+the+Unix+Time-sharing+System&amp;rft.aufirst=Dennis+M.&amp;rft.aulast=Ritchie&amp;rft.au=Ritchie%2C+Dennis+M.&amp;rft.date=1980&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fcm.bell-labs.com%2Fcm%2Fcs%2Fwho%2Fdmr%2Fhist.html&amp;rft.issue=Language+Design+and+Programming+Methodology&amp;rft.jtitle=Lecture+Notes+in+Computer+Science&amp;rft.pages=25%E2%80%9335&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=79" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
</ol>
</div>
<h2><span class="mw-headline" id="Further_reading">Further reading</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=24" title="Edit section: Further reading">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><span class="citation journal">Ana Lucia de Moura; Roberto Ierusalimschy (2004). <a rel="nofollow" class="external text" href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.58.4017"><i>Revisiting Coroutines</i></a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACoroutine&amp;rft.au=Ana+Lucia+de+Moura&amp;rft.aulast=Ana+Lucia+de+Moura&amp;rft.au=Roberto+Ierusalimschy&amp;rft.btitle=Revisiting+Coroutines&amp;rft.date=2004&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fsummary%3Fdoi%3D10.1.1.58.4017&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
</ul>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit&amp;section=25" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Simon_Tatham" title="Simon Tatham">Simon Tatham</a>'s C oriented <a rel="nofollow" class="external text" href="http://www.chiark.greenend.org.uk/~sgtatham/coroutines.html">comprehensive introduction to coroutines</a></li>
<li><a rel="nofollow" class="external text" href="http://www.softpanorama.org/Lang/coroutines.shtml">Softpanorama coroutine page</a> Contains extensive assembler coroutines links.</li>
</ul>


<!-- 
NewPP limit report
Parsed by mw1166
CPU time usage: 1.900 seconds
Real time usage: 1.979 seconds
Preprocessor visited node count: 2263/1000000
Preprocessor generated node count: 7906/1500000
Post‐expand include size: 38054/2048000 bytes
Template argument size: 3876/2048000 bytes
Highest expansion depth: 13/40
Expensive parser function count: 5/500
Lua time usage: 0.084/10.000 seconds
Lua memory usage: 2.54 MB/50 MB
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:243800-0!*!0!!en!*!* and timestamp 20140329003232
 -->
<noscript><img src="http://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>								<div class="printfooter">
				Retrieved from "<a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;oldid=601737104">http://en.wikipedia.org/w/index.php?title=Coroutine&amp;oldid=601737104</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="http://en.wikipedia.org/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="http://en.wikipedia.org/wiki/Category:Concurrent_computing" title="Category:Concurrent computing">Concurrent computing</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Subroutines" title="Category:Subroutines">Subroutines</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="http://en.wikipedia.org/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_unsourced_statements_from_February_2011" title="Category:Articles with unsourced statements from February 2011">Articles with unsourced statements from February 2011</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_unsourced_statements_from_May_2010" title="Category:Articles with unsourced statements from May 2010">Articles with unsourced statements from May 2010</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_containing_potentially_dated_statements_from_2003" title="Category:Articles containing potentially dated statements from 2003">Articles containing potentially dated statements from 2003</a></li><li><a href="http://en.wikipedia.org/wiki/Category:All_articles_containing_potentially_dated_statements" title="Category:All articles containing potentially dated statements">All articles containing potentially dated statements</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_unsourced_statements_from_October_2007" title="Category:Articles with unsourced statements from October 2007">Articles with unsourced statements from October 2007</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Coroutine&amp;type=signup">Create account</a></li><li id="pt-login"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Coroutine" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Coroutine.html"  title="View the content page [c]" accesskey="c">Article</a></span></li>
					<li  id="ca-talk"><span><a href="http://en.wikipedia.org/wiki/Talk:Coroutine"  title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Coroutine.html" >Read</a></span></li>
					<li id="ca-edit"><span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=edit"  title="You can edit this page. &#10;Please review your changes before saving. [e]" accesskey="e">Edit</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=history"  title="Past versions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="http://en.wikipedia.org/w/index.php" id="searchform">
					<div id="simpleSearch">
					<input type="search" name="search" placeholder="Search" title="Search Wikipedia [f]" accesskey="f" id="searchInput" /><input type="hidden" value="Special:Search" name="title" /><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton" /><input type="submit" name="go" value="Go" title="Go to a page with this exact name if one exists" id="searchButton" class="searchButton" />		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="Main_Page.html"  title="Visit the main page"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="Main_Page.html" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-contents"><a href="http://en.wikipedia.org/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
			<li id="n-featuredcontent"><a href="http://en.wikipedia.org/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li>
			<li id="n-currentevents"><a href="http://en.wikipedia.org/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
			<li id="n-randompage"><a href="http://en.wikipedia.org/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			<li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li>
			<li id="n-shoplink"><a href="http://shop.wikimedia.org/" title="Visit the Wikimedia Shop">Wikimedia Shop</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
	<h3 id='p-interaction-label'>Interaction</h3>
	<div class="body">
		<ul>
			<li id="n-help"><a href="http://en.wikipedia.org/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			<li id="n-aboutsite"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
			<li id="n-portal"><a href="http://en.wikipedia.org/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
			<li id="n-recentchanges"><a href="http://en.wikipedia.org/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-contactpage"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://en.wikipedia.org/wiki/Special:WhatLinksHere/Coroutine" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://en.wikipedia.org/wiki/Special:RecentChangesLinked/Coroutine" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-upload"><a href="http://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li>
			<li id="t-specialpages"><a href="http://en.wikipedia.org/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;oldid=601737104" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;action=info">Page information</a></li>
			<li id="t-wikibase"><a href="http://www.wikidata.org/wiki/Q1339231" title="Link to connected data repository item [g]" accesskey="g">Data item</a></li>
<li id="t-cite"><a href="http://en.wikipedia.org/w/index.php?title=Special:Cite&amp;page=Coroutine&amp;id=601737104" title="Information on how to cite this page">Cite this page</a></li>		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
	<h3 id='p-coll-print_export-label'>Print/export</h3>
	<div class="body">
		<ul>
			<li id="coll-create_a_book"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Coroutine">Create a book</a></li>
			<li id="coll-download-as-rl"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Coroutine&amp;oldid=601737104&amp;writer=rl">Download as PDF</a></li>
			<li id="t-print"><a href="http://en.wikipedia.org/w/index.php?title=Coroutine&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
	<h3 id='p-lang-label'>Languages</h3>
	<div class="body">
		<ul>
			<li class="interlanguage-link interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Koprogram" title="Koprogram – Czech" lang="cs" hreflang="cs">Čeština</a></li>
			<li class="interlanguage-link interwiki-de"><a href="http://de.wikipedia.org/wiki/Koroutine" title="Koroutine – German" lang="de" hreflang="de">Deutsch</a></li>
			<li class="interlanguage-link interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Coroutine" title="Coroutine – French" lang="fr" hreflang="fr">Français</a></li>
			<li class="interlanguage-link interwiki-ja"><a href="http://ja.wikipedia.org/wiki/コルーチン" title="コルーチン – Japanese" lang="ja" hreflang="ja">日本語</a></li>
			<li class="interlanguage-link interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Współprogram" title="Współprogram – Polish" lang="pl" hreflang="pl">Polski</a></li>
			<li class="interlanguage-link interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Corotina" title="Corotina – Portuguese" lang="pt" hreflang="pt">Português</a></li>
			<li class="interlanguage-link interwiki-ru"><a href="http://ru.wikipedia.org/wiki/Сопрограмма" title="Сопрограмма – Russian" lang="ru" hreflang="ru">Русский</a></li>
			<li class="interlanguage-link interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Korutin" title="Korutin – Swedish" lang="sv" hreflang="sv">Svenska</a></li>
			<li class="interlanguage-link interwiki-uk"><a href="http://uk.wikipedia.org/wiki/Співпрограма" title="Співпрограма – Ukrainian" lang="uk" hreflang="uk">Українська</a></li>
			<li class="interlanguage-link interwiki-zh"><a href="http://zh.wikipedia.org/wiki/协程" title="协程 – Chinese" lang="zh" hreflang="zh">中文</a></li>
			<li class="uls-p-lang-dummy"><a href="#"></a></li>
			<li class="wbc-editpage"><a href="http://www.wikidata.org/wiki/Q1339231#sitelinks-wikipedia" title="Edit interlanguage links">Edit links</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 29 March 2014 at 00:32.<br /></li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="http://wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="http://wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy.</a> <br/>
Wikipedia® is a registered trademark of the <a href="http://www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="http://en.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a class="external" href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-mobileview"><a href="http://en.m.wikipedia.org/wiki/Coroutine" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<a href="http://wikimediafoundation.org/"><img src="http://bits.wikimedia.org/images/wikimedia-button.png" width="88" height="31" alt="Wikimedia Foundation"/></a>
					</li>
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["ext.cite","mobile.desktop","mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.DRN-wizard","ext.gadget.charinsert","mw.MwEmbedSupport.style","ext.navigationTiming","schema.UniversalLanguageSelector","ext.uls.eventlogger","ext.uls.interlanguage","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served by mw1035 in 0.300 secs. -->
	</body>

<!-- Mirrored from en.wikipedia.org/wiki/Coroutine by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 29 Mar 2014 23:59:02 GMT -->
</html>
