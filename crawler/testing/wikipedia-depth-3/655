http://old-www.cs.dartmouth.edu/~cs50/data/tse/wikipedia/Abstract_data_type.html
2
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">

<!-- Mirrored from en.wikipedia.org/wiki/Abstract_data_type by HTTrack Website Copier/3.x [XR&CO'2013], Sun, 30 Mar 2014 00:02:10 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="UTF-8" />
<title>Abstract data type - Wikipedia, the free encyclopedia</title>
<meta http-equiv="X-UA-Compatible" content="IE=EDGE" />
<meta name="generator" content="MediaWiki 1.23wmf19" />
<link rel="alternate" href="http://en.wikipedia.org/wiki/android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Abstract_data_type" />
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit" />
<link rel="edit" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit" />
<link rel="apple-touch-icon" href="http://bits.wikimedia.org/apple-touch/wikipedia.png" />
<link rel="shortcut icon" href="http://bits.wikimedia.org/favicon/wikipedia.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://en.wikipedia.org/w/opensearch_desc.php" title="Wikipedia (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://en.wikipedia.org/w/api.php?action=rsd" />
<link rel="copyright" href="http://creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="canonical" href="Abstract_data_type.html" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cteahouse%7Cext.geshi.local%7Cext.rtlcite%2Cwikihiero%7Cext.uls.nojs%7Cext.visualEditor.viewPageTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.ui.button%7Cskins.common.interface%7Cskins.vector.styles&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: enwiki:resourceloader:filter:minify-css:7:3904d24a08aa08f6a68dc338f9be277e */</style>

<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Abstract_data_type","wgTitle":"Abstract data type","wgCurRevisionId":597403544,"wgRevisionId":597403544,"wgArticleId":2349,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Articles needing additional references from May 2009","All articles needing additional references","All articles with unsourced statements","Articles with unsourced statements from May 2009","Articles needing additional references from May 2011","Abstract data types","Data types","Type theory"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Abstract_data_type","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":false,"previewDialog":false,"publish":false,"toc":false},"wgBetaFeaturesFeatures":[],"wgVisualEditor":{"isPageWatched":false,"magnifyClipIconURL":"//bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png","pageLanguageCode":"en","pageLanguageDir":"ltr","svgMaxSize":2048},"wikilove-recipient":"","wikilove-anon":0,"wgGuidedTourHelpGuiderUrl":"Help:Guided tours/guider","wgFlowTermsOfUseEdit":"By saving changes, you agree to our \u003Ca class=\"external text\" href=\"//wikimediafoundation.org/wiki/Terms_of_use\"\u003ETerms of Use\u003C/a\u003E and agree to irrevocably release your text under the \u003Ca rel=\"nofollow\" class=\"external text\" href=\"//creativecommons.org/licenses/by-sa/3.0\"\u003ECC BY-SA 3.0 License\u003C/a\u003E and \u003Ca class=\"external text\" href=\"//en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License\"\u003EGFDL\u003C/a\u003E","wgULSAcceptLanguageList":["en-us","en"],"wgULSCurrentAutonym":"English","wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgNoticeProject":"wikipedia","wgWikibaseItemId":"Q827335"});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"editfont":"default","editondblclick":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nickname":"","norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"showhiddencats":false,"shownumberswatching":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":4,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,
"wllimit":250,"useeditwarning":1,"prefershttps":1,"flaggedrevssimpleui":1,"flaggedrevsstable":0,"flaggedrevseditdiffs":true,"flaggedrevsviewdiffs":false,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"visualeditor-enable":0,"visualeditor-enable-experimental":0,"visualeditor-betatempdisable":0,"wikilove-enabled":1,"echo-subscriptions-web-page-review":true,"echo-subscriptions-email-page-review":false,"ep_showtoplink":false,"ep_bulkdelorgs":false,"ep_bulkdelcourses":true,"ep_showdyk":true,"echo-subscriptions-web-education-program":true,"echo-subscriptions-email-education-program":false,"echo-notify-show-link":true,"echo-show-alert":true,"echo-email-frequency":0,"echo-email-format":"html","echo-subscriptions-email-system":true,"echo-subscriptions-web-system":true,"echo-subscriptions-email-other":false,"echo-subscriptions-web-other":true,"echo-subscriptions-email-edit-user-talk":false,"echo-subscriptions-web-edit-user-talk":true,"echo-subscriptions-email-reverted":false,
"echo-subscriptions-web-reverted":true,"echo-subscriptions-email-article-linked":false,"echo-subscriptions-web-article-linked":false,"echo-subscriptions-email-mention":false,"echo-subscriptions-web-mention":true,"echo-subscriptions-web-edit-thank":true,"echo-subscriptions-email-edit-thank":false,"echo-subscriptions-web-flow-discussion":true,"echo-subscriptions-email-flow-discussion":false,"gettingstarted-task-toolbar-show-intro":true,"uls-preferences":"","language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"searchNs100":false,"searchNs101":false,"searchNs108":false,
"searchNs109":false,"searchNs118":false,"searchNs119":false,"searchNs446":false,"searchNs447":false,"searchNs710":false,"searchNs711":false,"searchNs828":false,"searchNs829":false,"gadget-teahouse":1,"gadget-ReferenceTooltips":1,"gadget-DRN-wizard":1,"gadget-charinsert":1,"gadget-mySandbox":1,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: enwiki:resourceloader:filter:minify-js:7:868e43d07ede2616d2d1dc3507cd8145 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","ext.centralauth.centralautologin","skins.vector.compactPersonalBar.defaultTracking","ext.visualEditor.viewPageTarget.init","ext.uls.init","ext.uls.interface","wikibase.client.init","ext.centralNotice.bannerController","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cpp.source-cpp .de1, .cpp.source-cpp .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cpp.source-cpp  {font-family:monospace;}
.cpp.source-cpp .imp {font-weight: bold; color: red;}
.cpp.source-cpp li, .cpp.source-cpp .li1 {font-weight: normal; vertical-align:top;}
.cpp.source-cpp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cpp.source-cpp .li2 {font-weight: bold; vertical-align:top;}
.cpp.source-cpp .kw1 {color: #0000ff;}
.cpp.source-cpp .kw2 {color: #0000ff;}
.cpp.source-cpp .kw3 {color: #0000dd;}
.cpp.source-cpp .kw4 {color: #0000ff;}
.cpp.source-cpp .co1 {color: #666666;}
.cpp.source-cpp .co2 {color: #339900;}
.cpp.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.cpp.source-cpp .es0 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es1 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es2 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es3 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es4 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es5 {color: #006699; font-weight: bold;}
.cpp.source-cpp .br0 {color: #008000;}
.cpp.source-cpp .sy0 {color: #008000;}
.cpp.source-cpp .sy1 {color: #000080;}
.cpp.source-cpp .sy2 {color: #000040;}
.cpp.source-cpp .sy3 {color: #000040;}
.cpp.source-cpp .sy4 {color: #008080;}
.cpp.source-cpp .st0 {color: #FF0000;}
.cpp.source-cpp .nu0 {color: #0000dd;}
.cpp.source-cpp .nu6 {color: #208080;}
.cpp.source-cpp .nu8 {color: #208080;}
.cpp.source-cpp .nu12 {color: #208080;}
.cpp.source-cpp .nu16 {color:#800080;}
.cpp.source-cpp .nu17 {color:#800080;}
.cpp.source-cpp .nu18 {color:#800080;}
.cpp.source-cpp .nu19 {color:#800080;}
.cpp.source-cpp .me1 {color: #007788;}
.cpp.source-cpp .me2 {color: #007788;}
.cpp.source-cpp .ln-xtra, .cpp.source-cpp li.ln-xtra, .cpp.source-cpp div.ln-xtra {background-color: #ffc;}
.cpp.source-cpp span.xtra { display:block; }

/*]]>*/
</style><link rel="dns-prefetch" href="http://meta.wikimedia.org/" /><!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/static-1.23wmf19/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Abstract_data_type skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<div id="siteNotice"><!-- CentralNotice --></div>
						<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Abstract data type</span></h1>
						<div id="bodyContent">
								<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-navigation">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><table class="metadata plainlinks ambox ambox-content ambox-Refimprove" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px;"><a href="http://en.wikipedia.org/wiki/File:Question_book-new.svg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x" /></a></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This article <b>needs additional citations for <a href="http://en.wikipedia.org/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit">improve this article</a> by <a href="http://en.wikipedia.org/wiki/Help:Introduction_to_referencing/1" title="Help:Introduction to referencing/1">adding citations to reliable sources</a>. Unsourced material may be challenged and removed.</span> <small><i>(May 2009)</i></small></span></td>
</tr>
</table>
<div class="dablink">Not to be confused with <a href="http://en.wikipedia.org/wiki/Algebraic_data_type" title="Algebraic data type">Algebraic data type</a>.</div>
<p>In <a href="Computer_science.html" title="Computer science">computer science</a>, an <b>abstract data type</b> (<b>ADT</b>) is a <a href="http://en.wikipedia.org/wiki/Mathematics" title="Mathematics">mathematical</a> model for a certain class of <a href="Data_structure.html" title="Data structure">data structures</a> that have similar behavior; or for certain <a href="Data_type.html" title="Data type">data types</a> of one or more <a href="Programming_language.html" title="Programming language">programming languages</a> that have similar <a href="http://en.wikipedia.org/wiki/Semantics" title="Semantics">semantics</a>. An abstract data type is defined indirectly, only by the operations that may be performed on it and by mathematical constraints on the effects (and possibly <a href="http://en.wikipedia.org/wiki/Computational_complexity" title="Computational complexity" class="mw-redirect">cost</a>) of those operations.<sup id="cite_ref-liskov_1-0" class="reference"><a href="#cite_note-liskov-1"><span>[</span>1<span>]</span></a></sup></p>
<p>For example, an abstract <a href="Stack_(abstract_data_type).html" title="Stack (abstract data type)">stack</a> could be defined by three operations: <code>push</code>, that inserts some data item onto the structure, <code>pop</code>, that extracts an item from it (with the constraint that each pop always returns the most recently pushed item that has not been popped yet), and <code>peek</code>, that allows data on top of the structure to be examined without removal. When <a href="Analysis_of_algorithms.html" title="Analysis of algorithms">analyzing the efficiency</a> of algorithms that use stacks, one may also specify that all operations take the same time no matter how many items have been pushed into the stack, and that the stack uses a constant amount of storage for each element.</p>
<p>Abstract data types are purely theoretical entities, used (among other things) to simplify the description of abstract algorithms, to classify and evaluate data structures, and to formally describe the <a href="Type_system.html" title="Type system">type systems</a> of programming languages. However, an ADT may be <a href="http://en.wikipedia.org/wiki/Implementation" title="Implementation">implemented</a> by specific <a href="Data_type.html" title="Data type">data types</a> or <a href="Data_structure.html" title="Data structure">data structures</a>, in many ways and in many programming languages; or described in a <a href="http://en.wikipedia.org/wiki/Formal_specification_language" title="Formal specification language" class="mw-redirect">formal specification language</a>. ADTs are often implemented as <a href="Modular_programming.html" title="Modular programming">modules</a>: the module's <a href="http://en.wikipedia.org/wiki/Interface_(computer_science)" title="Interface (computer science)" class="mw-redirect">interface</a> declares procedures that correspond to the ADT operations, sometimes with <a href="http://en.wikipedia.org/wiki/Comment_(computer_programming)" title="Comment (computer programming)">comments</a> that describe the constraints. This <a href="http://en.wikipedia.org/wiki/Information_hiding" title="Information hiding">information hiding</a> strategy allows the implementation of the module to be changed without disturbing the <a href="http://en.wikipedia.org/wiki/Client_(computing)" title="Client (computing)">client</a> programs.</p>
<p>The term <b>abstract data type</b> can also be regarded as a generalised approach of a number of algebraic structures, such as lattices, groups, and rings.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2"><span>[</span>2<span>]</span></a></sup> This can be treated as part of the subject area of <a href="Artificial_intelligence.html" title="Artificial intelligence">artificial intelligence</a>. The notion of abstract data types is related to the concept of <a href="http://en.wikipedia.org/wiki/Data_abstraction" title="Data abstraction" class="mw-redirect">data abstraction</a>, important in <a href="http://en.wikipedia.org/wiki/Object-oriented_programming_language" title="Object-oriented programming language" class="mw-redirect">object-oriented programming</a> and <a href="http://en.wikipedia.org/wiki/Design_by_contract" title="Design by contract">design by contract</a> methodologies for <a href="Software_engineering.html" title="Software engineering">software development</a><sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (May 2009)">citation needed</span></a></i>]</sup>.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Defining_an_abstract_data_type_.28ADT.29"><span class="tocnumber">1</span> <span class="toctext">Defining an abstract data type (<i>ADT</i>)</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Imperative_view"><span class="tocnumber">1.1</span> <span class="toctext">Imperative view</span></a>
<ul>
<li class="toclevel-3 tocsection-3"><a href="#Abstract_variable"><span class="tocnumber">1.1.1</span> <span class="toctext">Abstract variable</span></a></li>
<li class="toclevel-3 tocsection-4"><a href="#Instance_creation"><span class="tocnumber">1.1.2</span> <span class="toctext">Instance creation</span></a></li>
<li class="toclevel-3 tocsection-5"><a href="#Preconditions.2C_postconditions.2C_and_invariants"><span class="tocnumber">1.1.3</span> <span class="toctext">Preconditions, postconditions, and invariants</span></a></li>
<li class="toclevel-3 tocsection-6"><a href="#Example:_abstract_stack_.28imperative.29"><span class="tocnumber">1.1.4</span> <span class="toctext">Example: abstract stack (imperative)</span></a></li>
<li class="toclevel-3 tocsection-7"><a href="#Single-instance_style"><span class="tocnumber">1.1.5</span> <span class="toctext">Single-instance style</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-8"><a href="#Functional_ADT_definitions"><span class="tocnumber">1.2</span> <span class="toctext">Functional ADT definitions</span></a>
<ul>
<li class="toclevel-3 tocsection-9"><a href="#Example:_abstract_stack_.28functional.29"><span class="tocnumber">1.2.1</span> <span class="toctext">Example: abstract stack (functional)</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-10"><a href="#Advantages_of_abstract_data_typing"><span class="tocnumber">2</span> <span class="toctext">Advantages of abstract data typing</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#Typical_operations"><span class="tocnumber">3</span> <span class="toctext">Typical operations</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#Examples"><span class="tocnumber">4</span> <span class="toctext">Examples</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#Implementation"><span class="tocnumber">5</span> <span class="toctext">Implementation</span></a>
<ul>
<li class="toclevel-2 tocsection-14"><a href="#Example:_implementation_of_the_stack_ADT"><span class="tocnumber">5.1</span> <span class="toctext">Example: implementation of the stack ADT</span></a>
<ul>
<li class="toclevel-3 tocsection-15"><a href="#Functional-style_interface"><span class="tocnumber">5.1.1</span> <span class="toctext">Functional-style interface</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-16"><a href="#ADT_libraries"><span class="tocnumber">5.2</span> <span class="toctext">ADT libraries</span></a></li>
<li class="toclevel-2 tocsection-17"><a href="#Built-in_abstract_data_types"><span class="tocnumber">5.3</span> <span class="toctext">Built-in abstract data types</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-18"><a href="#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-19"><a href="#References"><span class="tocnumber">7</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-20"><a href="#Further"><span class="tocnumber">8</span> <span class="toctext">Further</span></a></li>
<li class="toclevel-1 tocsection-21"><a href="#External_links"><span class="tocnumber">9</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Defining_an_abstract_data_type_.28ADT.29">Defining an abstract data type (<i>ADT</i>)</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=1" title="Edit section: Defining an abstract data type (ADT)">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>An abstract data type is defined as a mathematical model of the data objects that make up a data type as well as the functions that operate on these objects. There are no standard conventions for defining them. A broad division may be drawn between "imperative" and "functional" definition styles.</p>
<h3><span class="mw-headline" id="Imperative_view">Imperative view</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=2" title="Edit section: Imperative view">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>In the "imperative" view, which is closer to the philosophy of <a href="Imperative_programming.html" title="Imperative programming">imperative programming</a> languages, an abstract data structure is conceived as an entity that is <i>mutable</i> — meaning that it may be in different <i>states</i> at different times. Some operations may change the state of the ADT; therefore, the order in which operations are evaluated is important, and the same operation on the same entities may have different effects if executed at different times — just like the instructions of a computer, or the commands and procedures of an imperative language. To underscore this view, it is customary to say that the operations are <i>executed</i> or <i>applied</i>, rather than <i>evaluated</i>. The imperative style is often used when describing abstract algorithms. This is described by Donald E. Knuth and can be referenced from here <a href="http://en.wikipedia.org/wiki/The_Art_of_Computer_Programming" title="The Art of Computer Programming">The Art of Computer Programming</a>.</p>
<h4><span class="mw-headline" id="Abstract_variable">Abstract variable</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=3" title="Edit section: Abstract variable">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>Imperative ADT definitions often depend on the concept of an <i>abstract variable</i>, which may be regarded as the simplest non-trivial ADT. An abstract variable <i>V</i> is a mutable entity that admits two operations:</p>
<ul>
<li><code>store</code>(<i>V</i>,<i>x</i>) where <i>x</i> is a <i>value</i> of unspecified nature; and</li>
<li><code>fetch</code>(<i>V</i>), that yields a value;</li>
</ul>
<p>with the constraint that</p>
<ul>
<li><code>fetch</code>(<i>V</i>) always returns the value <i>x</i> used in the most recent <code>store</code>(<i>V</i>,<i>x</i>) operation on the same variable <i>V</i>.</li>
</ul>
<p>As in so many programming languages, the operation <code>store</code>(<i>V</i>,<i>x</i>) is often written <i>V</i> ← <i>x</i> (or some similar notation), and <code>fetch</code>(<i>V</i>) is implied whenever a variable <i>V</i> is used in a context where a value is required. Thus, for example, <i>V</i> ← <i>V</i> + 1 is commonly understood to be a shorthand for <code>store</code>(<i>V</i>,<code>fetch</code>(<i>V</i>) + 1).</p>
<p>In this definition, it is implicitly assumed that storing a value into a variable <i>U</i> has no effect on the state of a distinct variable <i>V</i>. To make this assumption explicit, one could add the constraint that</p>
<ul>
<li>if <i>U</i> and <i>V</i> are distinct variables, the sequence { <code>store</code>(<i>U</i>,<i>x</i>); <code>store</code>(<i>V</i>,<i>y</i>) } is equivalent to { <code>store</code>(<i>V</i>,<i>y</i>); <code>store</code>(<i>U</i>,<i>x</i>) }.</li>
</ul>
<p>More generally, ADT definitions often assume that any operation that changes the state of one ADT instance has no effect on the state of any other instance (including other instances of the same ADT) — unless the ADT axioms imply that the two instances are connected (<a href="http://en.wikipedia.org/wiki/Aliasing_(computing)" title="Aliasing (computing)">aliased</a>) in that sense. For example, when extending the definition of abstract variable to include abstract <a href="http://en.wikipedia.org/wiki/Record_(computer_science)" title="Record (computer science)">records</a>, the operation that selects a field from a record variable <i>R</i> must yield a variable <i>V</i> that is aliased to that part of <i>R</i>.</p>
<p>The definition of an abstract variable <i>V</i> may also restrict the stored values <i>x</i> to members of a specific set <i>X</i>, called the <i>range</i> or <i>type</i> of <i>V</i>. As in programming languages, such restrictions may simplify the description and <a href="Analysis_of_algorithms.html" title="Analysis of algorithms">analysis of algorithms</a>, and improve their readability.</p>
<p>Note that this definition does not imply anything about the result of evaluating <code>fetch</code>(<i>V</i>) when <i>V</i> is <i>un-initialized</i>, that is, before performing any <code>store</code> operation on <i>V</i>. An algorithm that does so is usually considered invalid, because its effect is not defined. (However, there are some important algorithms whose efficiency strongly depends on the assumption that such a <code>fetch</code> is legal, and returns some arbitrary value in the variable's range.<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (May 2009)">citation needed</span></a></i>]</sup>)</p>
<h4><span class="mw-headline" id="Instance_creation">Instance creation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=4" title="Edit section: Instance creation">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>Some algorithms need to create new instances of some ADT (such as new variables, or new stacks). To describe such algorithms, one usually includes in the ADT definition a <code>create</code>() operation that yields an instance of the ADT, usually with axioms equivalent to</p>
<ul>
<li>the result of <code>create</code>() is distinct from any instance <i>S</i> in use by the algorithm.</li>
</ul>
<p>This axiom may be strengthened to exclude also partial aliasing with other instances. On the other hand, this axiom still allows implementations of <code>create</code>() to yield a previously created instance that has become inaccessible to the program.</p>
<h4><span class="mw-headline" id="Preconditions.2C_postconditions.2C_and_invariants">Preconditions, postconditions, and invariants</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=5" title="Edit section: Preconditions, postconditions, and invariants">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>In imperative-style definitions, the axioms are often expressed by <i>preconditions</i>, that specify when an operation may be executed; <i>postconditions</i>, that relate the states of the ADT before and after the execution of each operation; and <i>invariants</i>, that specify properties of the ADT that are <i>not</i> changed by the operations.</p>
<h4><span class="mw-headline" id="Example:_abstract_stack_.28imperative.29">Example: abstract stack (imperative)</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=6" title="Edit section: Example: abstract stack (imperative)">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>As another example, an imperative definition of an abstract stack could specify that the state of a stack <i>S</i> can be modified only by the operations</p>
<ul>
<li><code>push</code>(<i>S</i>,<i>x</i>), where <i>x</i> is some <i>value</i> of unspecified nature; and</li>
<li><code>pop</code>(<i>S</i>), that yields a value as a result;</li>
</ul>
<p>with the constraint that</p>
<ul>
<li>For any value <i>x</i> and any abstract variable <i>V</i>, the sequence of operations { <code>push</code>(<i>S</i>,<i>x</i>); <i>V</i> ← <code>pop</code>(<i>S</i>) } is equivalent to { <i>V</i> ← <i>x</i> };</li>
</ul>
<p>Since the assignment { <i>V</i> ← <i>x</i> }, by definition, cannot change the state of <i>S</i>, this condition implies that { <i>V</i> ← <code>pop</code>(<i>S</i>) } restores <i>S</i> to the state it had before the { <code>push</code>(<i>S</i>,<i>x</i>) }. From this condition and from the properties of abstract variables, it follows, for example, that the sequence</p>
<dl>
<dd>{ <code>push</code>(<i>S</i>,<i>x</i>); <code>push</code>(<i>S</i>,<i>y</i>); <i>U</i> ← <code>pop</code>(<i>S</i>); <code>push</code>(<i>S</i>,<i>z</i>); <i>V</i> ← <code>pop</code>(<i>S</i>); <i>W</i> ← <code>pop</code>(<i>S</i>); }</dd>
</dl>
<p>where <i>x</i>,<i>y</i>, and <i>z</i> are any values, and <i>U</i>, <i>V</i>, <i>W</i> are pairwise distinct variables, is equivalent to</p>
<dl>
<dd>{ <i>U</i> ← <i>y</i>; <i>V</i> ← <i>z</i>; <i>W</i> ← <i>x</i> }</dd>
</dl>
<p>Here it is implicitly assumed that operations on a stack instance do not modify the state of any other ADT instance, including other stacks; that is,</p>
<ul>
<li>For any values <i>x</i>,<i>y</i>, and any distinct stacks <i>S</i> and <i>T</i>, the sequence { <code>push</code>(<i>S</i>,<i>x</i>); <code>push</code>(<i>T</i>,<i>y</i>) } is equivalent to { <code>push</code>(<i>T</i>,<i>y</i>); <code>push</code>(<i>S</i>,<i>x</i>) }.</li>
</ul>
<p>A stack ADT definition usually includes also a <a href="Boolean_value.html" title="Boolean value" class="mw-redirect">Boolean</a>-valued function <code>empty</code>(<i>S</i>) and a <code>create</code>() operation that returns a stack instance, with axioms equivalent to</p>
<ul>
<li><code>create</code>() ≠ <i>S</i> for any stack <i>S</i> (a newly created stack is distinct from all previous stacks)</li>
<li><code>empty</code>(<code>create</code>()) (a newly created stack is empty)</li>
<li><code>not</code> <code>empty</code>(<code>push</code>(<i>S</i>,<i>x</i>)) (pushing something into a stack makes it non-empty)</li>
</ul>
<h4><span class="mw-headline" id="Single-instance_style">Single-instance style</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=7" title="Edit section: Single-instance style">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>Sometimes an ADT is defined as if only one instance of it existed during the execution of the algorithm, and all operations were applied to that instance, which is not explicitly notated. For example, the abstract stack above could have been defined with operations <code>push</code>(<i>x</i>) and <code>pop</code>(), that operate on "the" only existing stack. ADT definitions in this style can be easily rewritten to admit multiple coexisting instances of the ADT, by adding an explicit instance parameter (like <i>S</i> in the previous example) to every operation that uses or modifies the implicit instance.</p>
<p>On the other hand, some ADTs cannot be meaningfully defined without assuming multiple instances. This is the case when a single operation takes two distinct instances of the ADT as parameters. For an example, consider augmenting the definition of the stack ADT with an operation <code>compare</code>(<i>S</i>,<i>T</i>) that checks whether the stacks <i>S</i> and <i>T</i> contain the same items in the same order.</p>
<h3><span class="mw-headline" id="Functional_ADT_definitions">Functional ADT definitions</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=8" title="Edit section: Functional ADT definitions">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Another way to define an ADT, closer to the spirit of <a href="Functional_programming.html" title="Functional programming">functional programming</a>, is to consider each state of the structure as a separate entity. In this view, any operation that modifies the ADT is modeled as a <a href="http://en.wikipedia.org/wiki/Function_(mathematics)" title="Function (mathematics)">mathematical function</a> that takes the old state as an argument, and returns the new state as part of the result. Unlike the "imperative" operations, these functions have no <a href="http://en.wikipedia.org/wiki/Side_effect_(computer_science)" title="Side effect (computer science)">side effects</a>. Therefore, the order in which they are evaluated is immaterial, and the same operation applied to the same arguments (including the same input states) will always return the same results (and output states).</p>
<p>In the functional view, in particular, there is no way (or need) to define an "abstract variable" with the semantics of imperative variables (namely, with <code>fetch</code> and <code>store</code> operations). Instead of storing values into variables, one passes them as arguments to functions.</p>
<h4><span class="mw-headline" id="Example:_abstract_stack_.28functional.29">Example: abstract stack (functional)</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=9" title="Edit section: Example: abstract stack (functional)">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>For example, a complete functional-style definition of a stack ADT could use the three operations:</p>
<ul>
<li><code>push</code>: takes a stack state and an arbitrary value, returns a stack state;</li>
<li><code>top</code>: takes a stack state, returns a value;</li>
<li><code>pop</code>: takes a stack state, returns a stack state;</li>
</ul>
<p>In a functional-style definition there is no need for a <code>create</code> operation. Indeed, there is no notion of "stack instance". The stack states can be thought of as being potential states of a single stack structure, and two stack states that contain the same values in the same order are considered to be identical states. This view actually mirrors the behavior of some concrete implementations, such as <a href="Linked_list.html" title="Linked list">linked lists</a> with <a href="http://en.wikipedia.org/wiki/Hash_cons" title="Hash cons" class="mw-redirect">hash cons</a>.</p>
<p>Instead of <code>create</code>(), a functional definition of a stack ADT may assume the existence of a special stack state, the <i>empty stack</i>, designated by a special symbol like Λ or "()"; or define a <code>bottom</code>() operation that takes no arguments and returns this special stack state. Note that the axioms imply that</p>
<ul>
<li><code>push</code>(Λ,<i>x</i>) ≠ Λ</li>
</ul>
<p>In a functional definition of a stack one does not need an <code>empty</code> predicate: instead, one can test whether a stack is empty by testing whether it is equal to Λ.</p>
<p>Note that these axioms do not define the effect of <code>top</code>(<i>s</i>) or <code>pop</code>(<i>s</i>), unless <i>s</i> is a stack state returned by a <code>push</code>. Since <code>push</code> leaves the stack non-empty, those two operations are undefined (hence invalid) when <i>s</i> = Λ. On the other hand, the axioms (and the lack of side effects) imply that <code>push</code>(<i>s</i>,<i>x</i>) = <code>push</code>(<i>t</i>,<i>y</i>) <a href="http://en.wikipedia.org/wiki/If_and_only_if" title="If and only if">if and only if</a> <i>x</i> = <i>y</i> and <i>s</i> = <i>t</i>.</p>
<p>As in some other branches of mathematics, it is customary to assume also that the stack states are only those whose existence can be proved from the axioms in a finite number of steps. In the stack ADT example above, this rule means that every stack is a <i>finite</i> sequence of values, that becomes the empty stack (Λ) after a finite number of <code>pop</code>s. By themselves, the axioms above do not exclude the existence of infinite stacks (that can be <code>pop</code>ed forever, each time yielding a different state) or circular stacks (that return to the same state after a finite number of <code>pop</code>s). In particular, they do not exclude states <i>s</i> such that <code>pop</code>(<i>s</i>) = <i>s</i> or <code>push</code>(<i>s</i>,<i>x</i>) = <i>s</i> for some <i>x</i>. However, since one cannot obtain such stack states with the given operations, they are assumed "not to exist".</p>
<h2><span class="mw-headline" id="Advantages_of_abstract_data_typing">Advantages of abstract data typing</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=10" title="Edit section: Advantages of abstract data typing">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table class="metadata plainlinks ambox ambox-content ambox-Refimprove" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px;"><a href="http://en.wikipedia.org/wiki/File:Question_book-new.svg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x" /></a></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This section <b>needs additional citations for <a href="http://en.wikipedia.org/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit">improve this article</a> by <a href="http://en.wikipedia.org/wiki/Help:Introduction_to_referencing/1" title="Help:Introduction to referencing/1">adding citations to reliable sources</a>. Unsourced material may be challenged and removed.</span> <small><i>(May 2011)</i></small></span></td>
</tr>
</table>
<ul>
<li>Encapsulation</li>
</ul>
<p><a href="http://en.wikipedia.org/wiki/Abstraction_(computer_science)" title="Abstraction (computer science)">Abstraction</a> provides a promise that any implementation of the ADT has certain properties and abilities; knowing these is all that is required to make use of an ADT object. The user does not need any technical knowledge of how the implementation works to use the ADT. In this way, the implementation may be complex but will be encapsulated in a simple interface when it is actually used.</p>
<ul>
<li>Localization of change</li>
</ul>
<p>Code that uses an ADT object will not need to be edited if the implementation of the ADT is changed. Since any changes to the implementation must still comply with the interface, and since code using an ADT may only refer to properties and abilities specified in the interface, changes may be made to the implementation without requiring any changes in code where the ADT is used.</p>
<ul>
<li>Flexibility</li>
</ul>
<p>Different implementations of an ADT, having all the same properties and abilities, are equivalent and may be used somewhat interchangeably in code that uses the ADT. This gives a great deal of flexibility when using ADT objects in different situations. For example, different implementations of an ADT may be more efficient in different situations; it is possible to use each in the situation where they are preferable, thus increasing overall efficiency.</p>
<h2><span class="mw-headline" id="Typical_operations">Typical operations</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=11" title="Edit section: Typical operations">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Some operations that are often specified for ADTs (possibly under other names) are</p>
<ul>
<li><code>compare</code>(<i>s</i>,<i>t</i>), that tests whether two structures are equivalent in some sense;</li>
<li><code>hash</code>(<i>s</i>), that computes some standard <a href="Hash_function.html" title="Hash function">hash function</a> from the instance's state;</li>
<li><code>print</code>(<i>s</i>) or <code>show</code>(<i>s</i>), that produces a human-readable representation of the structure's state.</li>
</ul>
<p>In imperative-style ADT definitions, one often finds also</p>
<ul>
<li><code>create</code>(), that yields a new instance of the ADT;</li>
<li><code>initialize</code>(<i>s</i>), that prepares a newly created instance <i>s</i> for further operations, or resets it to some "initial state";</li>
<li><code>copy</code>(<i>s</i>,<i>t</i>), that puts instance <i>s</i> in a state equivalent to that of <i>t</i>;</li>
<li><code>clone</code>(<i>t</i>), that performs <i>s</i> ← <code>new</code>(), <code>copy</code>(<i>s</i>,<i>t</i>), and returns <i>s</i>;</li>
<li><code>free</code>(<i>s</i>) or <code>destroy</code>(<i>s</i>), that reclaims the memory and other resources used by <i>s</i>;</li>
</ul>
<p>The <code>free</code> operation is not normally relevant or meaningful, since ADTs are theoretical entities that do not "use memory". However, it may be necessary when one needs to analyze the storage used by an algorithm that uses the ADT. In that case one needs additional axioms that specify how much memory each ADT instance uses, as a function of its state, and how much of it is returned to the pool by <code>free</code>.</p>
<h2><span class="mw-headline" id="Examples">Examples</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=12" title="Edit section: Examples">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Some common ADTs, which have proved useful in a great variety of applications, are</p>
<div style="-moz-column-count:4; column-count:4;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Container_(data_structure)" title="Container (data structure)" class="mw-redirect">Container</a></li>
<li><a href="http://en.wikipedia.org/wiki/Deque" title="Deque" class="mw-redirect">Deque</a></li>
<li><a href="http://en.wikipedia.org/wiki/List_(computing)" title="List (computing)" class="mw-redirect">List</a></li>
<li><a href="Associative_array.html" title="Associative array">Map</a></li>
<li><a href="Multimap.html" title="Multimap">Multimap</a></li>
<li><a href="Set_(abstract_data_type).html#Multiset" title="Set (abstract data type)">Multiset</a></li>
<li><a href="Priority_queue.html" title="Priority queue">Priority queue</a></li>
<li><a href="Queue_(data_structure).html" title="Queue (data structure)" class="mw-redirect">Queue</a></li>
<li><a href="Set_(abstract_data_type).html" title="Set (abstract data type)">Set</a></li>
<li><a href="Stack_(data_structure).html" title="Stack (data structure)" class="mw-redirect">Stack</a></li>
<li><a href="http://en.wikipedia.org/wiki/Tree_(computer_science)" title="Tree (computer science)" class="mw-redirect">Tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Graph_(data_structure)" title="Graph (data structure)" class="mw-redirect">Graph</a></li>
</ul>
</div>
<p>Each of these ADTs may be defined in many ways and variants, not necessarily equivalent. For example, a stack ADT may or may not have a <code>count</code> operation that tells how many items have been pushed and not yet popped. This choice makes a difference not only for its clients but also for the implementation.</p>
<h2><span class="mw-headline" id="Implementation">Implementation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=13" title="Edit section: Implementation">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Implementing an ADT means providing one <a href="Subroutine.html" title="Subroutine">procedure or function</a> for each abstract operation. The ADT instances are represented by some concrete <a href="Data_structure.html" title="Data structure">data structure</a> that is manipulated by those procedures, according to the ADT's specifications.</p>
<p>Usually there are many ways to implement the same ADT, using several different concrete data structures. Thus, for example, an abstract stack can be implemented by a <a href="Linked_list.html" title="Linked list">linked list</a> or by an <a href="Array_data_structure.html" title="Array data structure">array</a>.</p>
<p>An ADT implementation is often packaged as one or more <a href="http://en.wikipedia.org/wiki/Module_(programming)" title="Module (programming)" class="mw-redirect">modules</a>, whose interface contains only the signature (number and types of the parameters and results) of the operations. The implementation of the module — namely, the bodies of the procedures and the concrete data structure used — can then be hidden from most clients of the module. This makes it possible to change the implementation without affecting the clients.</p>
<p>When implementing an ADT, each instance (in imperative-style definitions) or each state (in functional-style definitions) is usually represented by a <a href="http://en.wikipedia.org/wiki/Handle_(computing)" title="Handle (computing)">handle</a> of some sort.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3"><span>[</span>3<span>]</span></a></sup></p>
<p>Modern object-oriented languages, such as <a href="C%2b%2b.html" title="C++">C++</a> and <a href="http://en.wikipedia.org/wiki/Java_programming_language" title="Java programming language" class="mw-redirect">Java</a>, support a form of abstract data types. When a class is used as a type, it is an abstract type that refers to a hidden representation. In this model an ADT is typically implemented as a <a href="http://en.wikipedia.org/wiki/Class_(computer_science)" title="Class (computer science)" class="mw-redirect">class</a>, and each instance of the ADT is usually an <a href="http://en.wikipedia.org/wiki/Object_(computer_science)" title="Object (computer science)">object</a> of that class. The module's interface typically declares the constructors as ordinary procedures, and most of the other ADT operations as <a href="http://en.wikipedia.org/wiki/Method_(computer_science)" title="Method (computer science)" class="mw-redirect">methods</a> of that class. However, such an approach does not easily encapsulate multiple representational variants found in an ADT. It also can undermine the extensibility of object-oriented programs. In a pure object-oriented program that uses interfaces as types, types refer to behaviors not representations.</p>
<h3><span class="mw-headline" id="Example:_implementation_of_the_stack_ADT">Example: implementation of the stack ADT</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=14" title="Edit section: Example: implementation of the stack ADT">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>As an example, here is an implementation of the stack ADT above in the C programming language.</p>
<p><b>Imperative-style interface</b></p>
<p>An imperative-style interface might be:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cpp source-cpp">
<pre class="de1">
<span class="kw4">typedef</span> <span class="kw4">struct</span> stack_Rep stack_Rep<span class="sy4">;</span>        <span class="coMULTI">/* Type: instance representation (an opaque record). */</span>
<span class="kw4">typedef</span> stack_Rep <span class="sy2">*</span>stack_T<span class="sy4">;</span>                <span class="coMULTI">/* Type: handle to a stack instance (an opaque pointer). */</span>
<span class="kw4">typedef</span> <span class="kw4">void</span> <span class="sy2">*</span>stack_Item<span class="sy4">;</span>                  <span class="coMULTI">/* Type: value that can be stored in stack (arbitrary address). */</span>
 
stack_T stack_create<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span><span class="sy4">;</span>                <span class="coMULTI">/* Create new stack instance, initially empty. */</span>
<span class="kw4">void</span> stack_push<span class="br0">(</span>stack_T s, stack_Item e<span class="br0">)</span><span class="sy4">;</span>  <span class="coMULTI">/* Add an item at the top of the stack. */</span>
stack_Item stack_pop<span class="br0">(</span>stack_T s<span class="br0">)</span><span class="sy4">;</span>           <span class="coMULTI">/* Remove the top item from the stack and return it . */</span>
<span class="kw4">int</span> stack_empty<span class="br0">(</span>stack_T ts<span class="br0">)</span><span class="sy4">;</span>               <span class="coMULTI">/* Check whether stack is empty. */</span>
</pre></div>
</div>
<p>This implementation could be used in the following manner:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cpp source-cpp">
<pre class="de1">
<span class="co2">#include &lt;stack.h&gt;            /* Include the stack interface. */</span>
stack_T t <span class="sy1">=</span> stack_create<span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span>   <span class="coMULTI">/* Create a stack instance. */</span>
<span class="kw4">int</span> foo <span class="sy1">=</span> <span class="nu0">17</span><span class="sy4">;</span>                 <span class="coMULTI">/* An arbitrary datum. */</span>
stack_push<span class="br0">(</span>t, <span class="sy3">&amp;</span>foo<span class="br0">)</span><span class="sy4">;</span>          <span class="coMULTI">/* Push the address of 'foo' onto the stack. */</span>
…
<span class="kw4">void</span> <span class="sy2">*</span>e <span class="sy1">=</span> stack_pop<span class="br0">(</span>t<span class="br0">)</span><span class="sy4">;</span>       <span class="coMULTI">/* Get the top item and delete it from the stack. */</span>
<span class="kw1">if</span> <span class="br0">(</span>stack_empty<span class="br0">(</span>t<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span> … <span class="br0">}</span>     <span class="coMULTI">/* Do something if stack is empty. */</span>
…
</pre></div>
</div>
<p>This interface can be implemented in many ways. The implementation may be arbitrarily inefficient, since the formal definition of the ADT, above, does not specify how much space the stack may use, nor how long each operation should take. It also does not specify whether the stack state <i>t</i> continues to exist after a call <i>s</i> ← <code>pop</code>(<i>t</i>).</p>
<p>In practice the formal definition should specify that the space is proportional to the number of items pushed and not yet popped; and that every one of the operations above must finish in a constant amount of time, independently of that number. To comply with these additional specifications, the implementation could use a linked list, or an array (with dynamic resizing) together with two integers (an item count and the array size)</p>
<h4><span class="mw-headline" id="Functional-style_interface">Functional-style interface</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=15" title="Edit section: Functional-style interface">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>Functional-style ADT definitions are more appropriate for functional programming languages, and vice-versa. However, one can provide a functional style interface even in an imperative language like C. For example:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cpp source-cpp">
<pre class="de1">
<span class="kw4">typedef</span> <span class="kw4">struct</span> stack_Rep stack_Rep<span class="sy4">;</span>          <span class="coMULTI">/* Type: stack state representation (an opaque record). */</span>
<span class="kw4">typedef</span> stack_Rep <span class="sy2">*</span>stack_T<span class="sy4">;</span>                  <span class="coMULTI">/* Type: handle to a stack state (an opaque pointer). */</span>
<span class="kw4">typedef</span> <span class="kw4">void</span> <span class="sy2">*</span>stack_Item<span class="sy4">;</span>                    <span class="coMULTI">/* Type: item (arbitrary address). */</span>
 
stack_T stack_empty<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span><span class="sy4">;</span>                   <span class="coMULTI">/* Returns the empty stack state. */</span>
stack_T stack_push<span class="br0">(</span>stack_T s, stack_Item x<span class="br0">)</span><span class="sy4">;</span> <span class="coMULTI">/* Adds x at the top of s, returns the resulting state. */</span>
stack_Item stack_top<span class="br0">(</span>stack_T s<span class="br0">)</span><span class="sy4">;</span>             <span class="coMULTI">/* Returns the item currently at the top of s. */</span>
stack_T stack_pop<span class="br0">(</span>stack_T s<span class="br0">)</span><span class="sy4">;</span>                <span class="coMULTI">/* Remove the top item from s, returns the resulting state. */</span>
</pre></div>
</div>
<p>The main problem is that C lacks garbage collection, and this makes this style of programming impractical; moreover, memory allocation routines in C are slower than allocation in a typical garbage collector, thus the performance impact of so many allocations is even greater.</p>
<h3><span class="mw-headline" id="ADT_libraries">ADT libraries</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=16" title="Edit section: ADT libraries">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Many modern programming languages, such as C++ and Java, come with standard libraries that implement several common ADTs, such as those listed above.</p>
<h3><span class="mw-headline" id="Built-in_abstract_data_types">Built-in abstract data types</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=17" title="Edit section: Built-in abstract data types">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The specification of some programming languages is intentionally vague about the representation of certain <a href="http://en.wikipedia.org/w/index.php?title=Built-in_data_type&amp;action=edit&amp;redlink=1" class="new" title="Built-in data type (page does not exist)">built-in data types</a>, defining only the operations that can be done on them. Therefore, those types can be viewed as "built-in ADTs". Examples are the arrays in many scripting languages, such as <a href="Awk-2.html" title="Awk" class="mw-redirect">Awk</a>, <a href="http://en.wikipedia.org/wiki/Lua_(programming_language)" title="Lua (programming language)">Lua</a>, and <a href="Perl.html" title="Perl">Perl</a>, which can be regarded as an implementation of the Map or Table ADT.</p>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=18" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Initial_algebra" title="Initial algebra">Initial algebra</a></li>
<li><a href="http://en.wikipedia.org/wiki/Concept_(generic_programming)" title="Concept (generic programming)">Concept (generic programming)</a></li>
<li><a href="http://en.wikipedia.org/wiki/Design_by_contract" title="Design by contract">Design by contract</a></li>
<li><a href="Formal_methods.html" title="Formal methods">Formal methods</a></li>
<li><a href="http://en.wikipedia.org/wiki/Functional_specification" title="Functional specification">Functional specification</a></li>
<li><a href="http://en.wikipedia.org/wiki/Liskov_substitution_principle" title="Liskov substitution principle">Liskov substitution principle</a></li>
<li><a href="Object-oriented_programming.html" title="Object-oriented programming">Object-oriented programming</a></li>
<li><a href="Type_system.html" title="Type system">Type system</a></li>
<li><a href="Type_theory.html" title="Type theory">Type theory</a></li>
<li><a href="http://en.wikipedia.org/wiki/Algebraic_data_type" title="Algebraic data type">Algebraic data type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Generalized_algebraic_data_type" title="Generalized algebraic data type">Generalized algebraic data type</a></li>
</ul>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=19" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-liskov-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-liskov_1-0">^</a></b></span> <span class="reference-text"><a href="http://en.wikipedia.org/wiki/Barbara_Liskov" title="Barbara Liskov">Barbara Liskov</a>, Programming with Abstract Data Types, in Proceedings of the ACM SIGPLAN Symposium on Very High Level Languages, pp. 50--59, 1974, Santa Monica, California</span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><span class="citation book">Rudolf Lidl (2004). <i>Abstract Algebra</i>. Springer. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/81-8128-149-7" title="Special:BookSources/81-8128-149-7">81-8128-149-7</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAbstract+data+type&amp;rft.aulast=Rudolf+Lidl&amp;rft.au=Rudolf+Lidl&amp;rft.btitle=Abstract+Algebra&amp;rft.date=2004&amp;rft.genre=book&amp;rft.isbn=81-8128-149-7&amp;rft.pub=Springer&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span>, Chapter 7,section 40.</span></li>
<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text"><span class="citation book">Robert Sedgewick (1998). <i>Algorithms in C</i>. Addison/Wesley. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0-201-31452-5" title="Special:BookSources/0-201-31452-5">0-201-31452-5</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAbstract+data+type&amp;rft.aulast=Robert+Sedgewick&amp;rft.au=Robert+Sedgewick&amp;rft.btitle=Algorithms+in+C&amp;rft.date=1998&amp;rft.genre=book&amp;rft.isbn=0-201-31452-5&amp;rft.pub=Addison%2FWesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span>, definition 4.4.</span></li>
</ol>
</div>
<h2><span class="mw-headline" id="Further">Further</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=20" title="Edit section: Further">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><span class="citation journal"><a href="http://en.wikipedia.org/wiki/John_C._Mitchell" title="John C. Mitchell">Mitchell, John C.</a>; <a href="http://en.wikipedia.org/wiki/Gordon_Plotkin" title="Gordon Plotkin">Plotkin, Gordon</a> (July 1988). <a rel="nofollow" class="external text" href="http://theory.stanford.edu/~jcm/papers/mitch-plotkin-88.pdf">"Abstract Types Have Existential Type"</a>. <i>ACM Transactions on Programming Languages and Systems</i> <b>10</b> (3).</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AAbstract+data+type&amp;rft.atitle=Abstract+Types+Have+Existential+Type&amp;rft.aufirst=John+C.&amp;rft.aulast=Mitchell&amp;rft.au=Mitchell%2C+John+C.&amp;rft.au=Plotkin%2C+Gordon&amp;rft.date=July+1988&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Ftheory.stanford.edu%2F~jcm%2Fpapers%2Fmitch-plotkin-88.pdf&amp;rft.issue=3&amp;rft.jtitle=ACM+Transactions+on+Programming+Languages+and+Systems&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=10" class="Z3988"><span style="display:none;">&#160;</span></span></li>
</ul>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit&amp;section=21" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a rel="nofollow" class="external text" href="http://www.nist.gov/dads/HTML/abstractDataType.html">Abstract data type</a> in <a href="NIST.html" title="NIST" class="mw-redirect">NIST</a> Dictionary of Algorithms and Data Structures</li>
<li><a href="http://en.wikipedia.org/wiki/Walls_and_Mirrors" title="Walls and Mirrors">Walls and Mirrors</a>, the classic textbook</li>
</ul>
<table cellspacing="0" class="navbox" style="border-spacing:0;">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks hlist collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;">
<tr>
<th scope="col" class="navbox-title" colspan="2">
<div class="plainlinks hlist navbar mini">
<ul>
<li class="nv-view"><a href="http://en.wikipedia.org/wiki/Template:Data_structures" title="Template:Data structures"><span title="View this template" style=";;background:none transparent;border:none;;">v</span></a></li>
<li class="nv-talk"><a href="http://en.wikipedia.org/wiki/Template_talk:Data_structures" title="Template talk:Data structures"><span title="Discuss this template" style=";;background:none transparent;border:none;;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Data_structures&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;;">e</span></a></li>
</ul>
</div>
<div style="font-size:110%;"><a href="Data_structure.html" title="Data structure">Data structures</a></div>
</th>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Types</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Collection_(abstract_data_type).html" title="Collection (abstract data type)">Collection</a></li>
<li><a href="Container_(abstract_data_type).html" title="Container (abstract data type)">Container</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><strong class="selflink">Abstract</strong></th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Associative_array.html" title="Associative array">Associative array</a></li>
<li><a href="Double-ended_priority_queue.html" title="Double-ended priority queue">Double-ended priority queue</a></li>
<li><a href="Double-ended_queue.html" title="Double-ended queue">Double-ended queue</a></li>
<li><a href="http://en.wikipedia.org/wiki/List_(abstract_data_type)" title="List (abstract data type)">List</a></li>
<li><a href="Multimap.html" title="Multimap">Multimap</a></li>
<li><a href="Priority_queue.html" title="Priority queue">Priority queue</a></li>
<li><a href="Queue_(abstract_data_type).html" title="Queue (abstract data type)">Queue</a></li>
<li><a href="Set_(abstract_data_type).html" title="Set (abstract data type)">Set</a>
<ul>
<li><a href="Set_(abstract_data_type).html#Multiset" title="Set (abstract data type)">multiset</a></li>
</ul>
</li>
<li><a href="Disjoint-set_data_structure.html" title="Disjoint-set data structure">Disjoint Sets</a></li>
<li><a href="Stack_(abstract_data_type).html" title="Stack (abstract data type)">Stack</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Array_data_structure.html" title="Array data structure">Arrays</a></th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Bit_array.html" title="Bit array">Bit array</a></li>
<li><a href="Circular_buffer.html" title="Circular buffer">Circular buffer</a></li>
<li><a href="Dynamic_array.html" title="Dynamic array">Dynamic array</a></li>
<li><a href="Hash_table.html" title="Hash table">Hash table</a></li>
<li><a href="Hashed_array_tree.html" title="Hashed array tree">Hashed array tree</a></li>
<li><a href="Sparse_array.html" title="Sparse array">Sparse array</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Linked_data_structure.html" title="Linked data structure">Linked</a></th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Association_list.html" title="Association list">Association list</a></li>
<li><a href="Linked_list.html" title="Linked list">Linked list</a></li>
<li><a href="Skip_list.html" title="Skip list">Skip list</a></li>
<li><a href="Unrolled_linked_list.html" title="Unrolled linked list">Unrolled linked list</a></li>
<li><a href="XOR_linked_list.html" title="XOR linked list">XOR linked list</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Tree_(data_structure).html" title="Tree (data structure)">Trees</a></th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="B-tree.html" title="B-tree">B-tree</a></li>
<li><a href="Binary_search_tree.html" title="Binary search tree">Binary search tree</a>
<ul>
<li><a href="AA_tree.html" title="AA tree">AA</a></li>
<li><a href="AVL_tree.html" title="AVL tree">AVL</a></li>
<li><a href="Red%e2%80%93black_tree.html" title="Red–black tree">red-black</a></li>
<li><a href="Self-balancing_binary_search_tree.html" title="Self-balancing binary search tree">self-balancing</a></li>
<li><a href="Splay_tree.html" title="Splay tree">splay</a></li>
</ul>
</li>
<li><a href="Heap_(data_structure).html" title="Heap (data structure)">Heap</a>
<ul>
<li><a href="Binary_heap.html" title="Binary heap">binary</a></li>
<li><a href="Binomial_heap.html" title="Binomial heap">binomial</a></li>
<li><a href="Fibonacci_heap.html" title="Fibonacci heap">Fibonacci</a></li>
</ul>
</li>
<li><a href="R-tree.html" title="R-tree">R-tree</a>
<ul>
<li><a href="R__tree.html" title="R* tree">R*</a></li>
<li><a href="R%2b_tree.html" title="R+ tree">R+</a></li>
<li><a href="Hilbert_R-tree.html" title="Hilbert R-tree">Hilbert</a></li>
</ul>
</li>
<li><a href="Trie.html" title="Trie">Trie</a>
<ul>
<li><a href="Hash_tree_(persistent_data_structure).html" title="Hash tree (persistent data structure)">Hash tree</a></li>
</ul>
</li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Graph_(abstract_data_type).html" title="Graph (abstract data type)">Graphs</a></th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Binary_decision_diagram.html" title="Binary decision diagram">Binary decision diagram</a></li>
<li><a href="Directed_acyclic_word_graph.html" title="Directed acyclic word graph">Directed acyclic word graph</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<td class="navbox-abovebelow" colspan="2">
<div>
<ul>
<li><a href="http://en.wikipedia.org/wiki/List_of_data_structures" title="List of data structures">List of data structures</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
</table>
<table cellspacing="0" class="navbox" style="border-spacing:0;">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks hlist collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;">
<tr>
<th scope="col" class="navbox-title" colspan="2">
<div class="plainlinks hlist navbar mini">
<ul>
<li class="nv-view"><a href="http://en.wikipedia.org/wiki/Template:Data_types" title="Template:Data types"><span title="View this template" style=";;background:none transparent;border:none;;">v</span></a></li>
<li class="nv-talk"><a href="http://en.wikipedia.org/wiki/Template_talk:Data_types" title="Template talk:Data types"><span title="Discuss this template" style=";;background:none transparent;border:none;;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Data_types&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;;">e</span></a></li>
</ul>
</div>
<div style="font-size:110%;"><a href="Data_type.html" title="Data type">Data types</a></div>
</th>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Uninterpreted</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Bit.html" title="Bit">Bit</a></li>
<li><a href="Byte.html" title="Byte">Byte</a></li>
<li><a href="http://en.wikipedia.org/wiki/Ternary_numeral_system" title="Ternary numeral system">Trit</a></li>
<li><a href="http://en.wikipedia.org/wiki/Ternary_numeral_system#Tryte" title="Ternary numeral system">Tryte</a></li>
<li><a href="http://en.wikipedia.org/wiki/Word_(computer_architecture)" title="Word (computer architecture)">Word</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Numeric</th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic" title="Arbitrary-precision arithmetic">Bignum</a></li>
<li><a href="http://en.wikipedia.org/wiki/Complex_data_type" title="Complex data type">Complex</a></li>
<li><a href="http://en.wikipedia.org/wiki/Decimal_data_type" title="Decimal data type">Decimal</a></li>
<li><a href="Fixed-point_arithmetic.html" title="Fixed-point arithmetic">Fixed-point</a></li>
<li><a href="Floating_point.html" title="Floating point">Floating-point</a></li>
<li><a href="http://en.wikipedia.org/wiki/Integer_(computer_science)" title="Integer (computer science)">Integer</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Signedness" title="Signedness">signedness</a></li>
</ul>
</li>
<li><a href="http://en.wikipedia.org/wiki/Interval_arithmetic" title="Interval arithmetic">Interval</a></li>
<li><a href="http://en.wikipedia.org/wiki/Rational_data_type" title="Rational data type">Rational</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Plain_text.html" title="Plain text">Text</a></th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Character_(computing).html" title="Character (computing)">Character</a></li>
<li><a href="http://en.wikipedia.org/wiki/String_(computer_science)" title="String (computer science)">String</a>
<ul>
<li><a href="Null-terminated_string.html" title="Null-terminated string">null-terminated</a></li>
</ul>
</li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Pointer_(computer_programming).html" title="Pointer (computer programming)">Pointer</a></th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Memory_address" title="Memory address">Address</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Physical_address" title="Physical address">physical</a></li>
<li><a href="http://en.wikipedia.org/wiki/Virtual_address_space" title="Virtual address space">virtual</a></li>
</ul>
</li>
<li><a href="http://en.wikipedia.org/wiki/Reference_(computer_science)" title="Reference (computer science)">Reference</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="http://en.wikipedia.org/wiki/Composite_data_type" title="Composite data type">Composite</a></th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Algebraic_data_type" title="Algebraic data type">Algebraic data type</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Generalized_algebraic_data_type" title="Generalized algebraic data type">generalized</a></li>
</ul>
</li>
<li><a href="Array_data_type.html" title="Array data type">Array</a></li>
<li><a href="Associative_array.html" title="Associative array">Associative array</a></li>
<li><a href="http://en.wikipedia.org/wiki/Class_(computer_programming)" title="Class (computer programming)">Class</a></li>
<li><a href="http://en.wikipedia.org/wiki/Dependent_type" title="Dependent type">Dependent</a></li>
<li><a href="http://en.wikipedia.org/wiki/Intuitionistic_type_theory#Equality_type" title="Intuitionistic type theory">Equality</a></li>
<li><a href="http://en.wikipedia.org/wiki/Inductive_type" title="Inductive type">Inductive</a></li>
<li><a href="http://en.wikipedia.org/wiki/List_(abstract_data_type)" title="List (abstract data type)">List</a></li>
<li><a href="http://en.wikipedia.org/wiki/Object_(computer_science)" title="Object (computer science)">Object</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Metaobject" title="Metaobject">metaobject</a></li>
</ul>
</li>
<li><a href="http://en.wikipedia.org/wiki/Option_type" title="Option type">Option type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Product_type" title="Product type">Product</a></li>
<li><a href="http://en.wikipedia.org/wiki/Record_(computer_science)" title="Record (computer science)">Record</a></li>
<li><a href="Set_(abstract_data_type).html" title="Set (abstract data type)">Set</a></li>
<li><a href="http://en.wikipedia.org/wiki/Union_type" title="Union type">Union</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Tagged_union" title="Tagged union">tagged</a></li>
</ul>
</li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Other</th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Boolean_data_type" title="Boolean data type">Boolean</a></li>
<li><a href="http://en.wikipedia.org/wiki/Bottom_type" title="Bottom type">Bottom type</a></li>
<li><a href="Container_(abstract_data_type).html" title="Container (abstract data type)">Collection</a></li>
<li><a href="Enumerated_type.html" title="Enumerated type">Enumerated type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Exception_handling" title="Exception handling">Exception</a></li>
<li><a href="http://en.wikipedia.org/wiki/Function_type" title="Function type">Function type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Opaque_data_type" title="Opaque data type">Opaque data type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Recursive_data_type" title="Recursive data type">Recursive data type</a></li>
<li><a href="Semaphore_(programming).html" title="Semaphore (programming)">Semaphore</a></li>
<li><a href="http://en.wikipedia.org/wiki/Stream_(computing)" title="Stream (computing)">Stream</a></li>
<li><a href="http://en.wikipedia.org/wiki/Top_type" title="Top type">Top type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Type_class" title="Type class">Type class</a></li>
<li><a href="http://en.wikipedia.org/wiki/Unit_type" title="Unit type">Unit type</a></li>
<li><a href="Void_type.html" title="Void type">Void</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Related topics</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><strong class="selflink">Abstract data type</strong></li>
<li><a href="Data_structure.html" title="Data structure">Data structure</a></li>
<li><a href="Generic_programming.html" title="Generic programming">Generic</a></li>
<li><a href="http://en.wikipedia.org/wiki/Kind_(type_theory)" title="Kind (type theory)">Kind</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Metaclass" title="Metaclass">metaclass</a></li>
</ul>
</li>
<li><a href="http://en.wikipedia.org/wiki/Parametric_polymorphism" title="Parametric polymorphism">Parametric polymorphism</a></li>
<li><a href="http://en.wikipedia.org/wiki/Primitive_data_type" title="Primitive data type">Primitive data type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Protocol_(object-oriented_programming)" title="Protocol (object-oriented programming)">Protocol</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Interface_(computing)#Software_interfaces_in_object-oriented_languages" title="Interface (computing)">interface</a></li>
</ul>
</li>
<li><a href="http://en.wikipedia.org/wiki/Subtyping" title="Subtyping">Subtyping</a></li>
<li><a href="http://en.wikipedia.org/wiki/Type_constructor" title="Type constructor">Type constructor</a></li>
<li><a href="Type_conversion.html" title="Type conversion">Type conversion</a></li>
<li><a href="Type_system.html" title="Type system">Type system</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Parsed by mw1219
CPU time usage: 0.588 seconds
Real time usage: 0.653 seconds
Preprocessor visited node count: 907/1000000
Preprocessor generated node count: 3060/1500000
Post‐expand include size: 43389/2048000 bytes
Template argument size: 1130/2048000 bytes
Highest expansion depth: 11/40
Expensive parser function count: 9/500
Lua time usage: 0.080/10.000 seconds
Lua memory usage: 1.92 MB/50 MB
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:2349-0!*!0!!en!4!* and timestamp 20140324120853
 -->
<noscript><img src="http://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>								<div class="printfooter">
				Retrieved from "<a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;oldid=597403544">http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;oldid=597403544</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="http://en.wikipedia.org/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="http://en.wikipedia.org/wiki/Category:Abstract_data_types" title="Category:Abstract data types">Abstract data types</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Data_types" title="Category:Data types">Data types</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Type_theory" title="Category:Type theory">Type theory</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="http://en.wikipedia.org/wiki/Category:Articles_needing_additional_references_from_May_2009" title="Category:Articles needing additional references from May 2009">Articles needing additional references from May 2009</a></li><li><a href="http://en.wikipedia.org/wiki/Category:All_articles_needing_additional_references" title="Category:All articles needing additional references">All articles needing additional references</a></li><li><a href="http://en.wikipedia.org/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_unsourced_statements_from_May_2009" title="Category:Articles with unsourced statements from May 2009">Articles with unsourced statements from May 2009</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_needing_additional_references_from_May_2011" title="Category:Articles needing additional references from May 2011">Articles needing additional references from May 2011</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Abstract+data+type&amp;type=signup">Create account</a></li><li id="pt-login"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Abstract+data+type" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Abstract_data_type.html"  title="View the content page [c]" accesskey="c">Article</a></span></li>
					<li  id="ca-talk"><span><a href="http://en.wikipedia.org/wiki/Talk:Abstract_data_type"  title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Abstract_data_type.html" >Read</a></span></li>
					<li id="ca-edit"><span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=edit"  title="You can edit this page. &#10;Please review your changes before saving. [e]" accesskey="e">Edit</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=history"  title="Past versions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="http://en.wikipedia.org/w/index.php" id="searchform">
					<div id="simpleSearch">
					<input type="search" name="search" placeholder="Search" title="Search Wikipedia [f]" accesskey="f" id="searchInput" /><input type="hidden" value="Special:Search" name="title" /><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton" /><input type="submit" name="go" value="Go" title="Go to a page with this exact name if one exists" id="searchButton" class="searchButton" />		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="Main_Page.html"  title="Visit the main page"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="Main_Page.html" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-contents"><a href="http://en.wikipedia.org/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
			<li id="n-featuredcontent"><a href="http://en.wikipedia.org/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li>
			<li id="n-currentevents"><a href="http://en.wikipedia.org/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
			<li id="n-randompage"><a href="http://en.wikipedia.org/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			<li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li>
			<li id="n-shoplink"><a href="http://shop.wikimedia.org/" title="Visit the Wikimedia Shop">Wikimedia Shop</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
	<h3 id='p-interaction-label'>Interaction</h3>
	<div class="body">
		<ul>
			<li id="n-help"><a href="http://en.wikipedia.org/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			<li id="n-aboutsite"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
			<li id="n-portal"><a href="http://en.wikipedia.org/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
			<li id="n-recentchanges"><a href="http://en.wikipedia.org/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-contactpage"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://en.wikipedia.org/wiki/Special:WhatLinksHere/Abstract_data_type" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://en.wikipedia.org/wiki/Special:RecentChangesLinked/Abstract_data_type" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-upload"><a href="http://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li>
			<li id="t-specialpages"><a href="http://en.wikipedia.org/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;oldid=597403544" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;action=info">Page information</a></li>
			<li id="t-wikibase"><a href="http://www.wikidata.org/wiki/Q827335" title="Link to connected data repository item [g]" accesskey="g">Data item</a></li>
<li id="t-cite"><a href="http://en.wikipedia.org/w/index.php?title=Special:Cite&amp;page=Abstract_data_type&amp;id=597403544" title="Information on how to cite this page">Cite this page</a></li>		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
	<h3 id='p-coll-print_export-label'>Print/export</h3>
	<div class="body">
		<ul>
			<li id="coll-create_a_book"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Abstract+data+type">Create a book</a></li>
			<li id="coll-download-as-rl"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Abstract+data+type&amp;oldid=597403544&amp;writer=rl">Download as PDF</a></li>
			<li id="t-print"><a href="http://en.wikipedia.org/w/index.php?title=Abstract_data_type&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
	<h3 id='p-lang-label'>Languages</h3>
	<div class="body">
		<ul>
			<li class="interlanguage-link interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Tipus_abstracte_de_dades" title="Tipus abstracte de dades – Catalan" lang="ca" hreflang="ca">Català</a></li>
			<li class="interlanguage-link interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Abstraktní_datový_typ" title="Abstraktní datový typ – Czech" lang="cs" hreflang="cs">Čeština</a></li>
			<li class="interlanguage-link interwiki-da"><a href="http://da.wikipedia.org/wiki/Abstrakt_datatype" title="Abstrakt datatype – Danish" lang="da" hreflang="da">Dansk</a></li>
			<li class="interlanguage-link interwiki-de"><a href="http://de.wikipedia.org/wiki/Abstrakter_Datentyp" title="Abstrakter Datentyp – German" lang="de" hreflang="de">Deutsch</a></li>
			<li class="interlanguage-link interwiki-el"><a href="http://el.wikipedia.org/wiki/Αφηρημένος_τύπος_δεδομένων" title="Αφηρημένος τύπος δεδομένων – Greek" lang="el" hreflang="el">Ελληνικά</a></li>
			<li class="interlanguage-link interwiki-es"><a href="http://es.wikipedia.org/wiki/Tipo_de_dato_abstracto" title="Tipo de dato abstracto – Spanish" lang="es" hreflang="es">Español</a></li>
			<li class="interlanguage-link interwiki-fa"><a href="http://fa.wikipedia.org/wiki/نوع_داده_انتزاعی" title="نوع داده انتزاعی – Persian" lang="fa" hreflang="fa">فارسی</a></li>
			<li class="interlanguage-link interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Type_abstrait" title="Type abstrait – French" lang="fr" hreflang="fr">Français</a></li>
			<li class="interlanguage-link interwiki-ko"><a href="http://ko.wikipedia.org/wiki/추상적_자료형" title="추상적 자료형 – Korean" lang="ko" hreflang="ko">한국어</a></li>
			<li class="interlanguage-link interwiki-id"><a href="http://id.wikipedia.org/wiki/Tipe_data_abstrak" title="Tipe data abstrak – Indonesian" lang="id" hreflang="id">Bahasa Indonesia</a></li>
			<li class="interlanguage-link interwiki-it"><a href="http://it.wikipedia.org/wiki/Tipo_di_dato_astratto" title="Tipo di dato astratto – Italian" lang="it" hreflang="it">Italiano</a></li>
			<li class="interlanguage-link interwiki-he"><a href="http://he.wikipedia.org/wiki/טיפוס_נתונים_מופשט" title="טיפוס נתונים מופשט – Hebrew" lang="he" hreflang="he">עברית</a></li>
			<li class="interlanguage-link interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Abstraktus_duomenų_tipas" title="Abstraktus duomenų tipas – Lithuanian" lang="lt" hreflang="lt">Lietuvių</a></li>
			<li class="interlanguage-link interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Abstract_datatype" title="Abstract datatype – Dutch" lang="nl" hreflang="nl">Nederlands</a></li>
			<li class="interlanguage-link interwiki-ja"><a href="http://ja.wikipedia.org/wiki/抽象データ型" title="抽象データ型 – Japanese" lang="ja" hreflang="ja">日本語</a></li>
			<li class="interlanguage-link interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Abstrakcyjny_typ_danych" title="Abstrakcyjny typ danych – Polish" lang="pl" hreflang="pl">Polski</a></li>
			<li class="interlanguage-link interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Tipo_Abstrato_de_Dado" title="Tipo Abstrato de Dado – Portuguese" lang="pt" hreflang="pt">Português</a></li>
			<li class="interlanguage-link interwiki-ru"><a href="http://ru.wikipedia.org/wiki/Абстрактный_тип_данных" title="Абстрактный тип данных – Russian" lang="ru" hreflang="ru">Русский</a></li>
			<li class="interlanguage-link interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Abstraktni_podatkovni_tip" title="Abstraktni podatkovni tip – Slovenian" lang="sl" hreflang="sl">Slovenščina</a></li>
			<li class="interlanguage-link interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Abstrakti_tietotyyppi" title="Abstrakti tietotyyppi – Finnish" lang="fi" hreflang="fi">Suomi</a></li>
			<li class="interlanguage-link interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Datatyp#Abstrakta_typer" title="Datatyp – Swedish" lang="sv" hreflang="sv">Svenska</a></li>
			<li class="interlanguage-link interwiki-tl"><a href="http://tl.wikipedia.org/wiki/Tipo_ng_abstraktong_datos" title="Tipo ng abstraktong datos – Tagalog" lang="tl" hreflang="tl">Tagalog</a></li>
			<li class="interlanguage-link interwiki-th"><a href="http://th.wikipedia.org/wiki/แบบชนิดข้อมูลนามธรรม" title="แบบชนิดข้อมูลนามธรรม – Thai" lang="th" hreflang="th">ไทย</a></li>
			<li class="interlanguage-link interwiki-zh"><a href="http://zh.wikipedia.org/wiki/抽象資料型別" title="抽象資料型別 – Chinese" lang="zh" hreflang="zh">中文</a></li>
			<li class="uls-p-lang-dummy"><a href="#"></a></li>
			<li class="wbc-editpage"><a href="http://www.wikidata.org/wiki/Q827335#sitelinks-wikipedia" title="Edit interlanguage links">Edit links</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 27 February 2014 at 18:13.<br /></li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="http://wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="http://wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy.</a> <br/>
Wikipedia® is a registered trademark of the <a href="http://www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="http://en.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a class="external" href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-mobileview"><a href="http://en.m.wikipedia.org/wiki/Abstract_data_type" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<a href="http://wikimediafoundation.org/"><img src="http://bits.wikimedia.org/images/wikimedia-button.png" width="88" height="31" alt="Wikimedia Foundation"/></a>
					</li>
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["ext.cite","mobile.desktop","mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.DRN-wizard","ext.gadget.charinsert","mw.MwEmbedSupport.style","ext.navigationTiming","schema.UniversalLanguageSelector","ext.uls.eventlogger","ext.uls.interlanguage","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served by mw1068 in 0.324 secs. -->
	</body>

<!-- Mirrored from en.wikipedia.org/wiki/Abstract_data_type by HTTrack Website Copier/3.x [XR&CO'2013], Sun, 30 Mar 2014 00:02:10 GMT -->
</html>
