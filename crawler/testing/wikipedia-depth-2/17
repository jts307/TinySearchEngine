http://old-www.cs.dartmouth.edu/~cs50/data/tse/wikipedia/Red%e2%80%93black_tree.html
2
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">

<!-- Mirrored from en.wikipedia.org/wiki/Red–black_tree by HTTrack Website Copier/3.x [XR&CO'2013], Sun, 30 Mar 2014 00:02:12 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="UTF-8" />
<title>Red–black tree - Wikipedia, the free encyclopedia</title>
<meta http-equiv="X-UA-Compatible" content="IE=EDGE" />
<meta name="generator" content="MediaWiki 1.23wmf19" />
<link rel="alternate" href="http://en.wikipedia.org/wiki/android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Red–black_tree" />
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit" />
<link rel="edit" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit" />
<link rel="apple-touch-icon" href="http://bits.wikimedia.org/apple-touch/wikipedia.png" />
<link rel="shortcut icon" href="http://bits.wikimedia.org/favicon/wikipedia.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://en.wikipedia.org/w/opensearch_desc.php" title="Wikipedia (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://en.wikipedia.org/w/api.php?action=rsd" />
<link rel="copyright" href="http://creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="canonical" href="Red%e2%80%93black_tree.html" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cteahouse%7Cext.geshi.local%7Cext.rtlcite%2Cwikihiero%7Cext.uls.nojs%7Cext.visualEditor.viewPageTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.ui.button%7Cskins.common.interface%7Cskins.vector.styles&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: enwiki:resourceloader:filter:minify-css:7:3904d24a08aa08f6a68dc338f9be277e */</style>

<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Red–black_tree","wgTitle":"Red–black tree","wgCurRevisionId":601649214,"wgRevisionId":601649214,"wgArticleId":26397,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Articles needing additional references from October 2012","All articles needing additional references","Articles with unsourced quotes","Vague or ambiguous time from January 2013","Articles lacking in-text citations from July 2013","All articles lacking in-text citations","1972 in computer science","Articles containing proofs","Articles with example C code","Binary trees"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Red–black_tree","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":false,"previewDialog":false,"publish":false,"toc":false},"wgBetaFeaturesFeatures":[],"wgVisualEditor":{"isPageWatched":false,"magnifyClipIconURL":"//bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png","pageLanguageCode":"en","pageLanguageDir":"ltr","svgMaxSize":2048},"wikilove-recipient":"","wikilove-anon":0,"wgGuidedTourHelpGuiderUrl":"Help:Guided tours/guider","wgFlowTermsOfUseEdit":"By saving changes, you agree to our \u003Ca class=\"external text\" href=\"//wikimediafoundation.org/wiki/Terms_of_use\"\u003ETerms of Use\u003C/a\u003E and agree to irrevocably release your text under the \u003Ca rel=\"nofollow\" class=\"external text\" href=\"//creativecommons.org/licenses/by-sa/3.0\"\u003ECC BY-SA 3.0 License\u003C/a\u003E and \u003Ca class=\"external text\" href=\"//en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License\"\u003EGFDL\u003C/a\u003E","wgULSAcceptLanguageList":["en","*"],"wgULSCurrentAutonym":"English","wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgNoticeProject":"wikipedia","wgWikibaseItemId":"Q506496"});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"editfont":"default","editondblclick":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nickname":"","norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"showhiddencats":false,"shownumberswatching":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":4,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,
"wllimit":250,"useeditwarning":1,"prefershttps":1,"flaggedrevssimpleui":1,"flaggedrevsstable":0,"flaggedrevseditdiffs":true,"flaggedrevsviewdiffs":false,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"visualeditor-enable":0,"visualeditor-enable-experimental":0,"visualeditor-betatempdisable":0,"wikilove-enabled":1,"echo-subscriptions-web-page-review":true,"echo-subscriptions-email-page-review":false,"ep_showtoplink":false,"ep_bulkdelorgs":false,"ep_bulkdelcourses":true,"ep_showdyk":true,"echo-subscriptions-web-education-program":true,"echo-subscriptions-email-education-program":false,"echo-notify-show-link":true,"echo-show-alert":true,"echo-email-frequency":0,"echo-email-format":"html","echo-subscriptions-email-system":true,"echo-subscriptions-web-system":true,"echo-subscriptions-email-other":false,"echo-subscriptions-web-other":true,"echo-subscriptions-email-edit-user-talk":false,"echo-subscriptions-web-edit-user-talk":true,"echo-subscriptions-email-reverted":false,
"echo-subscriptions-web-reverted":true,"echo-subscriptions-email-article-linked":false,"echo-subscriptions-web-article-linked":false,"echo-subscriptions-email-mention":false,"echo-subscriptions-web-mention":true,"echo-subscriptions-web-edit-thank":true,"echo-subscriptions-email-edit-thank":false,"echo-subscriptions-web-flow-discussion":true,"echo-subscriptions-email-flow-discussion":false,"gettingstarted-task-toolbar-show-intro":true,"uls-preferences":"","language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"searchNs100":false,"searchNs101":false,"searchNs108":false,
"searchNs109":false,"searchNs118":false,"searchNs119":false,"searchNs446":false,"searchNs447":false,"searchNs710":false,"searchNs711":false,"searchNs828":false,"searchNs829":false,"gadget-teahouse":1,"gadget-ReferenceTooltips":1,"gadget-DRN-wizard":1,"gadget-charinsert":1,"gadget-mySandbox":1,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: enwiki:resourceloader:filter:minify-js:7:868e43d07ede2616d2d1dc3507cd8145 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","ext.centralauth.centralautologin","skins.vector.compactPersonalBar.defaultTracking","ext.visualEditor.viewPageTarget.init","ext.uls.init","ext.uls.interface","wikibase.client.init","ext.centralNotice.bannerController","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #b1b100;}
.c.source-c .kw2 {color: #000000; font-weight: bold;}
.c.source-c .kw3 {color: #000066;}
.c.source-c .kw4 {color: #993333;}
.c.source-c .co1 {color: #666666; font-style: italic;}
.c.source-c .co2 {color: #339933;}
.c.source-c .coMULTI {color: #808080; font-style: italic;}
.c.source-c .es0 {color: #000099; font-weight: bold;}
.c.source-c .es1 {color: #000099; font-weight: bold;}
.c.source-c .es2 {color: #660099; font-weight: bold;}
.c.source-c .es3 {color: #660099; font-weight: bold;}
.c.source-c .es4 {color: #660099; font-weight: bold;}
.c.source-c .es5 {color: #006699; font-weight: bold;}
.c.source-c .br0 {color: #009900;}
.c.source-c .sy0 {color: #339933;}
.c.source-c .st0 {color: #ff0000;}
.c.source-c .nu0 {color: #0000dd;}
.c.source-c .nu6 {color: #208080;}
.c.source-c .nu8 {color: #208080;}
.c.source-c .nu12 {color: #208080;}
.c.source-c .nu16 {color:#800080;}
.c.source-c .nu17 {color:#800080;}
.c.source-c .nu18 {color:#800080;}
.c.source-c .nu19 {color:#800080;}
.c.source-c .me1 {color: #202020;}
.c.source-c .me2 {color: #202020;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><link rel="dns-prefetch" href="http://meta.wikimedia.org/" /><!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/static-1.23wmf19/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Red–black_tree skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<div id="siteNotice"><!-- CentralNotice --></div>
						<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Red–black tree</span></h1>
						<div id="bodyContent">
								<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-navigation">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><table class="metadata plainlinks ambox ambox-content ambox-Refimprove" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px;"><a href="http://en.wikipedia.org/wiki/File:Question_book-new.svg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x" /></a></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This article <b>needs additional citations for <a href="http://en.wikipedia.org/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit">improve this article</a> by <a href="http://en.wikipedia.org/wiki/Help:Introduction_to_referencing/1" title="Help:Introduction to referencing/1">adding citations to reliable sources</a>. Unsourced material may be challenged and removed.</span> <small><i>(October 2012)</i></small></span></td>
</tr>
</table>
<table class="infobox" style="width: 22em">
<tr>
<th colspan="3" style="font-size: 125%; text-align: center;">Red–black tree</th>
</tr>
<tr>
<th><a href="http://en.wikipedia.org/wiki/List_of_data_structures" title="List of data structures">Type</a></th>
<td colspan="2"><a href="Tree_(data_structure).html" title="Tree (data structure)">Tree</a></td>
</tr>
<tr>
<th>Invented</th>
<td colspan="2">1972</td>
</tr>
<tr>
<th>Invented by</th>
<td colspan="2"><a href="http://en.wikipedia.org/wiki/Rudolf_Bayer" title="Rudolf Bayer">Rudolf Bayer</a></td>
</tr>
<tr>
<th colspan="3" class="navbox-abovebelow"><a href="Time_complexity.html" title="Time complexity">Time complexity</a><br />
in <a href="Big_O_notation.html" title="Big O notation">big O notation</a></th>
</tr>
<tr>
<td></td>
<td>Average</td>
<td>Worst case</td>
</tr>
<tr>
<th>Space</th>
<td>O(n)</td>
<td>O(n)</td>
</tr>
<tr>
<th>Search</th>
<td>O(log n)</td>
<td>O(log n)</td>
</tr>
<tr>
<th>Insert</th>
<td>O(log n)</td>
<td>O(log n)</td>
</tr>
<tr>
<th>Delete</th>
<td>O(log n)</td>
<td>O(log n)</td>
</tr>
</table>
<p>A <b>red–black tree</b> is a <a href="Data_structure.html" title="Data structure">data structure</a> which is a type of <a href="Self-balancing_binary_search_tree.html" title="Self-balancing binary search tree">self-balancing binary search tree</a>.</p>
<p>The self-balancing is provided by painting each node with one of two colors (these are typically called 'red' and 'black', hence the name of the trees) in such a way that the resulting painted tree satisfies certain properties that don't allow it to become significantly unbalanced. When the tree is modified, the new tree is subsequently rearranged and repainted to restore the coloring properties. The properties are designed in such a way that this rearranging and recoloring can be performed efficiently.</p>
<p>The balancing of the tree is not perfect but it is good enough to allow it to guarantee searching in <a href="Big-O_notation.html" title="Big-O notation" class="mw-redirect">O</a>(log <i>n</i>) time, where <i>n</i> is the total number of elements in the tree. The insertion, and deletion operations, along with the tree rearrangement and recoloring are also performed in <a href="Big-O_notation.html" title="Big-O notation" class="mw-redirect">O</a>(log <i>n</i>) time.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1"><span>[</span>1<span>]</span></a></sup></p>
<p>Tracking the color of each node requires only 1 bit of information per node because there are only two colors. The tree does not contain any other data specific to its being a red–black tree so its memory footprint is almost identical to a classic (uncolored) binary search tree. In many cases the additional bit of information can be stored at no additional memory cost.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Terminology"><span class="tocnumber">2</span> <span class="toctext">Terminology</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Properties"><span class="tocnumber">3</span> <span class="toctext">Properties</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Analogy_to_B-trees_of_order_4"><span class="tocnumber">4</span> <span class="toctext">Analogy to B-trees of order 4</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Applications_and_related_data_structures"><span class="tocnumber">5</span> <span class="toctext">Applications and related data structures</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#Operations"><span class="tocnumber">6</span> <span class="toctext">Operations</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="#Insertion"><span class="tocnumber">6.1</span> <span class="toctext">Insertion</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Removal"><span class="tocnumber">6.2</span> <span class="toctext">Removal</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="#Proof_of_asymptotic_bounds"><span class="tocnumber">7</span> <span class="toctext">Proof of asymptotic bounds</span></a>
<ul>
<li class="toclevel-2 tocsection-10"><a href="#Insertion_complexity"><span class="tocnumber">7.1</span> <span class="toctext">Insertion complexity</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-11"><a href="#Parallel_algorithms"><span class="tocnumber">8</span> <span class="toctext">Parallel algorithms</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#See_also"><span class="tocnumber">9</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#Notes"><span class="tocnumber">10</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#References"><span class="tocnumber">11</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-15"><a href="#External_links"><span class="tocnumber">12</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="History">History</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=1" title="Edit section: History">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The original data structure was invented in 1972 by <a href="http://en.wikipedia.org/wiki/Rudolf_Bayer" title="Rudolf Bayer">Rudolf Bayer</a><sup id="cite_ref-Bayer72_2-0" class="reference"><a href="#cite_note-Bayer72-2"><span>[</span>2<span>]</span></a></sup> and named "symmetric binary <a href="B-tree.html" title="B-tree">B-tree</a>," but acquired its modern name in a paper in 1978 by <a href="http://en.wikipedia.org/wiki/Leonidas_J._Guibas" title="Leonidas J. Guibas">Leonidas J. Guibas</a> and <a href="http://en.wikipedia.org/wiki/Robert_Sedgewick_(computer_scientist)" title="Robert Sedgewick (computer scientist)">Robert Sedgewick</a> entitled "A Dichromatic Framework for Balanced Trees".<sup id="cite_ref-GS78_3-0" class="reference"><a href="#cite_note-GS78-3"><span>[</span>3<span>]</span></a></sup> The color "red" was chosen because it was the best-looking color produced by the color laser printer available to the authors while working at <a href="http://en.wikipedia.org/wiki/Xerox_PARC" title="Xerox PARC" class="mw-redirect">Xerox PARC</a>.<sup id="cite_ref-Sedgewick12_4-0" class="reference"><a href="#cite_note-Sedgewick12-4"><span>[</span>4<span>]</span></a></sup></p>
<h2><span class="mw-headline" id="Terminology">Terminology</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=2" title="Edit section: Terminology">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>A red–black tree is a special type of <a href="Binary_tree.html" title="Binary tree">binary tree</a>, used in <a href="Computer_science.html" title="Computer science">computer science</a> to organize pieces of comparable <a href="http://en.wikipedia.org/wiki/Data" title="Data">data</a>, such as text fragments or numbers.</p>
<p>The <a href="http://en.wikipedia.org/wiki/Leaf_node" title="Leaf node" class="mw-redirect">leaf nodes</a> of red–black trees do not contain data. These leaves need not be explicit in computer memory—a null child pointer can encode the fact that this child is a leaf—but it simplifies some algorithms for operating on red–black trees if the leaves really are explicit nodes. To save memory, sometimes a single <a href="Sentinel_node.html" title="Sentinel node">sentinel node</a> performs the role of all leaf nodes; all references from <a href="Tree_(data_structure).html#Internal_nodes" title="Tree (data structure)">internal nodes</a> to leaf nodes then point to the sentinel node.</p>
<p>Red–black trees, like all <a href="Binary_search_tree.html" title="Binary search tree">binary search trees</a>, allow efficient <a href="http://en.wikipedia.org/wiki/In-order_traversal" title="In-order traversal" class="mw-redirect">in-order traversal</a> (that is: in the order Left–Root–Right) of their elements. The search-time results from the traversal from root to leaf, and therefore a balanced tree of <i>n</i> nodes, having the least possible tree height, results in O(log <i>n</i>) search time.</p>
<h2><span class="mw-headline" id="Properties">Properties</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=3" title="Edit section: Properties">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="thumb tright">
<div class="thumbinner" style="width:502px;"><a href="http://en.wikipedia.org/wiki/File:Red-black_tree_example.svg" class="image"><img alt="Diagram of binary tree. The black root node has two red children and four black grandchildren. The child nodes of the grandchildren are black nil pointers or red nodes with black nil pointers." src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/66/Red-black_tree_example.svg/500px-Red-black_tree_example.svg.png" width="500" height="241" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/6/66/Red-black_tree_example.svg/750px-Red-black_tree_example.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/6/66/Red-black_tree_example.svg/1000px-Red-black_tree_example.svg.png 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Red-black_tree_example.svg" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
An example of a red–black tree</div>
</div>
</div>
<p>In addition to the requirements imposed on a <a href="Binary_search_tree.html" title="Binary search tree">binary search tree</a> the following must be satisfied by a red–black tree:<sup id="cite_ref-5" class="reference"><a href="#cite_note-5"><span>[</span>5<span>]</span></a></sup></p>
<ol>
<li>A node is either red or black.</li>
<li>The root is black. (This rule is sometimes omitted. Since the root can always be changed from red to black, but not necessarily vice-versa, this rule has little effect on analysis.)</li>
<li>All leaves (NIL) are black. (All leaves are same color as the root.)</li>
<li>Every red node must have two black child nodes.</li>
<li>Every <a href="http://en.wikipedia.org/wiki/Path_(graph_theory)" title="Path (graph theory)">path</a> from a given node to any of its descendant leaves contains the same number of black nodes.</li>
</ol>
<p>These constraints enforce a critical property of red–black trees: that the path from the root to the furthest leaf is no more than twice as long as the path from the root to the nearest leaf. The result is that the tree is roughly height-balanced. Since operations such as inserting, deleting, and finding values require worst-case time proportional to the height of the tree, this theoretical upper bound on the height allows red–black trees to be efficient in the worst case, unlike ordinary <a href="Binary_search_tree.html" title="Binary search tree">binary search trees</a>.</p>
<p>To see why this is guaranteed, it suffices to consider the effect of properties 4 and 5 together. For a red–black tree T, let B be the number of black nodes in property 5. Let the shortest possible path from the root of T to any leaf consist of B black nodes. Longer possible paths may be constructed by inserting red nodes. However, property 4 makes it impossible to insert more than one consecutive red node. Therefore the longest possible path consists of 2B nodes, alternating black and red.</p>
<p>The shortest possible path has all black nodes, and the longest possible path alternates between red and black nodes. Since all maximal paths have the same number of black nodes, by property 5, this shows that no path is more than twice as long as any other path.</p>
<h2><span class="mw-headline" id="Analogy_to_B-trees_of_order_4">Analogy to B-trees of order 4</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=4" title="Edit section: Analogy to B-trees of order 4">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="thumb tright">
<div class="thumbinner" style="width:502px;"><a href="http://en.wikipedia.org/wiki/File:Red-black_tree_example_(B-tree_analogy).svg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/7/72/Red-black_tree_example_(B-tree_analogy).svg/500px-Red-black_tree_example_(B-tree_analogy).svg.png" width="500" height="179" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/72/Red-black_tree_example_%28B-tree_analogy%29.svg/750px-Red-black_tree_example_%28B-tree_analogy%29.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/72/Red-black_tree_example_%28B-tree_analogy%29.svg/1000px-Red-black_tree_example_%28B-tree_analogy%29.svg.png 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Red-black_tree_example_(B-tree_analogy).svg" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
The same red–black tree as in the example above, seen as a B-tree.</div>
</div>
</div>
<p>A red–black tree is similar in structure to a <a href="B-tree.html" title="B-tree">B-tree</a> of order<sup id="cite_ref-6" class="reference"><a href="#cite_note-6"><span>[</span>note 1<span>]</span></a></sup> 4, where each node can contain between 1 and 3 values and (accordingly) between 2 and 4 child pointers. In such a B-tree, each node will contain only one value matching the value in a black node of the red–black tree, with an optional value before and/or after it in the same node, both matching an equivalent red node of the red–black tree.</p>
<p>One way to see this equivalence is to "move up" the red nodes in a graphical representation of the red–black tree, so that they align horizontally with their parent black node, by creating together a horizontal cluster. In the B-tree, or in the modified graphical representation of the red–black tree, all leaf nodes are at the same depth.</p>
<p>The red–black tree is then structurally equivalent to a B-tree of order 4, with a minimum fill factor of 33% of values per cluster with a maximum capacity of 3 values.</p>
<p>This B-tree type is still more general than a red–black tree though, as it allows ambiguity in a red–black tree conversion—multiple red–black trees can be produced from an equivalent B-tree of order 4. If a B-tree cluster contains only 1 value, it is the minimum, black, and has two child pointers. If a cluster contains 3 values, then the central value will be black and each value stored on its sides will be red. If the cluster contains two values, however, either one can become the black node in the red–black tree (and the other one will be red).</p>
<p>So the order-4 B-tree does not maintain which of the values contained in each cluster is the root black tree for the whole cluster and the parent of the other values in the same cluster. Despite this, the operations on red–black trees are more economical in time because you don't have to maintain the vector of values. It may be costly if values are stored directly in each node rather than being stored by reference. B-tree nodes, however, are more economical in space because you don't need to store the color attribute for each node. Instead, you have to know which slot in the cluster vector is used. If values are stored by reference, e.g. objects, null references can be used and so the cluster can be represented by a vector containing 3 slots for value pointers plus 4 slots for child references in the tree. In that case, the B-tree can be more compact in memory, improving data locality.</p>
<p>The same analogy can be made with B-trees with larger orders that can be structurally equivalent to a colored binary tree: you just need more colors. Suppose that you add blue, then the blue–red–black tree defined like red–black trees but with the additional constraint that no two successive nodes in the hierarchy will be blue and all blue nodes will be children of a red node, then it becomes equivalent to a B-tree whose clusters will have at most 7 values in the following colors: blue, red, blue, black, blue, red, blue (For each cluster, there will be at most 1 black node, 2 red nodes, and 4 blue nodes).</p>
<p>For moderate volumes of values, insertions and deletions in a colored binary tree are faster compared to B-trees because colored trees don't attempt to maximize the fill factor of each horizontal cluster of nodes (only the minimum fill factor is guaranteed in colored binary trees, limiting the number of splits or junctions of clusters). B-trees will be faster for performing rotations (because rotations will frequently occur within the same cluster rather than with multiple separate nodes in a colored binary tree). However for storing large volumes, B-trees will be much faster as they will be more compact by grouping several children in the same cluster where they can be accessed locally.</p>
<p>All optimizations possible in B-trees to increase the average fill factors of clusters are possible in the equivalent multicolored binary tree. Notably, maximizing the average fill factor in a structurally equivalent B-tree is the same as reducing the total height of the multicolored tree, by increasing the number of non-black nodes. The worst case occurs when all nodes in a colored binary tree are black, the best case occurs when only a third of them are black (and the other two thirds are red nodes).</p>
<div style="color: black; background: none; margin: 0; overflow: hidden; padding-top: .5em; padding-bottom: .17em; font-size: 132%; font-weight: bold; margin-bottom: .3em; page-break-after: avoid;">Notes</div>
<div class="reflist columns references-column-width" style="-moz-column-width: close; -webkit-column-width: close; column-width: close; list-style-type: decimal;">
<ol class="references">
<li id="cite_note-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-6">^</a></b></span> <span class="reference-text">Using Knuth's definition of order: the maximum number of children</span></li>
</ol>
</div>
<h2><span class="mw-headline" id="Applications_and_related_data_structures">Applications and related data structures</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=5" title="Edit section: Applications and related data structures">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Red–black trees offer worst-case guarantees for insertion time, deletion time, and search time. Not only does this make them valuable in time-sensitive applications such as <a href="http://en.wikipedia.org/wiki/Real-time_computing" title="Real-time computing">real-time applications</a>, but it makes them valuable building blocks in other data structures which provide worst-case guarantees; for example, many data structures used in <a href="Computational_geometry.html" title="Computational geometry">computational geometry</a> can be based on red–black trees, and the <a href="http://en.wikipedia.org/wiki/Completely_Fair_Scheduler" title="Completely Fair Scheduler">Completely Fair Scheduler</a> used in current <a href="Linux.html" title="Linux">Linux</a> kernels uses red–black trees.</p>
<p>The <a href="AVL_tree.html" title="AVL tree">AVL tree</a> is another structure supporting O(log <i>n</i>) search, insertion, and removal. It is more rigidly balanced than red–black trees, leading to slower insertion and removal but faster retrieval. This makes it attractive for data structures that may be built once and loaded without reconstruction, such as language dictionaries (or program dictionaries, such as the opcodes of an assembler or interpreter).</p>
<p>Red–black trees are also particularly valuable in <a href="Functional_programming.html" title="Functional programming">functional programming</a>, where they are one of the most common <a href="Persistent_data_structure.html" title="Persistent data structure">persistent data structures</a>, used to construct <a href="Associative_array.html" title="Associative array">associative arrays</a> and <a href="http://en.wikipedia.org/wiki/Set_(computer_science)" title="Set (computer science)" class="mw-redirect">sets</a> which can retain previous versions after mutations. The persistent version of red–black trees requires O(log <i>n</i>) space for each insertion or deletion, in addition to time.</p>
<p>For every <a href="http://en.wikipedia.org/wiki/2-4_tree" title="2-4 tree" class="mw-redirect">2-4 tree</a>, there are corresponding red–black trees with data elements in the same order. The insertion and deletion operations on 2-4 trees are also equivalent to color-flipping and rotations in red–black trees. This makes 2-4 trees an important tool for understanding the logic behind red–black trees, and this is why many introductory algorithm texts introduce 2-4 trees just before red–black trees, even though 2-4 trees are not often used in practice.</p>
<p>In 2008, <a href="http://en.wikipedia.org/wiki/Robert_Sedgewick_(computer_scientist)" title="Robert Sedgewick (computer scientist)">Sedgewick</a> introduced a simpler version of the red–black tree called the <a href="http://en.wikipedia.org/wiki/Left-leaning_red–black_tree" title="Left-leaning red–black tree">left-leaning red–black tree</a><sup id="cite_ref-cs.princeton.edu_7-0" class="reference"><a href="#cite_note-cs.princeton.edu-7"><span>[</span>6<span>]</span></a></sup> by eliminating a previously unspecified degree of freedom in the implementation. The LLRB maintains an additional invariant that all red links must lean left except during inserts and deletes. Red–black trees can be made isometric to either <a href="http://en.wikipedia.org/wiki/2-3_tree" title="2-3 tree" class="mw-redirect">2-3 trees</a>,<sup id="cite_ref-8" class="reference"><a href="#cite_note-8"><span>[</span>7<span>]</span></a></sup> or 2-4 trees,<sup id="cite_ref-cs.princeton.edu_7-1" class="reference"><a href="#cite_note-cs.princeton.edu-7"><span>[</span>6<span>]</span></a></sup> for any sequence of operations. The 2-4 tree isometry was described in 1978 by Sedgewick.<sup class="noprint Inline-Template" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Quotations" title="Wikipedia:Quotations"><span title="The text near this tag needs citation. (January 2013)">this quote needs a citation</span></a></i>]</sup> With 2-4 trees, the isometry is resolved by a "color flip," corresponding to a split, in which the red color of two children nodes leaves the children and moves to the parent node. The <a href="http://en.wikipedia.org/wiki/Tango_tree" title="Tango tree">tango tree</a>, a type of tree optimized for fast searches, usually<sup class="noprint Inline-Template" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Manual_of_Style/Dates_and_numbers#Chronological_items" title="Wikipedia:Manual of Style/Dates and numbers"><span title="The time period mentioned near this tag is ambiguous. (January 2013)">when?</span></a></i>]</sup> uses red–black trees as part of its data structure.</p>
<h2><span class="mw-headline" id="Operations">Operations</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=6" title="Edit section: Operations">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Read-only operations on a red–black tree require no modification from those used for <a href="Binary_search_tree.html" title="Binary search tree">binary search trees</a>, because every red–black tree is a special case of a simple binary search tree. However, the immediate result of an insertion or removal may violate the properties of a red–black tree. Restoring the red–black properties requires a small number (<a href="Big-O_notation.html" title="Big-O notation" class="mw-redirect">O</a>(log <i>n</i>) or <a href="Amortized_analysis.html" title="Amortized analysis">amortized O(1)</a>) of color changes (which are very quick in practice) and no more than three <a href="http://en.wikipedia.org/wiki/Tree_rotation" title="Tree rotation">tree rotations</a> (two for insertion). Although insert and delete operations are complicated, their times remain O(log <i>n</i>).</p>
<h3><span class="mw-headline" id="Insertion">Insertion</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=7" title="Edit section: Insertion">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Insertion begins by adding the node as any <a href="Binary_search_tree.html#Insertion" title="Binary search tree">binary search tree insertion</a> does and by coloring it red. Whereas in the binary search tree, we always add a leaf, in the red–black tree leaves contain no information, so instead we add a red interior node, with two black leaves, in place of an existing black leaf.</p>
<p>What happens next depends on the color of other nearby nodes. The term <i>uncle node</i> will be used to refer to the sibling of a node's parent, as in human family trees. Note that:</p>
<ul>
<li>property 3 (all leaves are black) always holds.</li>
<li>property 4 (both children of every red node are black) is threatened only by adding a red node, repainting a black node red, or a rotation.</li>
<li>property 5 (all paths from any given node to its leaf nodes contain the same number of black nodes) is threatened only by adding a black node, repainting a red node black (or vice versa), or a rotation.</li>
</ul>
<dl>
<dd><i>Note</i>: The label <b>N</b> will be used to denote the current node (colored red). At the beginning, this is the new node being inserted, but the entire procedure may also be applied recursively to other nodes (see case 3). <b>P</b> will denote <b>N'</b>s parent node, <b>G</b> will denote <b>N'</b>s grandparent, and <b>U</b> will denote <b>N'</b>s uncle. Note that in between some cases, the roles and labels of the nodes are exchanged, but in each case, every label continues to represent the same node it represented at the beginning of the case. Any color shown in the diagram is either assumed in its case or implied by those assumptions. A numbered triangle represents a subtree of unspecified depth. A black circle atop the triangle designates a black root node, otherwise the root node's color is unspecified.</dd>
</dl>
<p>Each case will be demonstrated with example <a href="C_(programming_language).html" title="C (programming language)">C</a> code. The uncle and grandparent nodes can be found by these functions:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">struct</span> node <span class="sy0">*</span>grandparent<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw1">if</span> <span class="br0">(</span><span class="br0">(</span>n <span class="sy0">!=</span> NULL<span class="br0">)</span> <span class="sy0">&amp;&amp;</span> <span class="br0">(</span>n<span class="sy0">-&gt;</span>parent <span class="sy0">!=</span> NULL<span class="br0">)</span><span class="br0">)</span>
  <span class="kw1">return</span> n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>parent<span class="sy0">;</span>
 <span class="kw1">else</span>
  <span class="kw1">return</span> NULL<span class="sy0">;</span>
<span class="br0">}</span>
 
<span class="kw4">struct</span> node <span class="sy0">*</span>uncle<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw4">struct</span> node <span class="sy0">*</span>g <span class="sy0">=</span> grandparent<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
 <span class="kw1">if</span> <span class="br0">(</span>g <span class="sy0">==</span> NULL<span class="br0">)</span>
  <span class="kw1">return</span> NULL<span class="sy0">;</span> <span class="co1">// No grandparent means no uncle</span>
 <span class="kw1">if</span> <span class="br0">(</span>n<span class="sy0">-&gt;</span>parent <span class="sy0">==</span> g<span class="sy0">-&gt;</span>left<span class="br0">)</span>
  <span class="kw1">return</span> g<span class="sy0">-&gt;</span>right<span class="sy0">;</span>
 <span class="kw1">else</span>
  <span class="kw1">return</span> g<span class="sy0">-&gt;</span>left<span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p><b>Case 1:</b> The current node <b>N</b> is at the root of the tree. In this case, it is repainted black to satisfy property 2 (the root is black). Since this adds one black node to every path at once, property 5 (all paths from any given node to its leaf nodes contain the same number of black nodes) is not violated.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">void</span> insert_case1<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw1">if</span> <span class="br0">(</span>n<span class="sy0">-&gt;</span>parent <span class="sy0">==</span> NULL<span class="br0">)</span>
  n<span class="sy0">-&gt;</span>color <span class="sy0">=</span> BLACK<span class="sy0">;</span>
 <span class="kw1">else</span>
  insert_case2<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p><b>Case 2:</b> The current node's parent <b>P</b> is black, so property 4 (both children of every red node are black) is not invalidated. In this case, the tree is still valid. Property 5 (all paths from any given node to its leaf nodes contain the same number of black nodes) is not threatened, because the current node <b>N</b> has two black leaf children, but because <b>N</b> is red, the paths through each of its children have the same number of black nodes as the path through the leaf it replaced, which was black, and so this property remains satisfied.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">void</span> insert_case2<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw1">if</span> <span class="br0">(</span>n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>color <span class="sy0">==</span> BLACK<span class="br0">)</span>
  <span class="kw1">return</span><span class="sy0">;</span> <span class="coMULTI">/* Tree is still valid */</span>
 <span class="kw1">else</span>
  insert_case3<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<dl>
<dd><i>Note:</i> In the following cases it can be assumed that <b>N</b> has a grandparent node <b>G</b>, because its parent <b>P</b> is red, and if it were the root, it would be black. Thus, <b>N</b> also has an uncle node <b>U</b>, although it may be a leaf in cases 4 and 5.</dd>
</dl>
<table>
<tr>
<td>
<div class="floatright"><a href="http://en.wikipedia.org/wiki/File:Red-black_tree_insert_case_3.svg" class="image" title="Diagram of case 3"><img alt="Diagram of case 3" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Red-black_tree_insert_case_3.svg/400px-Red-black_tree_insert_case_3.svg.png" width="400" height="125" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Red-black_tree_insert_case_3.svg/600px-Red-black_tree_insert_case_3.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Red-black_tree_insert_case_3.svg/800px-Red-black_tree_insert_case_3.svg.png 2x" /></a></div>
<p><b>Case 3:</b> If both the parent <b>P</b> and the uncle <b>U</b> are red, then both of them can be repainted black and the grandparent <b>G</b> becomes red (to maintain property 5 (all paths from any given node to its leaf nodes contain the same number of black nodes)). Now, the current red node <b>N</b> has a black parent. Since any path through the parent or uncle must pass through the grandparent, the number of black nodes on these paths has not changed. However, the grandparent <b>G</b> may now violate properties 2 (The root is black) or 4 (Both children of every red node are black) (property 4 possibly being violated since <b>G</b> may have a red parent). To fix this, the entire procedure is recursively performed on <b>G</b> from case 1. Note that this is a tail-recursive call, so it could be rewritten as a loop; since this is the only loop, and any rotations occur after this loop, this proves that a constant number of rotations occur.</p>
</td>
</tr>
</table>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">void</span> insert_case3<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw4">struct</span> node <span class="sy0">*</span>u <span class="sy0">=</span> uncle<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">,</span> <span class="sy0">*</span>g<span class="sy0">;</span>
 
 <span class="kw1">if</span> <span class="br0">(</span><span class="br0">(</span>u <span class="sy0">!=</span> NULL<span class="br0">)</span> <span class="sy0">&amp;&amp;</span> <span class="br0">(</span>u<span class="sy0">-&gt;</span>color <span class="sy0">==</span> RED<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
  n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>color <span class="sy0">=</span> BLACK<span class="sy0">;</span>
  u<span class="sy0">-&gt;</span>color <span class="sy0">=</span> BLACK<span class="sy0">;</span>
  g <span class="sy0">=</span> grandparent<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
  g<span class="sy0">-&gt;</span>color <span class="sy0">=</span> RED<span class="sy0">;</span>
  insert_case1<span class="br0">(</span>g<span class="br0">)</span><span class="sy0">;</span>
 <span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
  insert_case4<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
 <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
</div>
<dl>
<dd><i>Note:</i> In the remaining cases, it is assumed that the parent node <b>P</b> is the left child of its parent. If it is the right child, <i>left</i> and <i>right</i> should be reversed throughout cases 4 and 5. The code samples take care of this.</dd>
</dl>
<table>
<tr>
<td>
<div class="floatright"><a href="http://en.wikipedia.org/wiki/File:Red-black_tree_insert_case_4.svg" class="image" title="Diagram of case 4"><img alt="Diagram of case 4" src="http://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Red-black_tree_insert_case_4.svg/400px-Red-black_tree_insert_case_4.svg.png" width="400" height="133" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/8/89/Red-black_tree_insert_case_4.svg/600px-Red-black_tree_insert_case_4.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/8/89/Red-black_tree_insert_case_4.svg/800px-Red-black_tree_insert_case_4.svg.png 2x" /></a></div>
<p><b>Case 4:</b> The parent <b>P</b> is red but the uncle <b>U</b> is black; also, the current node <b>N</b> is the right child of <b>P</b>, and <b>P</b> in turn is the left child of its parent <b>G</b>. In this case, a <a href="http://en.wikipedia.org/wiki/Tree_rotation" title="Tree rotation">left rotation</a> on <b>P</b> that switches the roles of the current node <b>N</b> and its parent <b>P</b> can be performed; then, the former parent node <b>P</b> is dealt with using case 5 (relabeling <b>N</b> and <b>P</b>) because property 4 (both children of every red node are black) is still violated. The rotation causes some paths (those in the sub-tree labelled "1") to pass through the node <b>N</b> where they did not before. It also causes some paths (those in the sub-tree labelled "3") not to pass through the node <b>P</b> where they did before. However, both of these nodes are red, so property 5 (all paths from any given node to its leaf nodes contain the same number of black nodes) is not violated by the rotation. After this case has been completed, property 4 (both children of every red node are black) is still violated, but now we can resolve this by continuing to case 5.</p>
</td>
</tr>
</table>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">void</span> insert_case4<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw4">struct</span> node <span class="sy0">*</span>g <span class="sy0">=</span> grandparent<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
 
 <span class="kw1">if</span> <span class="br0">(</span><span class="br0">(</span>n <span class="sy0">==</span> n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>right<span class="br0">)</span> <span class="sy0">&amp;&amp;</span> <span class="br0">(</span>n<span class="sy0">-&gt;</span>parent <span class="sy0">==</span> g<span class="sy0">-&gt;</span>left<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
  rotate_left<span class="br0">(</span>n<span class="sy0">-&gt;</span>parent<span class="br0">)</span><span class="sy0">;</span>
 
 <span class="coMULTI">/*
 * rotate_left can be the below because of already having *g =  grandparent(n) 
 *
 * struct node *saved_p=g-&gt;left, *saved_left_n=n-&gt;left;
 * g-&gt;left=n; 
 * n-&gt;left=saved_p;
 * saved_p-&gt;right=saved_left_n;
 * 
 * and modify the parent's nodes properly
 */</span>
 
  n <span class="sy0">=</span> n<span class="sy0">-&gt;</span>left<span class="sy0">;</span> 
 
 <span class="br0">}</span> <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">(</span><span class="br0">(</span>n <span class="sy0">==</span> n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>left<span class="br0">)</span> <span class="sy0">&amp;&amp;</span> <span class="br0">(</span>n<span class="sy0">-&gt;</span>parent <span class="sy0">==</span> g<span class="sy0">-&gt;</span>right<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
  rotate_right<span class="br0">(</span>n<span class="sy0">-&gt;</span>parent<span class="br0">)</span><span class="sy0">;</span>
 
 <span class="coMULTI">/*
 * rotate_right can be the below to take advantage of already having *g =  grandparent(n) 
 *
 * struct node *saved_p=g-&gt;right, *saved_right_n=n-&gt;right;
 * g-&gt;right=n; 
 * n-&gt;right=saved_p;
 * saved_p-&gt;left=saved_right_n;
 * 
 */</span>
 
  n <span class="sy0">=</span> n<span class="sy0">-&gt;</span>right<span class="sy0">;</span> 
 <span class="br0">}</span>
 insert_case5<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<table>
<tr>
<td>
<div class="floatright"><a href="http://en.wikipedia.org/wiki/File:Red-black_tree_insert_case_5.svg" class="image" title="Diagram of case 5"><img alt="Diagram of case 5" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/dc/Red-black_tree_insert_case_5.svg/400px-Red-black_tree_insert_case_5.svg.png" width="400" height="122" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/dc/Red-black_tree_insert_case_5.svg/600px-Red-black_tree_insert_case_5.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/dc/Red-black_tree_insert_case_5.svg/800px-Red-black_tree_insert_case_5.svg.png 2x" /></a></div>
<p><b>Case 5:</b> The parent <b>P</b> is red but the uncle <b>U</b> is black, the current node <b>N</b> is the left child of <b>P</b>, and <b>P</b> is the left child of its parent <b>G</b>. In this case, a <a href="http://en.wikipedia.org/wiki/Tree_rotation" title="Tree rotation">right rotation</a> on <b>G</b> is performed; the result is a tree where the former parent <b>P</b> is now the parent of both the current node <b>N</b> and the former grandparent <b>G</b>. <b>G</b> is known to be black, since its former child <b>P</b> could not have been red otherwise (without violating property 4). Then, the colors of <b>P</b> and <b>G</b> are switched, and the resulting tree satisfies property 4 (both children of every red node are black). Property 5 (all paths from any given node to its leaf nodes contain the same number of black nodes) also remains satisfied, since all paths that went through any of these three nodes went through <b>G</b> before, and now they all go through <b>P</b>. In each case, this is the only black node of the three.</p>
</td>
</tr>
</table>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">void</span> insert_case5<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw4">struct</span> node <span class="sy0">*</span>g <span class="sy0">=</span> grandparent<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
 
 n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>color <span class="sy0">=</span> BLACK<span class="sy0">;</span>
 g<span class="sy0">-&gt;</span>color <span class="sy0">=</span> RED<span class="sy0">;</span>
 <span class="kw1">if</span> <span class="br0">(</span>n <span class="sy0">==</span> n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>left<span class="br0">)</span>
  rotate_right<span class="br0">(</span>g<span class="br0">)</span><span class="sy0">;</span>
 <span class="kw1">else</span>
  rotate_left<span class="br0">(</span>g<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>Note that inserting is actually <a href="http://en.wikipedia.org/wiki/In-place_algorithm" title="In-place algorithm">in-place</a>, since all the calls above use <a href="http://en.wikipedia.org/wiki/Tail_recursion" title="Tail recursion" class="mw-redirect">tail recursion</a>.</p>
<h3><span class="mw-headline" id="Removal">Removal</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=8" title="Edit section: Removal">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>In a regular binary search tree when deleting a node with two non-leaf children, we find either the maximum element in its left subtree (which is the in-order predecessor) or the minimum element in its right subtree (which is the in-order successor) and move its value into the node being deleted (as shown <a href="Binary_search_tree.html#Deletion" title="Binary search tree">here</a>). We then delete the node we copied the value from, which must have fewer than two non-leaf children. (Non-leaf children, rather than all children, are specified here because unlike normal binary search trees, red–black trees can have leaf nodes anywhere, so that all nodes are either internal nodes with two children or leaf nodes with, by definition, zero children. In effect, internal nodes having two leaf children in a red–black tree are like the leaf nodes in a regular binary search tree.) Because merely copying a value does not violate any red–black properties, this reduces to the problem of deleting a node with at most one non-leaf child. Once we have solved that problem, the solution applies equally to the case where the node we originally want to delete has at most one non-leaf child as to the case just considered where it has two non-leaf children.</p>
<p>Therefore, for the remainder of this discussion we address the deletion of a node with at most one non-leaf child. We use the label <b>M</b> to denote the node to be deleted; <b>C</b> will denote a selected child of <b>M</b>, which we will also call "its child". If <b>M</b> does have a non-leaf child, call that its child, <b>C</b>; otherwise, choose either leaf as its child, <b>C</b>.</p>
<p>If <b>M</b> is a red node, we simply replace it with its child <b>C</b>, which must be black by property 4. (This can only occur when <b>M</b> has two leaf children, because if the red node <b>M</b> had a black non-leaf child on one side but just a leaf child on the other side, then the count of black nodes on both sides would be different, thus the tree would violate property 5.) All paths through the deleted node will simply pass through one fewer red node, and both the deleted node's parent and child must be black, so property 3 (all leaves are black) and property 4 (both children of every red node are black) still hold.</p>
<p>Another simple case is when <b>M</b> is black and <b>C</b> is red. Simply removing a black node could break Properties 4 (“Both children of every red node are black”) and 5 (“All paths from any given node to its leaf nodes contain the same number of black nodes”), but if we repaint <b>C</b> black, both of these properties are preserved.</p>
<p>The complex case is when both <b>M</b> and <b>C</b> are black. (This can only occur when deleting a black node which has two leaf children, because if the black node <b>M</b> had a black non-leaf child on one side but just a leaf child on the other side, then the count of black nodes on both sides would be different, thus the tree would have been an invalid red–black tree by violation of property 5.) We begin by replacing <b>M</b> with its child <b>C</b>. We will call (or <i>label</i>—that is, <i>relabel</i>) this child (in its new position) <b>N</b>, and its sibling (its new parent's other child) <b>S</b>. (<b>S</b> was previously the sibling of <b>M</b>.) In the diagrams below, we will also use <b>P</b> for <b>N'</b>s new parent (<b>M'</b>s old parent), <b>S<sub>L</sub></b> for <b>S'</b>s left child, and <b>S<sub>R</sub></b> for <b>S'</b>s right child (<b>S</b> cannot be a leaf because if <b>M</b> and <b>C</b> were black, then <b>P'</b>s one subtree which included <b>M</b> counted two black-height and thus <b>P'</b>s other subtree which includes <b>S</b> must also count two black-height, which cannot be the case if <b>S</b> is a leaf node).</p>
<dl>
<dd><i>Note</i>: In between some cases, we exchange the roles and labels of the nodes, but in each case, every label continues to represent the same node it represented at the beginning of the case. Any color shown in the diagram is either assumed in its case or implied by those assumptions. White represents an unknown color (either red or black).</dd>
</dl>
<p>We will find the sibling using this function:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">struct</span> node <span class="sy0">*</span>sibling<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw1">if</span> <span class="br0">(</span>n <span class="sy0">==</span> n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>left<span class="br0">)</span>
  <span class="kw1">return</span> n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>right<span class="sy0">;</span>
 <span class="kw1">else</span>
  <span class="kw1">return</span> n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>left<span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<dl>
<dd><i>Note</i>: In order that the tree remains well-defined, we need that every null leaf remains a leaf after all transformations (that it will not have any children). If the node we are deleting has a non-leaf (non-null) child <b>N</b>, it is easy to see that the property is satisfied. If, on the other hand, <b>N</b> would be a null leaf, it can be verified from the diagrams (or code) for all the cases that the property is satisfied as well.</dd>
</dl>
<p>We can perform the steps outlined above with the following code, where the function <code>replace_node</code> substitutes <code>child</code> into <code>n</code>'s place in the tree. For convenience, code in this section will assume that null leaves are represented by actual node objects rather than NULL (the code in the <i>Insertion</i> section works with either representation).</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">void</span> delete_one_child<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="coMULTI">/*
  * Precondition: n has at most one non-null child.
  */</span>
 <span class="kw4">struct</span> node <span class="sy0">*</span>child <span class="sy0">=</span> is_leaf<span class="br0">(</span>n<span class="sy0">-&gt;</span>right<span class="br0">)</span> <span class="sy0">?</span> n<span class="sy0">-&gt;</span>left <span class="sy0">:</span> n<span class="sy0">-&gt;</span>right<span class="sy0">;</span>
 
 replace_node<span class="br0">(</span>n<span class="sy0">,</span> child<span class="br0">)</span><span class="sy0">;</span>
 <span class="kw1">if</span> <span class="br0">(</span>n<span class="sy0">-&gt;</span>color <span class="sy0">==</span> BLACK<span class="br0">)</span> <span class="br0">{</span>
  <span class="kw1">if</span> <span class="br0">(</span>child<span class="sy0">-&gt;</span>color <span class="sy0">==</span> RED<span class="br0">)</span>
   child<span class="sy0">-&gt;</span>color <span class="sy0">=</span> BLACK<span class="sy0">;</span>
  <span class="kw1">else</span>
   delete_case1<span class="br0">(</span>child<span class="br0">)</span><span class="sy0">;</span>
 <span class="br0">}</span>
 <span class="kw3">free</span><span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<dl>
<dd><i>Note</i>: If <b>N</b> is a null leaf and we do not want to represent null leaves as actual node objects, we can modify the algorithm by first calling delete_case1() on its parent (the node that we delete, <code>n</code> in the code above) and deleting it afterwards. We can do this because the parent is black, so it behaves in the same way as a null leaf (and is sometimes called a 'phantom' leaf). And we can safely delete it at the end as <code>n</code> will remain a leaf after all operations, as shown above.</dd>
</dl>
<p>If both <b>N</b> and its original parent are black, then deleting this original parent causes paths which proceed through <b>N</b> to have one fewer black node than paths that do not. As this violates property 5 (all paths from any given node to its leaf nodes contain the same number of black nodes), the tree must be rebalanced. There are several cases to consider:</p>
<p><b>Case 1:</b> <b>N</b> is the new root. In this case, we are done. We removed one black node from every path, and the new root is black, so the properties are preserved.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">void</span> delete_case1<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw1">if</span> <span class="br0">(</span>n<span class="sy0">-&gt;</span>parent <span class="sy0">!=</span> NULL<span class="br0">)</span>
  delete_case2<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<dl>
<dd><i>Note</i>: In cases 2, 5, and 6, we assume <b>N</b> is the left child of its parent <b>P</b>. If it is the right child, <i>left</i> and <i>right</i> should be reversed throughout these three cases. Again, the code examples take both cases into account.</dd>
</dl>
<table>
<tr>
<td>
<div class="floatright"><a href="http://en.wikipedia.org/wiki/File:Red-black_tree_delete_case_2_as_svg.svg" class="image" title="Diagram of case 2"><img alt="Diagram of case 2" src="http://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Red-black_tree_delete_case_2_as_svg.svg/337px-Red-black_tree_delete_case_2_as_svg.svg.png" width="337" height="134" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Red-black_tree_delete_case_2_as_svg.svg/506px-Red-black_tree_delete_case_2_as_svg.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Red-black_tree_delete_case_2_as_svg.svg/674px-Red-black_tree_delete_case_2_as_svg.svg.png 2x" /></a></div>
<p><b>Case 2:</b> <b>S</b> is red. In this case we reverse the colors of <b>P</b> and <b>S</b>, and then <a href="http://en.wikipedia.org/wiki/Tree_rotation" title="Tree rotation">rotate</a> left at <b>P</b>, turning <b>S</b> into <b>N'</b>s grandparent. Note that <b>P</b> has to be black as it had a red child. Although all paths still have the same number of black nodes, now <b>N</b> has a black sibling and a red parent, so we can proceed to step 4, 5, or 6. (Its new sibling is black because it was once the child of the red <b>S</b>.) In later cases, we will relabel <b>N'</b>s new sibling as <b>S</b>.</p>
</td>
</tr>
</table>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">void</span> delete_case2<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw4">struct</span> node <span class="sy0">*</span>s <span class="sy0">=</span> sibling<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
 
 <span class="kw1">if</span> <span class="br0">(</span>s<span class="sy0">-&gt;</span>color <span class="sy0">==</span> RED<span class="br0">)</span> <span class="br0">{</span>
  n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>color <span class="sy0">=</span> RED<span class="sy0">;</span>
  s<span class="sy0">-&gt;</span>color <span class="sy0">=</span> BLACK<span class="sy0">;</span>
  <span class="kw1">if</span> <span class="br0">(</span>n <span class="sy0">==</span> n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>left<span class="br0">)</span>
   rotate_left<span class="br0">(</span>n<span class="sy0">-&gt;</span>parent<span class="br0">)</span><span class="sy0">;</span>
  <span class="kw1">else</span>
   rotate_right<span class="br0">(</span>n<span class="sy0">-&gt;</span>parent<span class="br0">)</span><span class="sy0">;</span>
 <span class="br0">}</span>
 delete_case3<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<table>
<tr>
<td>
<div class="floatleft"><a href="http://en.wikipedia.org/wiki/File:Red-black_tree_delete_case_3_as_svg.svg" class="image" title="Diagram of case 3"><img alt="Diagram of case 3" src="http://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Red-black_tree_delete_case_3_as_svg.svg/337px-Red-black_tree_delete_case_3_as_svg.svg.png" width="337" height="134" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Red-black_tree_delete_case_3_as_svg.svg/506px-Red-black_tree_delete_case_3_as_svg.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Red-black_tree_delete_case_3_as_svg.svg/674px-Red-black_tree_delete_case_3_as_svg.svg.png 2x" /></a></div>
<p><b>Case 3:</b> <b>P</b>, <b>S</b>, and <b>S'</b>s children are black. In this case, we simply repaint <b>S</b> red. The result is that all paths passing through <b>S</b>, which are precisely those paths <i>not</i> passing through <b>N</b>, have one less black node. Because deleting <b>N'</b>s original parent made all paths passing through <b>N</b> have one less black node, this evens things up. However, all paths through <b>P</b> now have one fewer black node than paths that do not pass through <b>P</b>, so property 5 (all paths from any given node to its leaf nodes contain the same number of black nodes) is still violated. To correct this, we perform the rebalancing procedure on <b>P</b>, starting at case 1.</p>
</td>
</tr>
</table>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">void</span> delete_case3<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw4">struct</span> node <span class="sy0">*</span>s <span class="sy0">=</span> sibling<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
 
 <span class="kw1">if</span> <span class="br0">(</span><span class="br0">(</span>n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>color <span class="sy0">==</span> BLACK<span class="br0">)</span> <span class="sy0">&amp;&amp;</span>
     <span class="br0">(</span>s<span class="sy0">-&gt;</span>color <span class="sy0">==</span> BLACK<span class="br0">)</span> <span class="sy0">&amp;&amp;</span>
     <span class="br0">(</span>s<span class="sy0">-&gt;</span>left<span class="sy0">-&gt;</span>color <span class="sy0">==</span> BLACK<span class="br0">)</span> <span class="sy0">&amp;&amp;</span>
     <span class="br0">(</span>s<span class="sy0">-&gt;</span>right<span class="sy0">-&gt;</span>color <span class="sy0">==</span> BLACK<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
  s<span class="sy0">-&gt;</span>color <span class="sy0">=</span> RED<span class="sy0">;</span>
  delete_case1<span class="br0">(</span>n<span class="sy0">-&gt;</span>parent<span class="br0">)</span><span class="sy0">;</span>
 <span class="br0">}</span> <span class="kw1">else</span>
  delete_case4<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<table>
<tr>
<td>
<div class="floatright"><a href="http://en.wikipedia.org/wiki/File:Red-black_tree_delete_case_4_as_svg.svg" class="image" title="Diagram of case 4"><img alt="Diagram of case 4" src="http://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/Red-black_tree_delete_case_4_as_svg.svg/337px-Red-black_tree_delete_case_4_as_svg.svg.png" width="337" height="134" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/3/3d/Red-black_tree_delete_case_4_as_svg.svg/506px-Red-black_tree_delete_case_4_as_svg.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/3/3d/Red-black_tree_delete_case_4_as_svg.svg/674px-Red-black_tree_delete_case_4_as_svg.svg.png 2x" /></a></div>
<p><b>Case 4:</b> <b>S</b> and <b>S'</b>s children are black, but <b>P</b> is red. In this case, we simply exchange the colors of <b>S</b> and <b>P</b>. This does not affect the number of black nodes on paths going through <b>S</b>, but it does add one to the number of black nodes on paths going through <b>N</b>, making up for the deleted black node on those paths.</p>
</td>
</tr>
</table>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">void</span> delete_case4<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw4">struct</span> node <span class="sy0">*</span>s <span class="sy0">=</span> sibling<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
 
 <span class="kw1">if</span> <span class="br0">(</span><span class="br0">(</span>n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>color <span class="sy0">==</span> RED<span class="br0">)</span> <span class="sy0">&amp;&amp;</span>
     <span class="br0">(</span>s<span class="sy0">-&gt;</span>color <span class="sy0">==</span> BLACK<span class="br0">)</span> <span class="sy0">&amp;&amp;</span>
     <span class="br0">(</span>s<span class="sy0">-&gt;</span>left<span class="sy0">-&gt;</span>color <span class="sy0">==</span> BLACK<span class="br0">)</span> <span class="sy0">&amp;&amp;</span>
     <span class="br0">(</span>s<span class="sy0">-&gt;</span>right<span class="sy0">-&gt;</span>color <span class="sy0">==</span> BLACK<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span>
  s<span class="sy0">-&gt;</span>color <span class="sy0">=</span> RED<span class="sy0">;</span>
  n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>color <span class="sy0">=</span> BLACK<span class="sy0">;</span>
 <span class="br0">}</span> <span class="kw1">else</span>
  delete_case5<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<table>
<tr>
<td>
<div class="floatleft"><a href="http://en.wikipedia.org/wiki/File:Red-black_tree_delete_case_5_as_svg.svg" class="image" title="Diagram of case 5"><img alt="Diagram of case 5" src="http://upload.wikimedia.org/wikipedia/commons/thumb/3/36/Red-black_tree_delete_case_5_as_svg.svg/243px-Red-black_tree_delete_case_5_as_svg.svg.png" width="243" height="150" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/3/36/Red-black_tree_delete_case_5_as_svg.svg/365px-Red-black_tree_delete_case_5_as_svg.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/3/36/Red-black_tree_delete_case_5_as_svg.svg/486px-Red-black_tree_delete_case_5_as_svg.svg.png 2x" /></a></div>
<p><b>Case 5:</b> <b>S</b> is black, <b>S'</b>s left child is red, <b>S'</b>s right child is black, and <b>N</b> is the left child of its parent. In this case we rotate right at <b>S</b>, so that <b>S'</b>s left child becomes <b>S'</b>s parent and <b>N'</b>s new sibling. We then exchange the colors of <b>S</b> and its new parent. All paths still have the same number of black nodes, but now <b>N</b> has a black sibling whose right child is red, so we fall into case 6. Neither <b>N</b> nor its parent are affected by this transformation. (Again, for case 6, we relabel <b>N'</b>s new sibling as <b>S</b>.)</p>
</td>
</tr>
</table>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">void</span> delete_case5<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw4">struct</span> node <span class="sy0">*</span>s <span class="sy0">=</span> sibling<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
 
 <span class="kw1">if</span>  <span class="br0">(</span>s<span class="sy0">-&gt;</span>color <span class="sy0">==</span> BLACK<span class="br0">)</span> <span class="br0">{</span> <span class="coMULTI">/* this if statement is trivial,
due to case 2 (even though case 2 changed the sibling to a sibling's child,
the sibling's child can't be red, since no red parent can have a red child). */</span>
<span class="coMULTI">/* the following statements just force the red to be on the left of the left of the parent,
   or right of the right, so case six will rotate correctly. */</span>
  <span class="kw1">if</span> <span class="br0">(</span><span class="br0">(</span>n <span class="sy0">==</span> n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>left<span class="br0">)</span> <span class="sy0">&amp;&amp;</span>
      <span class="br0">(</span>s<span class="sy0">-&gt;</span>right<span class="sy0">-&gt;</span>color <span class="sy0">==</span> BLACK<span class="br0">)</span> <span class="sy0">&amp;&amp;</span>
      <span class="br0">(</span>s<span class="sy0">-&gt;</span>left<span class="sy0">-&gt;</span>color <span class="sy0">==</span> RED<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span> <span class="coMULTI">/* this last test is trivial too due to cases 2-4. */</span>
   s<span class="sy0">-&gt;</span>color <span class="sy0">=</span> RED<span class="sy0">;</span>
   s<span class="sy0">-&gt;</span>left<span class="sy0">-&gt;</span>color <span class="sy0">=</span> BLACK<span class="sy0">;</span>
   rotate_right<span class="br0">(</span>s<span class="br0">)</span><span class="sy0">;</span>
  <span class="br0">}</span> <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">(</span><span class="br0">(</span>n <span class="sy0">==</span> n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>right<span class="br0">)</span> <span class="sy0">&amp;&amp;</span>
             <span class="br0">(</span>s<span class="sy0">-&gt;</span>left<span class="sy0">-&gt;</span>color <span class="sy0">==</span> BLACK<span class="br0">)</span> <span class="sy0">&amp;&amp;</span>
             <span class="br0">(</span>s<span class="sy0">-&gt;</span>right<span class="sy0">-&gt;</span>color <span class="sy0">==</span> RED<span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span><span class="coMULTI">/* this last test is trivial too due to cases 2-4. */</span>
   s<span class="sy0">-&gt;</span>color <span class="sy0">=</span> RED<span class="sy0">;</span>
   s<span class="sy0">-&gt;</span>right<span class="sy0">-&gt;</span>color <span class="sy0">=</span> BLACK<span class="sy0">;</span>
   rotate_left<span class="br0">(</span>s<span class="br0">)</span><span class="sy0">;</span>
  <span class="br0">}</span>
 <span class="br0">}</span>
 delete_case6<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<table>
<tr>
<td>
<div class="floatright"><a href="http://en.wikipedia.org/wiki/File:Red-black_tree_delete_case_6_as_svg.svg" class="image" title="Diagram of case 6"><img alt="Diagram of case 6" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Red-black_tree_delete_case_6_as_svg.svg/337px-Red-black_tree_delete_case_6_as_svg.svg.png" width="337" height="138" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/9/99/Red-black_tree_delete_case_6_as_svg.svg/506px-Red-black_tree_delete_case_6_as_svg.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/9/99/Red-black_tree_delete_case_6_as_svg.svg/674px-Red-black_tree_delete_case_6_as_svg.svg.png 2x" /></a></div>
<p><b>Case 6:</b> <b>S</b> is black, <b>S'</b>s right child is red, and <b>N</b> is the left child of its parent <b>P</b>. In this case we rotate left at <b>P</b>, so that <b>S</b> becomes the parent of <b>P</b> and <b>S'</b>s right child. We then exchange the colors of <b>P</b> and <b>S</b>, and make <b>S'</b>s right child black. The subtree still has the same color at its root, so Properties 4 (Both children of every red node are black) and 5 (All paths from any given node to its leaf nodes contain the same number of black nodes) are not violated. However, <b>N</b> now has one additional black ancestor: either <b>P</b> has become black, or it was black and <b>S</b> was added as a black grandparent. Thus, the paths passing through <b>N</b> pass through one additional black node.</p>
<p>Meanwhile, if a path does not go through <b>N</b>, then there are two possibilities:</p>
<ul>
<li>It goes through <b>N'</b>s new sibling. Then, it must go through <b>S</b> and <b>P</b>, both formerly and currently, as they have only exchanged colors and places. Thus the path contains the same number of black nodes.</li>
<li>It goes through <b>N'</b>s new uncle, <b>S'</b>s right child. Then, it formerly went through <b>S</b>, <b>S'</b>s parent, and <b>S'</b>s right child (which was red), but now only goes through <b>S</b>, which has assumed the color of its former parent, and <b>S'</b>s right child, which has changed from red to black (assuming <b>S'</b>s color: black). The net effect is that this path goes through the same number of black nodes.</li>
</ul>
<p>Either way, the number of black nodes on these paths does not change. Thus, we have restored Properties 4 (Both children of every red node are black) and 5 (All paths from any given node to its leaf nodes contain the same number of black nodes). The white node in the diagram can be either red or black, but must refer to the same color both before and after the transformation.</p>
</td>
</tr>
</table>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">void</span> delete_case6<span class="br0">(</span><span class="kw4">struct</span> node <span class="sy0">*</span>n<span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw4">struct</span> node <span class="sy0">*</span>s <span class="sy0">=</span> sibling<span class="br0">(</span>n<span class="br0">)</span><span class="sy0">;</span>
 
 s<span class="sy0">-&gt;</span>color <span class="sy0">=</span> n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>color<span class="sy0">;</span>
 n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>color <span class="sy0">=</span> BLACK<span class="sy0">;</span>
 
 <span class="kw1">if</span> <span class="br0">(</span>n <span class="sy0">==</span> n<span class="sy0">-&gt;</span>parent<span class="sy0">-&gt;</span>left<span class="br0">)</span> <span class="br0">{</span>
  s<span class="sy0">-&gt;</span>right<span class="sy0">-&gt;</span>color <span class="sy0">=</span> BLACK<span class="sy0">;</span>
  rotate_left<span class="br0">(</span>n<span class="sy0">-&gt;</span>parent<span class="br0">)</span><span class="sy0">;</span>
 <span class="br0">}</span> <span class="kw1">else</span> <span class="br0">{</span>
  s<span class="sy0">-&gt;</span>left<span class="sy0">-&gt;</span>color <span class="sy0">=</span> BLACK<span class="sy0">;</span>
  rotate_right<span class="br0">(</span>n<span class="sy0">-&gt;</span>parent<span class="br0">)</span><span class="sy0">;</span>
 <span class="br0">}</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>Again, the function calls all use <a href="http://en.wikipedia.org/wiki/Tail_recursion" title="Tail recursion" class="mw-redirect">tail recursion</a>, so the algorithm is <a href="http://en.wikipedia.org/wiki/In-place_algorithm" title="In-place algorithm">in-place</a>. In the algorithm above, all cases are chained in order, except in delete case 3 where it can recurse to case 1 back to the parent node: this is the only case where an in-place implementation will effectively loop (after only one rotation in case 3).</p>
<p>Additionally, no tail recursion ever occurs on a child node, so the tail recursion loop can only move from a child back to its successive ancestors. No more than O(log <i>n</i>) loops back to case 1 will occur (where <i>n</i> is the total number of nodes in the tree before deletion). If a rotation occurs in case 2 (which is the only possibility of rotation within the loop of cases 1–3), then the parent of the node <b>N</b> becomes red after the rotation and we will exit the loop. Therefore at most one rotation will occur within this loop. Since no more than two additional rotations will occur after exiting the loop, at most three rotations occur in total.</p>
<h2><span class="mw-headline" id="Proof_of_asymptotic_bounds">Proof of asymptotic bounds</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=9" title="Edit section: Proof of asymptotic bounds">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>A red black tree which contains <i>n</i> internal nodes has a height of O(log(n)).</p>
<p>Definitions:</p>
<ul>
<li>h(<i>v</i>) = height of subtree rooted at node <i>v</i></li>
<li>bh(<i>v</i>) = the number of black nodes (not counting <i>v</i> if it is red) from <i>v</i> to any leaf in the subtree (called the black-height).</li>
</ul>
<p><b>Lemma:</b> A subtree rooted at node <i>v</i> has at least <img class="tex" alt="2^{bh(v)}-1" src="http://upload.wikimedia.org/math/0/9/4/094149047bf3aaa925673ef67f0880fe.png" /> internal nodes.</p>
<p>Proof of Lemma (by induction height):</p>
<p>Basis: h(<i>v</i>) = 0</p>
<p>If <i>v</i> has a height of zero then it must be <i>null</i>, therefore bh(<i>v</i>) = 0. So:</p>
<dl>
<dd><img class="tex" alt="
2^{bh(v)}-1 = 2^{0}-1 = 1-1 = 0
" src="http://upload.wikimedia.org/math/d/5/5/d5506bad4c0e0a51b5984ec5036b93f7.png" /></dd>
</dl>
<p>Inductive Step: <i>v</i> such that h(<i>v</i>) = k, has at least <img class="tex" alt="2^{bh(v)}-1" src="http://upload.wikimedia.org/math/0/9/4/094149047bf3aaa925673ef67f0880fe.png" /> internal nodes implies that <img class="tex" alt="v'" src="http://upload.wikimedia.org/math/b/3/a/b3afdc4dc7644ad636e084509b04ddab.png" /> such that h(<img class="tex" alt="v'" src="http://upload.wikimedia.org/math/b/3/a/b3afdc4dc7644ad636e084509b04ddab.png" />) = k+1 has at least <img class="tex" alt="2^{bh(v')}-1" src="http://upload.wikimedia.org/math/2/2/e/22e196e7e9cd1662649c45ffa3fdecc1.png" /> internal nodes.</p>
<p>Since <img class="tex" alt="v'" src="http://upload.wikimedia.org/math/b/3/a/b3afdc4dc7644ad636e084509b04ddab.png" /> has h(<img class="tex" alt="v'" src="http://upload.wikimedia.org/math/b/3/a/b3afdc4dc7644ad636e084509b04ddab.png" />) &gt; 0 it is an internal node. As such it has two children each of which have a black-height of either bh(<img class="tex" alt="v'" src="http://upload.wikimedia.org/math/b/3/a/b3afdc4dc7644ad636e084509b04ddab.png" />) or bh(<img class="tex" alt="v'" src="http://upload.wikimedia.org/math/b/3/a/b3afdc4dc7644ad636e084509b04ddab.png" />)-1 (depending on whether the child is red or black, respectively). By the inductive hypothesis each child has at least <img class="tex" alt="2^{bh(v')-1}-1" src="http://upload.wikimedia.org/math/e/c/e/eceb5c4a4cc92b4f6296d47d755ed755.png" /> internal nodes, so <img class="tex" alt="v'" src="http://upload.wikimedia.org/math/b/3/a/b3afdc4dc7644ad636e084509b04ddab.png" /> has at least:</p>
<dl>
<dd><img class="tex" alt="
2^{bh(v')-1}-1 + 2^{bh(v')-1}-1 + 1 = 2^{bh(v')}-1
" src="http://upload.wikimedia.org/math/5/0/7/507186f210e4ab42aa1b213d0ae895b6.png" /></dd>
</dl>
<p>internal nodes.</p>
<p>Using this lemma we can now show that the height of the tree is logarithmic. Since at least half of the nodes on any path from the root to a leaf are black (property 4 of a red–black tree), the black-height of the root is at least h(root)/2. By the lemma we get:</p>
<dl>
<dd><img class="tex" alt="
n \geq 2^{{h(\text{root}) \over 2}} - 1 \leftrightarrow \; \log_2{(n+1)} \geq {h(\text{root}) \over 2} \leftrightarrow \; h(\text{root}) \leq 2\log_2{(n+1)}.
" src="http://upload.wikimedia.org/math/e/5/c/e5cc954022122cf14c04b677798e49f7.png" /></dd>
</dl>
<p>Therefore the height of the root is O(log(n)).</p>
<h3><span class="mw-headline" id="Insertion_complexity">Insertion complexity</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=10" title="Edit section: Insertion complexity">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>In the tree code there is only one loop where the node of the root of the red–black property that we wish to restore, x, can be moved up the tree by one level at each iteration.</p>
<p>Since the original height of the tree is O(log n), there are O(log n) iterations. So overall the insert routine has O(log n) complexity.</p>
<h2><span class="mw-headline" id="Parallel_algorithms">Parallel algorithms</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=11" title="Edit section: Parallel algorithms">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Parallel algorithms for constructing red–black trees from sorted lists of items can run in constant time or O(loglog n) time, depending on the computer model, if the number of processors available is proportional to the number of items. Fast search, insertion, and deletion parallel algorithms are also known.<sup id="cite_ref-9" class="reference"><a href="#cite_note-9"><span>[</span>8<span>]</span></a></sup></p>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=12" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Tree_data_structure" title="Tree data structure" class="mw-redirect">Tree data structure</a></li>
<li><a href="http://en.wikipedia.org/wiki/Tree_rotation" title="Tree rotation">Tree rotation</a></li>
<li><a href="http://en.wikipedia.org/wiki/Scapegoat_tree" title="Scapegoat tree">Scapegoat tree</a></li>
<li><a href="Splay_tree.html" title="Splay tree">Splay tree</a></li>
<li><a href="AVL_tree.html" title="AVL tree">AVL tree</a></li>
<li><a href="B-tree.html" title="B-tree">B-tree</a> (<a href="http://en.wikipedia.org/wiki/2-3_tree" title="2-3 tree" class="mw-redirect">2-3 tree</a>, <a href="http://en.wikipedia.org/wiki/2-3-4_tree" title="2-3-4 tree" class="mw-redirect">2-3-4 tree</a>, <a href="http://en.wikipedia.org/wiki/B+_tree" title="B+ tree">B+ tree</a>, <a href="http://en.wikipedia.org/wiki/B*-tree" title="B*-tree" class="mw-redirect">B*-tree</a>, <a href="http://en.wikipedia.org/wiki/UB-tree" title="UB-tree">UB-tree</a>)</li>
<li><a href="http://en.wikipedia.org/wiki/T-tree" title="T-tree">T-tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/List_of_data_structures" title="List of data structures">List of data structures</a></li>
</ul>
<h2><span class="mw-headline" id="Notes">Notes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=13" title="Edit section: Notes">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><span class="citation web">John Morris. <a rel="nofollow" class="external text" href="http://www.cs.auckland.ac.nz/~jmor159/PLDS210/red_black.html">"Red–Black Trees"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARed%E2%80%93black+tree&amp;rft.au=John+Morris&amp;rft.aulast=John+Morris&amp;rft.btitle=Red%E2%80%93Black+Trees&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.auckland.ac.nz%2F~jmor159%2FPLDS210%2Fred_black.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-Bayer72-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-Bayer72_2-0">^</a></b></span> <span class="reference-text"><span class="citation journal">Rudolf Bayer (1972). <a rel="nofollow" class="external text" href="http://www.springerlink.com/content/qh51m2014673513j/">"Symmetric binary B-Trees: Data structure and maintenance algorithms"</a>. <i>Acta Informatica</i> <b>1</b> (4): 290–306. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1007%2FBF00289509">10.1007/BF00289509</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARed%E2%80%93black+tree&amp;rft.atitle=Symmetric+binary+B-Trees%3A+Data+structure+and+maintenance+algorithms&amp;rft.aulast=Rudolf+Bayer&amp;rft.au=Rudolf+Bayer&amp;rft.date=1972&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fwww.springerlink.com%2Fcontent%2Fqh51m2014673513j%2F&amp;rft_id=info%3Adoi%2F10.1007%2FBF00289509&amp;rft.issue=4&amp;rft.jtitle=Acta+Informatica&amp;rft.pages=290%E2%80%93306&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=1" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-GS78-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-GS78_3-0">^</a></b></span> <span class="reference-text"><span class="citation conference">Leonidas J. Guibas and Robert Sedgewick (1978). <a rel="nofollow" class="external text" href="http://doi.ieeecomputersociety.org/10.1109/SFCS.1978.3">"A Dichromatic Framework for Balanced Trees"</a>. <i>Proceedings of the 19th Annual Symposium on Foundations of Computer Science</i>. pp.&#160;8–21. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1109%2FSFCS.1978.3">10.1109/SFCS.1978.3</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARed%E2%80%93black+tree&amp;rft.atitle=Proceedings+of+the+19th+Annual+Symposium+on+Foundations+of+Computer+Science&amp;rft.aulast=Leonidas+J.+Guibas+and+Robert+Sedgewick&amp;rft.au=Leonidas+J.+Guibas+and+Robert+Sedgewick&amp;rft.btitle=A+Dichromatic+Framework+for+Balanced+Trees&amp;rft.date=1978&amp;rft.genre=bookitem&amp;rft_id=http%3A%2F%2Fdoi.ieeecomputersociety.org%2F10.1109%2FSFCS.1978.3&amp;rft_id=info%3Adoi%2F10.1109%2FSFCS.1978.3&amp;rft.pages=8%E2%80%9321&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-Sedgewick12-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-Sedgewick12_4-0">^</a></b></span> <span class="reference-text"><span class="citation audio-visual">Robert Sedgewick (2012). <a rel="nofollow" class="external text" href="https://class.coursera.org/algs4partI-002/lecture/50"><i>Red-Black BSTs</i></a>. Coursera. "A lot of people ask why did we use the name red–black. Well, we invented this data structure, this way of looking at balanced trees, at Xerox PARC which was the home of the personal computer and many other innovations that we live with today entering[sic] graphic user interfaces, ethernet and object-oriented programmings[sic] and many other things. But one of the things that was invented there was laser printing and we were very excited to have nearby color laser printer that could print things out in color and out of the colors the red looked the best. So, that’s why we picked the color red to distinguish red links, the types of links, in three nodes. So, that’s an answer to the question for people that have been asking."</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARed%E2%80%93black+tree&amp;rft.btitle=Red-Black+BSTs&amp;rft.date=2012&amp;rft.genre=book&amp;rft_id=https%3A%2F%2Fclass.coursera.org%2Falgs4partI-002%2Flecture%2F50&amp;rft.pub=Coursera&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text"><span class="citation book"><a href="Thomas_H.html" title="Thomas H. Cormen">Cormen, Thomas</a>; <a href="Charles_E-2.html" title="Charles E. Leiserson">Leiserson, Charles</a>; <a href="http://en.wikipedia.org/wiki/Ron_Rivest" title="Ron Rivest">Rivest, Ronald</a>; <a href="Clifford_Stein.html" title="Clifford Stein">Stein, Clifford</a> (2009). "13". <i><a href="Introduction_to_Algorithms.html" title="Introduction to Algorithms">Introduction to Algorithms</a></i> (3rd ed.). <a href="http://en.wikipedia.org/wiki/MIT_Press" title="MIT Press">MIT Press</a>. pp.&#160;308–309. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0-262-03384-8" title="Special:BookSources/978-0-262-03384-8">978-0-262-03384-8</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARed%E2%80%93black+tree&amp;rft.atitle=Introduction+to+Algorithms&amp;rft.au=Cormen%2C+Thomas&amp;rft.aufirst=Thomas&amp;rft.aulast=Cormen&amp;rft.au=Leiserson%2C+Charles&amp;rft.au=Rivest%2C+Ronald&amp;rft.au=Stein%2C+Clifford&amp;rft.btitle=13&amp;rft.date=2009&amp;rft.edition=3rd&amp;rft.genre=bookitem&amp;rft.isbn=978-0-262-03384-8&amp;rft.pages=308%E2%80%93309&amp;rft.pub=MIT+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-cs.princeton.edu-7"><span class="mw-cite-backlink">^ <a href="#cite_ref-cs.princeton.edu_7-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-cs.princeton.edu_7-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.cs.princeton.edu/~rs/talks/LLRB/RedBlack.pdf">http://www.cs.princeton.edu/~rs/talks/LLRB/RedBlack.pdf</a></span></li>
<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://www.cs.princeton.edu/courses/archive/fall08/cos226/lectures/10BalancedTrees-2x2.pdf">http://www.cs.princeton.edu/courses/archive/fall08/cos226/lectures/10BalancedTrees-2x2.pdf</a></span></li>
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text"><span class="citation journal">H. Park and K. Park (2001). <a rel="nofollow" class="external text" href="http://www.sciencedirect.com/science/article/pii/S0304397500002875">"Parallel algorithms for red–black trees"</a>. <i>Theoretical computer science</i> (Elsevier) <b>262</b> (1–2): 415–435. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1016%2FS0304-3975(00)00287-5">10.1016/S0304-3975(00)00287-5</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARed%E2%80%93black+tree&amp;rft.atitle=Parallel+algorithms+for+red%E2%80%93black+trees&amp;rft.au=H.+Park+and+K.+Park&amp;rft.aulast=H.+Park+and+K.+Park&amp;rft.date=2001&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fwww.sciencedirect.com%2Fscience%2Farticle%2Fpii%2FS0304397500002875&amp;rft_id=info%3Adoi%2F10.1016%2FS0304-3975%2800%2900287-5&amp;rft.issue=1%E2%80%932&amp;rft.jtitle=Theoretical+computer+science&amp;rft.pages=415%E2%80%93435&amp;rft.pub=Elsevier&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=262" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
</ol>
</div>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=14" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table class="metadata plainlinks ambox ambox-style ambox-No_footnotes" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px;"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/40px-Text_document_with_red_question_mark.svg.png" width="40" height="40" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/60px-Text_document_with_red_question_mark.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/80px-Text_document_with_red_question_mark.svg.png 2x" /></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This article includes a <a href="http://en.wikipedia.org/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">list of references</a>, related reading or <a href="http://en.wikipedia.org/wiki/Wikipedia:External_links" title="Wikipedia:External links">external links</a>, but <b>its sources remain unclear because it lacks <a href="http://en.wikipedia.org/wiki/Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">inline citations</a></b>. <span class="hide-when-compact">Please <a href="http://en.wikipedia.org/wiki/Wikipedia:WikiProject_Fact_and_Reference_Check" title="Wikipedia:WikiProject Fact and Reference Check">improve</a> this article by introducing more precise citations.</span> <small><i>(July 2013)</i></small></span></td>
</tr>
</table>
<ul>
<li><a rel="nofollow" class="external text" href="http://mathworld.wolfram.com/Red-BlackTree.html">Mathworld: Red–Black Tree</a></li>
<li><a rel="nofollow" class="external text" href="http://www.eli.sdsu.edu/courses/fall95/cs660/notes/RedBlackTree/RedBlack.html#RTFToC2">San Diego State University: CS 660: Red–Black tree notes</a>, by Roger Whitney</li>
<li><a href="Thomas_H.html" title="Thomas H. Cormen">Thomas H. Cormen</a>, <a href="Charles_E-2.html" title="Charles E. Leiserson">Charles E. Leiserson</a>, <a href="Ronald_L.html" title="Ronald L. Rivest" class="mw-redirect">Ronald L. Rivest</a>, and <a href="Clifford_Stein.html" title="Clifford Stein">Clifford Stein</a>. <i><a href="Introduction_to_Algorithms.html" title="Introduction to Algorithms">Introduction to Algorithms</a></i>, Second Edition. MIT Press and McGraw-Hill, 2001. <a href="http://en.wikipedia.org/wiki/Special:BookSources/0262032937" class="internal mw-magiclink-isbn">ISBN 0-262-03293-7</a> . Chapter 13: Red–Black Trees, pp.&#160;273–301.</li>
<li><span class="citation web">Pfaff, Ben (June 2004). <a rel="nofollow" class="external text" href="http://www.stanford.edu/~blp/papers/libavl.pdf">"Performance Analysis of BSTs in System Software"</a> (PDF). <a href="http://en.wikipedia.org/wiki/Stanford_university" title="Stanford university" class="mw-redirect">Stanford University</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARed%E2%80%93black+tree&amp;rft.aufirst=Ben&amp;rft.aulast=Pfaff&amp;rft.au=Pfaff%2C+Ben&amp;rft.btitle=Performance+Analysis+of+BSTs+in+System+Software&amp;rft.date=June+2004&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.stanford.edu%2F~blp%2Fpapers%2Flibavl.pdf&amp;rft.pub=Stanford+University&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation web">Okasaki, Chris. <a rel="nofollow" class="external text" href="http://www.eecs.usma.edu/webs/people/okasaki/jfp99.ps">"Red–Black Trees in a Functional Setting"</a> (PS).</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ARed%E2%80%93black+tree&amp;rft.aufirst=Chris&amp;rft.aulast=Okasaki&amp;rft.au=Okasaki%2C+Chris&amp;rft.btitle=Red%E2%80%93Black+Trees+in+a+Functional+Setting&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.eecs.usma.edu%2Fwebs%2Fpeople%2Fokasaki%2Fjfp99.ps&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
</ul>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit&amp;section=15" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a rel="nofollow" class="external text" href="http://en.literateprograms.org/Red-black_tree_(C)">A complete and working implementation in C</a></li>
<li><a rel="nofollow" class="external text" href="http://www.ece.uc.edu/~franco/C321/html/RedBlack/redblack.html">Red–Black Tree Demonstration</a></li>
<li><a rel="nofollow" class="external text" href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-10-red-black-trees-rotations-insertions-deletions/">OCW MIT Lecture by Prof. Erik Demaine on Red Black Trees</a> -</li>
<li><a rel="nofollow" class="external text" href="https://www.youtube.com/watch?v=_VbTnLV8plU">Binary Search Tree Insertion Visualization</a> on <a href="http://en.wikipedia.org/wiki/YouTube" title="YouTube">YouTube</a> – Visualization of random and pre-sorted data insertions, in elementary binary search trees, and left-leaning red–black trees</li>
</ul>
<table cellspacing="0" class="navbox" style="border-spacing:0;">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;">
<tr>
<th scope="col" class="navbox-title" colspan="2">
<div class="plainlinks hlist navbar mini">
<ul>
<li class="nv-view"><a href="http://en.wikipedia.org/wiki/Template:CS_trees" title="Template:CS trees"><span title="View this template" style=";;background:none transparent;border:none;;">v</span></a></li>
<li class="nv-talk"><a href="http://en.wikipedia.org/wiki/Template_talk:CS_trees" title="Template talk:CS trees"><span title="Discuss this template" style=";;background:none transparent;border:none;;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:CS_trees&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;;">e</span></a></li>
</ul>
</div>
<div style="font-size:110%;"><a href="Tree_(data_structure).html" title="Tree (data structure)">Tree data structures</a></div>
</th>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Binary_tree.html" title="Binary tree">Binary trees</a></th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Binary_search_tree.html" title="Binary search tree">Binary search tree (BST)</a></li>
<li><a href="http://en.wikipedia.org/wiki/Cartesian_tree" title="Cartesian tree">Cartesian tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/MVP_tree" title="MVP tree">MVP tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Top_tree" title="Top tree">Top tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/T-tree" title="T-tree">T-tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Left-child_right-sibling_binary_tree" title="Left-child right-sibling binary tree">Left-child right-sibling binary tree</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Self-balancing_binary_search_tree.html" title="Self-balancing binary search tree">Self-balancing binary search trees</a></th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="AA_tree.html" title="AA tree">AA tree</a></li>
<li><a href="AVL_tree.html" title="AVL tree">AVL tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Left-leaning_red–black_tree" title="Left-leaning red–black tree">LLRB tree</a></li>
<li><strong class="selflink">Red–black tree</strong></li>
<li><a href="http://en.wikipedia.org/wiki/Scapegoat_tree" title="Scapegoat tree">Scapegoat tree</a></li>
<li><a href="Splay_tree.html" title="Splay tree">Splay tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Treap" title="Treap">Treap</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="B-tree.html" title="B-tree">B-trees</a></th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/B+_tree" title="B+ tree">B+ tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/B*-tree" title="B*-tree" class="mw-redirect">B*-tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Bx-tree" title="Bx-tree">B<small><sup>x</sup></small>-tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/UB-tree" title="UB-tree">UB-tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/2–3_tree" title="2–3 tree">2–3 tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/2–3–4_tree" title="2–3–4 tree">2–3–4 tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/(a,b)-tree" title="(a,b)-tree">(a,b)-tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Dancing_tree" title="Dancing tree">Dancing tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/HTree" title="HTree">HTree</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Trie.html" title="Trie">Tries</a></th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Suffix_tree" title="Suffix tree">Suffix tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Radix_tree" title="Radix tree">Radix tree</a></li>
<li><a href="Hash_tree_(persistent_data_structure).html" title="Hash tree (persistent data structure)">Hash tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Ternary_search_tree" title="Ternary search tree">Ternary search tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/X-fast_trie" title="X-fast trie">X-fast trie</a></li>
<li><a href="http://en.wikipedia.org/wiki/Y-fast_trie" title="Y-fast trie">Y-fast trie</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="http://en.wikipedia.org/wiki/Binary_space_partitioning" title="Binary space partitioning">Binary space partitioning (BSP)</a> trees</th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Quadtree" title="Quadtree">Quadtree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Octree" title="Octree">Octree</a></li>
<li><a href="http://en.wikipedia.org/wiki/K-d_tree" title="K-d tree"><i>k</i>-d tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Implicit_k-d_tree" title="Implicit k-d tree">Implicit <i>k</i>-d tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Vantage-point_tree" title="Vantage-point tree">VP tree</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Non-binary trees</th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Exponential_tree" title="Exponential tree">Exponential tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Fusion_tree" title="Fusion tree">Fusion tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Interval_tree" title="Interval tree">Interval tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/PQ_tree" title="PQ tree">PQ tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Range_tree" title="Range tree">Range tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/SPQR_tree" title="SPQR tree">SPQR tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Van_Emde_Boas_tree" title="Van Emde Boas tree">Van Emde Boas tree</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="http://en.wikipedia.org/wiki/Spatial_index" title="Spatial index" class="mw-redirect">Spatial</a> data partitioning trees</th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="R-tree.html" title="R-tree">R-tree</a></li>
<li><a href="R%2b_tree.html" title="R+ tree">R+ tree</a></li>
<li><a href="R__tree.html" title="R* tree">R* tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/X-tree" title="X-tree">X-tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/M-tree" title="M-tree">M-tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Segment_tree" title="Segment tree">Segment tree</a></li>
<li><a href="Hilbert_R-tree.html" title="Hilbert R-tree">Hilbert R-tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Priority_R-tree" title="Priority R-tree">Priority R-tree</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Other trees</th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Heap_(data_structure).html" title="Heap (data structure)">Heap</a></li>
<li><a href="http://en.wikipedia.org/wiki/Hash_calendar" title="Hash calendar">Hash calendar</a></li>
<li><a href="http://en.wikipedia.org/wiki/Merkle_tree" title="Merkle tree">Merkle tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Finger_tree" title="Finger tree">Finger tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Order_statistic_tree" title="Order statistic tree">Order statistic tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Metric_tree" title="Metric tree">Metric tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Cover_tree" title="Cover tree">Cover tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/BK-tree" title="BK-tree">BK-tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Doubly_chained_tree" title="Doubly chained tree">Doubly chained tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/IDistance" title="IDistance">iDistance</a></li>
<li><a href="http://en.wikipedia.org/wiki/Link/cut_tree" title="Link/cut tree">Link/cut tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Fenwick_tree" title="Fenwick tree">Fenwick tree</a></li>
<li><a href="http://en.wikipedia.org/wiki/Log-structured_merge-tree" title="Log-structured merge-tree">Log-structured merge-tree</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
</table>
<table cellspacing="0" class="navbox" style="border-spacing:0;">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks hlist collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;">
<tr>
<th scope="col" class="navbox-title" colspan="2">
<div class="plainlinks hlist navbar mini">
<ul>
<li class="nv-view"><a href="http://en.wikipedia.org/wiki/Template:Data_structures" title="Template:Data structures"><span title="View this template" style=";;background:none transparent;border:none;;">v</span></a></li>
<li class="nv-talk"><a href="http://en.wikipedia.org/wiki/Template_talk:Data_structures" title="Template talk:Data structures"><span title="Discuss this template" style=";;background:none transparent;border:none;;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Data_structures&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;;">e</span></a></li>
</ul>
</div>
<div style="font-size:110%;"><a href="Data_structure.html" title="Data structure">Data structures</a></div>
</th>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Types</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Collection_(abstract_data_type).html" title="Collection (abstract data type)">Collection</a></li>
<li><a href="Container_(abstract_data_type).html" title="Container (abstract data type)">Container</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Abstract_data_type.html" title="Abstract data type">Abstract</a></th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Associative_array.html" title="Associative array">Associative array</a></li>
<li><a href="Double-ended_priority_queue.html" title="Double-ended priority queue">Double-ended priority queue</a></li>
<li><a href="Double-ended_queue.html" title="Double-ended queue">Double-ended queue</a></li>
<li><a href="http://en.wikipedia.org/wiki/List_(abstract_data_type)" title="List (abstract data type)">List</a></li>
<li><a href="Multimap.html" title="Multimap">Multimap</a></li>
<li><a href="Priority_queue.html" title="Priority queue">Priority queue</a></li>
<li><a href="Queue_(abstract_data_type).html" title="Queue (abstract data type)">Queue</a></li>
<li><a href="Set_(abstract_data_type).html" title="Set (abstract data type)">Set</a>
<ul>
<li><a href="Set_(abstract_data_type).html#Multiset" title="Set (abstract data type)">multiset</a></li>
</ul>
</li>
<li><a href="Disjoint-set_data_structure.html" title="Disjoint-set data structure">Disjoint Sets</a></li>
<li><a href="Stack_(abstract_data_type).html" title="Stack (abstract data type)">Stack</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Array_data_structure.html" title="Array data structure">Arrays</a></th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Bit_array.html" title="Bit array">Bit array</a></li>
<li><a href="Circular_buffer.html" title="Circular buffer">Circular buffer</a></li>
<li><a href="Dynamic_array.html" title="Dynamic array">Dynamic array</a></li>
<li><a href="Hash_table.html" title="Hash table">Hash table</a></li>
<li><a href="Hashed_array_tree.html" title="Hashed array tree">Hashed array tree</a></li>
<li><a href="Sparse_array.html" title="Sparse array">Sparse array</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Linked_data_structure.html" title="Linked data structure">Linked</a></th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Association_list.html" title="Association list">Association list</a></li>
<li><a href="Linked_list.html" title="Linked list">Linked list</a></li>
<li><a href="Skip_list.html" title="Skip list">Skip list</a></li>
<li><a href="Unrolled_linked_list.html" title="Unrolled linked list">Unrolled linked list</a></li>
<li><a href="XOR_linked_list.html" title="XOR linked list">XOR linked list</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Tree_(data_structure).html" title="Tree (data structure)">Trees</a></th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="B-tree.html" title="B-tree">B-tree</a></li>
<li><a href="Binary_search_tree.html" title="Binary search tree">Binary search tree</a>
<ul>
<li><a href="AA_tree.html" title="AA tree">AA</a></li>
<li><a href="AVL_tree.html" title="AVL tree">AVL</a></li>
<li><strong class="selflink">red-black</strong></li>
<li><a href="Self-balancing_binary_search_tree.html" title="Self-balancing binary search tree">self-balancing</a></li>
<li><a href="Splay_tree.html" title="Splay tree">splay</a></li>
</ul>
</li>
<li><a href="Heap_(data_structure).html" title="Heap (data structure)">Heap</a>
<ul>
<li><a href="Binary_heap.html" title="Binary heap">binary</a></li>
<li><a href="Binomial_heap.html" title="Binomial heap">binomial</a></li>
<li><a href="Fibonacci_heap.html" title="Fibonacci heap">Fibonacci</a></li>
</ul>
</li>
<li><a href="R-tree.html" title="R-tree">R-tree</a>
<ul>
<li><a href="R__tree.html" title="R* tree">R*</a></li>
<li><a href="R%2b_tree.html" title="R+ tree">R+</a></li>
<li><a href="Hilbert_R-tree.html" title="Hilbert R-tree">Hilbert</a></li>
</ul>
</li>
<li><a href="Trie.html" title="Trie">Trie</a>
<ul>
<li><a href="Hash_tree_(persistent_data_structure).html" title="Hash tree (persistent data structure)">Hash tree</a></li>
</ul>
</li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Graph_(abstract_data_type).html" title="Graph (abstract data type)">Graphs</a></th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Binary_decision_diagram.html" title="Binary decision diagram">Binary decision diagram</a></li>
<li><a href="Directed_acyclic_word_graph.html" title="Directed acyclic word graph">Directed acyclic word graph</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<td class="navbox-abovebelow" colspan="2">
<div>
<ul>
<li><a href="http://en.wikipedia.org/wiki/List_of_data_structures" title="List of data structures">List of data structures</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
</table>
<p><span id="interwiki-de-ga"></span></p>


<!-- 
NewPP limit report
Parsed by mw1097
CPU time usage: 1.368 seconds
Real time usage: 1.515 seconds
Preprocessor visited node count: 1433/1000000
Preprocessor generated node count: 5645/1500000
Post‐expand include size: 52031/2048000 bytes
Template argument size: 864/2048000 bytes
Highest expansion depth: 11/40
Expensive parser function count: 9/500
Lua time usage: 0.091/10.000 seconds
Lua memory usage: 2.49 MB/50 MB
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:26397-0!*!0!!en!4!*!math=0 and timestamp 20140328130651
 -->
<noscript><img src="http://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>								<div class="printfooter">
				Retrieved from "<a href="http://en.wikipedia.org/w/index.php?title=Red%e2%80%93black_tree&amp;oldid=601649214">http://en.wikipedia.org/w/index.php?title=Red–black_tree&amp;oldid=601649214</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="http://en.wikipedia.org/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="http://en.wikipedia.org/wiki/Category:1972_in_computer_science" title="Category:1972 in computer science">1972 in computer science</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Binary_trees" title="Category:Binary trees">Binary trees</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="http://en.wikipedia.org/wiki/Category:Articles_needing_additional_references_from_October_2012" title="Category:Articles needing additional references from October 2012">Articles needing additional references from October 2012</a></li><li><a href="http://en.wikipedia.org/wiki/Category:All_articles_needing_additional_references" title="Category:All articles needing additional references">All articles needing additional references</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_unsourced_quotes" title="Category:Articles with unsourced quotes">Articles with unsourced quotes</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Vague_or_ambiguous_time_from_January_2013" title="Category:Vague or ambiguous time from January 2013">Vague or ambiguous time from January 2013</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_lacking_in-text_citations_from_July_2013" title="Category:Articles lacking in-text citations from July 2013">Articles lacking in-text citations from July 2013</a></li><li><a href="http://en.wikipedia.org/wiki/Category:All_articles_lacking_in-text_citations" title="Category:All articles lacking in-text citations">All articles lacking in-text citations</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_containing_proofs" title="Category:Articles containing proofs">Articles containing proofs</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_example_C_code" title="Category:Articles with example C code">Articles with example C code</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Red%E2%80%93black+tree&amp;type=signup">Create account</a></li><li id="pt-login"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Red%E2%80%93black+tree" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Red%e2%80%93black_tree.html"  title="View the content page [c]" accesskey="c">Article</a></span></li>
					<li  id="ca-talk"><span><a href="http://en.wikipedia.org/wiki/Talk:Red–black_tree"  title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Red%e2%80%93black_tree.html" >Read</a></span></li>
					<li id="ca-edit"><span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=edit"  title="You can edit this page. &#10;Please review your changes before saving. [e]" accesskey="e">Edit</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=history"  title="Past versions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="http://en.wikipedia.org/w/index.php" id="searchform">
					<div id="simpleSearch">
					<input type="search" name="search" placeholder="Search" title="Search Wikipedia [f]" accesskey="f" id="searchInput" /><input type="hidden" value="Special:Search" name="title" /><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton" /><input type="submit" name="go" value="Go" title="Go to a page with this exact name if one exists" id="searchButton" class="searchButton" />		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="Main_Page.html"  title="Visit the main page"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="Main_Page.html" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-contents"><a href="http://en.wikipedia.org/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
			<li id="n-featuredcontent"><a href="http://en.wikipedia.org/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li>
			<li id="n-currentevents"><a href="http://en.wikipedia.org/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
			<li id="n-randompage"><a href="http://en.wikipedia.org/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			<li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li>
			<li id="n-shoplink"><a href="http://shop.wikimedia.org/" title="Visit the Wikimedia Shop">Wikimedia Shop</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
	<h3 id='p-interaction-label'>Interaction</h3>
	<div class="body">
		<ul>
			<li id="n-help"><a href="http://en.wikipedia.org/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			<li id="n-aboutsite"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
			<li id="n-portal"><a href="http://en.wikipedia.org/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
			<li id="n-recentchanges"><a href="http://en.wikipedia.org/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-contactpage"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://en.wikipedia.org/wiki/Special:WhatLinksHere/Red–black_tree" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://en.wikipedia.org/wiki/Special:RecentChangesLinked/Red–black_tree" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-upload"><a href="http://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li>
			<li id="t-specialpages"><a href="http://en.wikipedia.org/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;oldid=601649214" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;action=info">Page information</a></li>
			<li id="t-wikibase"><a href="http://www.wikidata.org/wiki/Q506496" title="Link to connected data repository item [g]" accesskey="g">Data item</a></li>
<li id="t-cite"><a href="http://en.wikipedia.org/w/index.php?title=Special:Cite&amp;page=Red%E2%80%93black_tree&amp;id=601649214" title="Information on how to cite this page">Cite this page</a></li>		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
	<h3 id='p-coll-print_export-label'>Print/export</h3>
	<div class="body">
		<ul>
			<li id="coll-create_a_book"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Red%E2%80%93black+tree">Create a book</a></li>
			<li id="coll-download-as-rl"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Red%E2%80%93black+tree&amp;oldid=601649214&amp;writer=rl">Download as PDF</a></li>
			<li id="t-print"><a href="http://en.wikipedia.org/w/index.php?title=Red%E2%80%93black_tree&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
	<h3 id='p-lang-label'>Languages</h3>
	<div class="body">
		<ul>
			<li class="interlanguage-link interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Červeno-černý_strom" title="Červeno-černý strom – Czech" lang="cs" hreflang="cs">Čeština</a></li>
			<li class="interlanguage-link interwiki-da"><a href="http://da.wikipedia.org/wiki/Rød-sort_træ" title="Rød-sort træ – Danish" lang="da" hreflang="da">Dansk</a></li>
			<li class="interlanguage-link interwiki-de"><a href="http://de.wikipedia.org/wiki/Rot-Schwarz-Baum" title="Rot-Schwarz-Baum – German" lang="de" hreflang="de">Deutsch</a></li>
			<li class="interlanguage-link interwiki-es"><a href="http://es.wikipedia.org/wiki/Árbol_rojo-negro" title="Árbol rojo-negro – Spanish" lang="es" hreflang="es">Español</a></li>
			<li class="interlanguage-link interwiki-fa"><a href="http://fa.wikipedia.org/wiki/درخت_سرخ-سیاه" title="درخت سرخ-سیاه – Persian" lang="fa" hreflang="fa">فارسی</a></li>
			<li class="interlanguage-link interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Arbre_bicolore" title="Arbre bicolore – French" lang="fr" hreflang="fr">Français</a></li>
			<li class="interlanguage-link interwiki-ko"><a href="http://ko.wikipedia.org/wiki/레드-블랙_트리" title="레드-블랙 트리 – Korean" lang="ko" hreflang="ko">한국어</a></li>
			<li class="interlanguage-link interwiki-hr"><a href="http://hr.wikipedia.org/wiki/Crveno-crno_stablo" title="Crveno-crno stablo – Croatian" lang="hr" hreflang="hr">Hrvatski</a></li>
			<li class="interlanguage-link interwiki-id"><a href="http://id.wikipedia.org/wiki/Pohon_merah-hitam" title="Pohon merah-hitam – Indonesian" lang="id" hreflang="id">Bahasa Indonesia</a></li>
			<li class="interlanguage-link interwiki-it"><a href="http://it.wikipedia.org/wiki/RB-Albero" title="RB-Albero – Italian" lang="it" hreflang="it">Italiano</a></li>
			<li class="interlanguage-link interwiki-he"><a href="http://he.wikipedia.org/wiki/עץ_אדום_שחור" title="עץ אדום שחור – Hebrew" lang="he" hreflang="he">עברית</a></li>
			<li class="interlanguage-link interwiki-lt"><a href="http://lt.wikipedia.org/wiki/Raudonai_juodas_medis" title="Raudonai juodas medis – Lithuanian" lang="lt" hreflang="lt">Lietuvių</a></li>
			<li class="interlanguage-link interwiki-hu"><a href="http://hu.wikipedia.org/wiki/Piros-fekete_fa" title="Piros-fekete fa – Hungarian" lang="hu" hreflang="hu">Magyar</a></li>
			<li class="interlanguage-link interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Rood-zwartboom" title="Rood-zwartboom – Dutch" lang="nl" hreflang="nl">Nederlands</a></li>
			<li class="interlanguage-link interwiki-ja"><a href="http://ja.wikipedia.org/wiki/赤黒木" title="赤黒木 – Japanese" lang="ja" hreflang="ja">日本語</a></li>
			<li class="interlanguage-link interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Drzewo_czerwono-czarne" title="Drzewo czerwono-czarne – Polish" lang="pl" hreflang="pl">Polski</a></li>
			<li class="interlanguage-link interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Árvore_rubro-negra" title="Árvore rubro-negra – Portuguese" lang="pt" hreflang="pt">Português</a></li>
			<li class="interlanguage-link interwiki-ru"><a href="http://ru.wikipedia.org/wiki/Красно-чёрное_дерево" title="Красно-чёрное дерево – Russian" lang="ru" hreflang="ru">Русский</a></li>
			<li class="interlanguage-link interwiki-sr"><a href="http://sr.wikipedia.org/wiki/Црвено-црно_стабло" title="Црвено-црно стабло – Serbian" lang="sr" hreflang="sr">Српски / srpski</a></li>
			<li class="interlanguage-link interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Punamusta_puu" title="Punamusta puu – Finnish" lang="fi" hreflang="fi">Suomi</a></li>
			<li class="interlanguage-link interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Röd-svart_träd" title="Röd-svart träd – Swedish" lang="sv" hreflang="sv">Svenska</a></li>
			<li class="interlanguage-link interwiki-th"><a href="http://th.wikipedia.org/wiki/ต้นไม้แดงดำ" title="ต้นไม้แดงดำ – Thai" lang="th" hreflang="th">ไทย</a></li>
			<li class="interlanguage-link interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Kırmızı-siyah_ağaç" title="Kırmızı-siyah ağaç – Turkish" lang="tr" hreflang="tr">Türkçe</a></li>
			<li class="interlanguage-link interwiki-uk"><a href="http://uk.wikipedia.org/wiki/Червоно-чорне_дерево" title="Червоно-чорне дерево – Ukrainian" lang="uk" hreflang="uk">Українська</a></li>
			<li class="interlanguage-link interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Cây_đỏ_đen" title="Cây đỏ đen – Vietnamese" lang="vi" hreflang="vi">Tiếng Việt</a></li>
			<li class="interlanguage-link interwiki-zh"><a href="http://zh.wikipedia.org/wiki/红黑树" title="红黑树 – Chinese" lang="zh" hreflang="zh">中文</a></li>
			<li class="uls-p-lang-dummy"><a href="#"></a></li>
			<li class="wbc-editpage"><a href="http://www.wikidata.org/wiki/Q506496#sitelinks-wikipedia" title="Edit interlanguage links">Edit links</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 28 March 2014 at 13:06.<br /></li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="http://wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="http://wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy.</a> <br/>
Wikipedia® is a registered trademark of the <a href="http://www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="http://en.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a class="external" href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-mobileview"><a href="http://en.m.wikipedia.org/wiki/Red–black_tree" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<a href="http://wikimediafoundation.org/"><img src="http://bits.wikimedia.org/images/wikimedia-button.png" width="88" height="31" alt="Wikimedia Foundation"/></a>
					</li>
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["ext.cite","mobile.desktop","mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.DRN-wizard","ext.gadget.charinsert","mw.MwEmbedSupport.style","ext.navigationTiming","schema.UniversalLanguageSelector","ext.uls.eventlogger","ext.uls.interlanguage","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served by mw1084 in 0.306 secs. -->
	</body>

<!-- Mirrored from en.wikipedia.org/wiki/Red–black_tree by HTTrack Website Copier/3.x [XR&CO'2013], Sun, 30 Mar 2014 00:02:12 GMT -->
</html>
