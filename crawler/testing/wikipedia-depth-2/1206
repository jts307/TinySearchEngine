http://old-www.cs.dartmouth.edu/~cs50/data/tse/wikipedia/Floating_point.html
2
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">

<!-- Mirrored from en.wikipedia.org/wiki/Floating_point by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 29 Mar 2014 23:57:34 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="UTF-8" />
<title>Floating point - Wikipedia, the free encyclopedia</title>
<meta http-equiv="X-UA-Compatible" content="IE=EDGE" />
<meta name="generator" content="MediaWiki 1.23wmf17" />
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit" />
<link rel="edit" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit" />
<link rel="apple-touch-icon" href="http://bits.wikimedia.org/apple-touch/wikipedia.png" />
<link rel="shortcut icon" href="http://bits.wikimedia.org/favicon/wikipedia.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://en.wikipedia.org/w/opensearch_desc.php" title="Wikipedia (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://en.wikipedia.org/w/api.php?action=rsd" />
<link rel="copyright" href="http://creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="canonical" href="Floating_point.html" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cteahouse%7Cext.geshi.local%7Cext.rtlcite%2Cwikihiero%7Cext.uls.nojs%7Cext.visualEditor.viewPageTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.ui.button%7Cskins.common.interface%7Cskins.vector.styles&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: enwiki:resourceloader:filter:minify-css:7:3904d24a08aa08f6a68dc338f9be277e */</style>

<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Floating_point","wgTitle":"Floating point","wgCurRevisionId":599305991,"wgRevisionId":599305991,"wgArticleId":11376,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Use dmy dates from May 2012","Data types","Computer arithmetic","Primitive types"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Floating_point","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":false,"previewDialog":false,"publish":false,"toc":false},"wgBetaFeaturesFeatures":[],"wgVisualEditor":{"isPageWatched":false,"magnifyClipIconURL":"//bits.wikimedia.org/static-1.23wmf17/skins/common/images/magnify-clip.png","pageLanguageCode":"en","pageLanguageDir":"ltr","svgMaxSize":2048},"wikilove-recipient":"","wikilove-anon":0,"wgGuidedTourHelpGuiderUrl":"Help:Guided tours/guider","wgFlowTermsOfUseEdit":"By saving changes, you agree to our \u003Ca class=\"external text\" href=\"//wikimediafoundation.org/wiki/Terms_of_use\"\u003ETerms of Use\u003C/a\u003E and agree to irrevocably release your text under the \u003Ca rel=\"nofollow\" class=\"external text\" href=\"//creativecommons.org/licenses/by-sa/3.0\"\u003ECC BY-SA 3.0 License\u003C/a\u003E and \u003Ca class=\"external text\" href=\"//en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License\"\u003EGFDL\u003C/a\u003E","wgULSAcceptLanguageList":["en-us","en","ar","fa","fr","he","ms","tr"],"wgULSCurrentAutonym":"English","wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgNoticeProject":"wikipedia","wgWikibaseItemId":"Q117879"});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"editfont":"default","editondblclick":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nickname":"","noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"showhiddencats":false,"shownumberswatching":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":4,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,
"watchmoves":0,"wllimit":250,"useeditwarning":1,"prefershttps":1,"flaggedrevssimpleui":1,"flaggedrevsstable":0,"flaggedrevseditdiffs":true,"flaggedrevsviewdiffs":false,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"visualeditor-enable":0,"visualeditor-enable-experimental":0,"visualeditor-enable-mwmath":0,"visualeditor-betatempdisable":0,"wikilove-enabled":1,"echo-subscriptions-web-page-review":true,"echo-subscriptions-email-page-review":false,"ep_showtoplink":false,"ep_bulkdelorgs":false,"ep_bulkdelcourses":true,"ep_showdyk":true,"echo-subscriptions-web-education-program":true,"echo-subscriptions-email-education-program":false,"echo-notify-show-link":true,"echo-show-alert":true,"echo-email-frequency":0,"echo-email-format":"html","echo-subscriptions-email-system":true,"echo-subscriptions-web-system":true,"echo-subscriptions-email-other":false,"echo-subscriptions-web-other":true,"echo-subscriptions-email-edit-user-talk":false,"echo-subscriptions-web-edit-user-talk":true,
"echo-subscriptions-email-reverted":false,"echo-subscriptions-web-reverted":true,"echo-subscriptions-email-article-linked":false,"echo-subscriptions-web-article-linked":false,"echo-subscriptions-email-mention":false,"echo-subscriptions-web-mention":true,"echo-subscriptions-web-edit-thank":true,"echo-subscriptions-email-edit-thank":false,"echo-subscriptions-web-flow-discussion":true,"echo-subscriptions-email-flow-discussion":false,"gettingstarted-task-toolbar-show-intro":true,"uls-preferences":"","language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"searchNs100":false,
"searchNs101":false,"searchNs108":false,"searchNs109":false,"searchNs118":false,"searchNs119":false,"searchNs446":false,"searchNs447":false,"searchNs710":false,"searchNs711":false,"searchNs828":false,"searchNs829":false,"gadget-teahouse":1,"gadget-ReferenceTooltips":1,"gadget-DRN-wizard":1,"gadget-charinsert":1,"gadget-mySandbox":1,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: enwiki:resourceloader:filter:minify-js:7:84f3a60e3d830e516b8bcb14d95fe62e */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","ext.centralauth.centralautologin","ext.visualEditor.viewPageTarget.init","ext.uls.init","ext.uls.interface","wikibase.client.init","ext.centralNotice.bannerController","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #b1b100;}
.c.source-c .kw2 {color: #000000; font-weight: bold;}
.c.source-c .kw3 {color: #000066;}
.c.source-c .kw4 {color: #993333;}
.c.source-c .co1 {color: #666666; font-style: italic;}
.c.source-c .co2 {color: #339933;}
.c.source-c .coMULTI {color: #808080; font-style: italic;}
.c.source-c .es0 {color: #000099; font-weight: bold;}
.c.source-c .es1 {color: #000099; font-weight: bold;}
.c.source-c .es2 {color: #660099; font-weight: bold;}
.c.source-c .es3 {color: #660099; font-weight: bold;}
.c.source-c .es4 {color: #660099; font-weight: bold;}
.c.source-c .es5 {color: #006699; font-weight: bold;}
.c.source-c .br0 {color: #009900;}
.c.source-c .sy0 {color: #339933;}
.c.source-c .st0 {color: #ff0000;}
.c.source-c .nu0 {color: #0000dd;}
.c.source-c .nu6 {color: #208080;}
.c.source-c .nu8 {color: #208080;}
.c.source-c .nu12 {color: #208080;}
.c.source-c .nu16 {color:#800080;}
.c.source-c .nu17 {color:#800080;}
.c.source-c .nu18 {color:#800080;}
.c.source-c .nu19 {color:#800080;}
.c.source-c .me1 {color: #202020;}
.c.source-c .me2 {color: #202020;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><script src="http://bits.wikimedia.org/geoiplookup"></script><link rel="dns-prefetch" href="http://meta.wikimedia.org/" /><!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/static-1.23wmf17/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Floating_point skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<div id="siteNotice"><!-- CentralNotice --></div>
						<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Floating point</span></h1>
			<div id="bodyContent">
								<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-navigation">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="thumb tright">
<div class="thumbinner" style="width:202px;"><a href="http://en.wikipedia.org/wiki/File:Z3_Deutsches_Museum.JPG" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Z3_Deutsches_Museum.JPG/200px-Z3_Deutsches_Museum.JPG" width="200" height="150" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Z3_Deutsches_Museum.JPG/300px-Z3_Deutsches_Museum.JPG 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Z3_Deutsches_Museum.JPG/400px-Z3_Deutsches_Museum.JPG 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Z3_Deutsches_Museum.JPG" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf17/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
An early electromechanical programmable computer, the <a href="http://en.wikipedia.org/wiki/Z3_(computer)" title="Z3 (computer)">Z3</a>, included floating-point arithmetic (replica on display at <a href="http://en.wikipedia.org/wiki/Deutsches_Museum" title="Deutsches Museum">Deutsches Museum</a> in <a href="http://en.wikipedia.org/wiki/Munich" title="Munich">Munich</a>).</div>
</div>
</div>
<div class="thumb tright">
<div class="thumbinner" style="width:202px;"><a href="http://en.wikipedia.org/wiki/File:Float_mantissa_exponent.png" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Float_mantissa_exponent.png/200px-Float_mantissa_exponent.png" width="200" height="80" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Float_mantissa_exponent.png/300px-Float_mantissa_exponent.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Float_mantissa_exponent.png/400px-Float_mantissa_exponent.png 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Float_mantissa_exponent.png" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf17/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
A diagram showing a representation of a decimal floating-point number using a <a href="http://en.wikipedia.org/wiki/Significand" title="Significand">mantissa</a> and an <a href="http://en.wikipedia.org/wiki/Exponent" title="Exponent" class="mw-redirect">exponent</a>.</div>
</div>
</div>
<p>In <a href="Computing.html" title="Computing">computing</a>, <b>floating point</b> describes a method of representing an approximation of a <a href="http://en.wikipedia.org/wiki/Real_number" title="Real number">real number</a> in a way that can support a wide range of values. The numbers are, in general, represented approximately to a fixed number of <a href="http://en.wikipedia.org/wiki/Significant_figures" title="Significant figures">significant digits</a> (the <a href="http://en.wikipedia.org/wiki/Significand" title="Significand">significand</a>) and scaled using an <a href="http://en.wikipedia.org/wiki/Exponentiation" title="Exponentiation">exponent</a>. The base for the scaling is normally 2, 10 or 16. The typical number that can be represented exactly is of the form:</p>
<dl>
<dd><i>Significant digits</i> × <i>base</i><sup><i>exponent</i></sup></dd>
</dl>
<p>The idea of floating-point representation over intrinsically <a href="http://en.wikipedia.org/wiki/Integer_(computer_science)" title="Integer (computer science)">integer</a> <a href="Fixed-point_arithmetic.html" title="Fixed-point arithmetic">fixed-point</a> numbers, which consist purely of <a href="http://en.wikipedia.org/wiki/Significand" title="Significand">significand</a>, is that expanding it with the exponent component achieves greater range. For instance, to represent large values, e.g. distances between galaxies, there is no need to keep all 39 decimal places down to <a href="http://en.wikipedia.org/wiki/Femtometre" title="Femtometre">femtometre</a>-resolution (employed in particle physics). Assuming that the best resolution is in <a href="http://en.wikipedia.org/wiki/Light_years" title="Light years" class="mw-redirect">light years</a>, only the 9 most significant decimal digits matter, whereas the remaining 30 digits carry pure noise, and thus can be safely dropped. This represents a savings of 100 <a href="Bit.html" title="Bit">bits</a> of <a href="http://en.wikipedia.org/wiki/Computer_data_storage" title="Computer data storage">computer data storage</a>. Instead of these 100 bits, much fewer are used to represent the scale (the exponent), e.g. 8 bits or 2 decimal digits. Given that one number can encode both astronomic and subatomic distances with the same nine digits of accuracy, but because a 9-digit number is 100 times less accurate than the 11 digits reserved for scale, this is considered a <a href="http://en.wikipedia.org/wiki/Trade-off" title="Trade-off">trade-off</a> exchanging range for <a href="http://en.wikipedia.org/wiki/Accuracy_and_precision" title="Accuracy and precision">precision</a>. The example of using scaling to extend the dynamic range reveals another contrast with fixed-point numbers: Floating-point values are not uniformly spaced. Small values, close to zero, can be represented with much higher resolution (e.g. one femtometre) than large ones because a greater scale (e.g. light years) must be selected for encoding significantly larger values.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1"><span>[</span>1<span>]</span></a></sup> That is, floating-point numbers cannot represent point coordinates with atomic accuracy at galactic distances, only close to the origin.</p>
<p>The term <i>floating point</i> refers to the fact that a number's <a href="http://en.wikipedia.org/wiki/Radix_point" title="Radix point">radix point</a> (decimal point, or, more commonly in computers, binary point) can "float"; that is, it can be placed anywhere relative to the significant digits of the number. This position is indicated as the exponent component in the internal representation, and floating point can thus be thought of as a computer realization of <a href="http://en.wikipedia.org/wiki/Scientific_notation" title="Scientific notation">scientific notation</a>.</p>
<p>Over the years, a variety of floating-point representations have been used in computers. However, since the 1990s, the most commonly encountered representation is that defined by the <a href="IEEE_754.html" title="IEEE 754" class="mw-redirect">IEEE 754</a> Standard.</p>
<p>The speed of floating-point operations, commonly referred to in performance measurements as <a href="http://en.wikipedia.org/wiki/FLOPS" title="FLOPS">FLOPS</a>, is an important characteristic of a computer system, especially in <a href="Software.html" title="Software">software</a> that performs large-scale mathematical calculations.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Some_other_computer_representations_for_non-integral_numbers"><span class="tocnumber">1.1</span> <span class="toctext">Some other computer representations for non-integral numbers</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-3"><a href="#Range_of_floating-point_numbers"><span class="tocnumber">2</span> <span class="toctext">Range of floating-point numbers</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#History"><span class="tocnumber">3</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#IEEE_754:_floating_point_in_modern_computers"><span class="tocnumber">4</span> <span class="toctext">IEEE 754: floating point in modern computers</span></a>
<ul>
<li class="toclevel-2 tocsection-6"><a href="#Internal_representation"><span class="tocnumber">4.1</span> <span class="toctext">Internal representation</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="#Special_values"><span class="tocnumber">4.2</span> <span class="toctext">Special values</span></a>
<ul>
<li class="toclevel-3 tocsection-8"><a href="#Signed_zero"><span class="tocnumber">4.2.1</span> <span class="toctext">Signed zero</span></a></li>
<li class="toclevel-3 tocsection-9"><a href="#Subnormal_numbers"><span class="tocnumber">4.2.2</span> <span class="toctext">Subnormal numbers</span></a></li>
<li class="toclevel-3 tocsection-10"><a href="#Infinities"><span class="tocnumber">4.2.3</span> <span class="toctext">Infinities</span></a></li>
<li class="toclevel-3 tocsection-11"><a href="#NaNs"><span class="tocnumber">4.2.4</span> <span class="toctext">NaNs</span></a></li>
<li class="toclevel-3 tocsection-12"><a href="#IEEE_754_design_rationale"><span class="tocnumber">4.2.5</span> <span class="toctext">IEEE 754 design rationale</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="#Representable_numbers.2C_conversion_and_rounding"><span class="tocnumber">5</span> <span class="toctext">Representable numbers, conversion and rounding</span></a>
<ul>
<li class="toclevel-2 tocsection-14"><a href="#Rounding_modes"><span class="tocnumber">5.1</span> <span class="toctext">Rounding modes</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-15"><a href="#Floating-point_arithmetic_operations"><span class="tocnumber">6</span> <span class="toctext">Floating-point arithmetic operations</span></a>
<ul>
<li class="toclevel-2 tocsection-16"><a href="#Addition_and_subtraction"><span class="tocnumber">6.1</span> <span class="toctext">Addition and subtraction</span></a></li>
<li class="toclevel-2 tocsection-17"><a href="#Multiplication_and_division"><span class="tocnumber">6.2</span> <span class="toctext">Multiplication and division</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-18"><a href="#Dealing_with_exceptional_cases"><span class="tocnumber">7</span> <span class="toctext">Dealing with exceptional cases</span></a></li>
<li class="toclevel-1 tocsection-19"><a href="#Accuracy_problems"><span class="tocnumber">8</span> <span class="toctext">Accuracy problems</span></a>
<ul>
<li class="toclevel-2 tocsection-20"><a href="#Incidents"><span class="tocnumber">8.1</span> <span class="toctext">Incidents</span></a></li>
<li class="toclevel-2 tocsection-21"><a href="#Machine_precision_and_backward_error_analysis"><span class="tocnumber">8.2</span> <span class="toctext">Machine precision and backward error analysis</span></a></li>
<li class="toclevel-2 tocsection-22"><a href="#Minimizing_the_effect_of_accuracy_problems"><span class="tocnumber">8.3</span> <span class="toctext">Minimizing the effect of accuracy problems</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-23"><a href="#See_also"><span class="tocnumber">9</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-24"><a href="#Notes_and_references"><span class="tocnumber">10</span> <span class="toctext">Notes and references</span></a></li>
<li class="toclevel-1 tocsection-25"><a href="#Further_reading"><span class="tocnumber">11</span> <span class="toctext">Further reading</span></a></li>
<li class="toclevel-1 tocsection-26"><a href="#External_links"><span class="tocnumber">12</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Overview">Overview</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=1" title="Edit section: Overview">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>A number representation (called a <a href="http://en.wikipedia.org/wiki/Numeral_system" title="Numeral system">numeral system</a> in mathematics) specifies some way of storing a number that may be encoded as a string of digits. The arithmetic is defined as a set of actions on the representation that simulate classical arithmetic operations.</p>
<p>There are several mechanisms by which strings of digits can represent numbers. In common mathematical notation, the digit string can be of any length, and the location of the <a href="http://en.wikipedia.org/wiki/Radix_point" title="Radix point">radix point</a> is indicated by placing an explicit <a href="http://en.wikipedia.org/wiki/Decimal_separator" title="Decimal separator" class="mw-redirect">"point" character</a> (dot or comma) there. If the radix point is not specified then it is implicitly assumed to lie at the right (least significant) end of the string (that is, the number is an <a href="http://en.wikipedia.org/wiki/Integer" title="Integer">integer</a>). In <a href="Fixed-point_arithmetic.html" title="Fixed-point arithmetic">fixed-point</a> systems, some specific assumption is made about where the radix point is located in the string. For example, the convention could be that the string consists of 8 decimal digits with the decimal point in the middle, so that "00012345" has a value of 1.2345.</p>
<p>In <a href="http://en.wikipedia.org/wiki/Scientific_notation" title="Scientific notation">scientific notation</a>, the given number is scaled by a <a href="http://en.wikipedia.org/wiki/Exponentiation" title="Exponentiation">power of 10</a> so that it lies within a certain range—typically between 1 and 10, with the radix point appearing immediately after the first digit. The scaling factor, as a power of ten, is then indicated separately at the end of the number. For example, the revolution period of <a href="http://en.wikipedia.org/wiki/Jupiter" title="Jupiter">Jupiter</a>'s moon <a href="http://en.wikipedia.org/wiki/Io_(moon)" title="Io (moon)">Io</a> is 152853.5047 seconds, a value that would be represented in standard-form scientific notation as 1.528535047<span style="margin:0 .15em 0 .25em">×</span>10<sup>5</sup> seconds.</p>
<p>Floating-point representation is similar in concept to scientific notation. Logically, a floating-point number consists of:</p>
<ul>
<li>A signed (meaning positive or negative) digit string of a given length in a given <a href="http://en.wikipedia.org/wiki/Base_(exponentiation)" title="Base (exponentiation)">base</a> (or <a href="http://en.wikipedia.org/wiki/Radix" title="Radix">radix</a>). This digit string is referred to as the <a href="http://en.wikipedia.org/wiki/Significand" title="Significand">significand</a>, <a href="http://en.wikipedia.org/wiki/Coefficient" title="Coefficient">coefficient</a> or, less often, the mantissa (see below). The length of the significand determines the <i>precision</i> to which numbers can be represented. The radix point position is assumed to always be somewhere within the significand—often just after or just before the most significant digit, or to the right of the rightmost (least significant) digit. This article will generally follow the convention that the radix point is just after the most significant (leftmost) digit.</li>
<li>A signed integer <a href="http://en.wikipedia.org/wiki/Exponent" title="Exponent" class="mw-redirect">exponent</a>, also referred to as the characteristic or scale, which modifies the magnitude of the number.</li>
</ul>
<p>To derive the value of the floating-point number, one must multiply the <i>significand</i> by the <i>base</i> raised to the power of the <i>exponent</i>, equivalent to shifting the radix point from its implied position by a number of places equal to the value of the exponent—to the right if the exponent is positive or to the left if the exponent is negative.</p>
<p>Using base-10 (the familiar <a href="http://en.wikipedia.org/wiki/Decimal_representation" title="Decimal representation">decimal</a> notation) as an example, the number 152853.5047, which has ten decimal digits of precision, is represented as the significand 1.528535047 together with an exponent of 5 (if the implied position of the radix point is after the first most significant digit, here 1). To determine the actual value, a decimal point is placed after the first digit of the significand and the result is multiplied by 10<sup>5</sup> to give 1.528535047 × 10<sup>5</sup>, or 152853.5047. In storing such a number, the base (10) need not be stored, since it will be the same for the entire range of supported numbers, and can thus be inferred.</p>
<p>Symbolically, this final value is</p>
<dl>
<dd><img class="tex" alt="s \times b^e" src="http://upload.wikimedia.org/math/6/a/0/6a06106cda85af68c47c98f1bceeb366.png" /></dd>
</dl>
<p>where <i>s</i> is the value of the significand (after taking into account the implied radix point), <i>b</i> is the base, and <i>e</i> is the exponent.</p>
<p>Equivalently:</p>
<dl>
<dd><img class="tex" alt="\frac{s}{b^{p-1}} \times b^e" src="http://upload.wikimedia.org/math/1/b/c/1bc838e9f01209b00c6e771c2d84099f.png" /></dd>
</dl>
<p>where <i>s</i> here means the integer value of the entire significand, ignoring any implied decimal point, and <i>p</i> is the precision—the number of digits in the significand.</p>
<p>Historically, several number bases have been used for representing floating-point numbers, with base 2 (<a href="http://en.wikipedia.org/wiki/Binary_numeral_system" title="Binary numeral system" class="mw-redirect">binary</a>) being the most common, followed by base 10 (decimal), and other less common varieties, such as base 16 (<a href="http://en.wikipedia.org/wiki/Hexadecimal" title="Hexadecimal">hexadecimal notation</a>), as well as some exotic ones like 3 (see <a href="http://en.wikipedia.org/wiki/Setun" title="Setun">Setun</a>).</p>
<p>Floating-point numbers are <a href="http://en.wikipedia.org/wiki/Rational_number" title="Rational number">rational numbers</a> because they can be represented as one integer divided by another. For example 1.45×10<sup>3</sup> is (145/100)*1000 or 145000/100. The base however determines the fractions that can be represented. For instance, 1/5 cannot be represented exactly as a floating-point number using a binary base but can be represented exactly using a decimal base (0.2, or 2×10<sup>−1</sup>). However 1/3 cannot be represented exactly by either binary (0.010101...) nor decimal (0.333....), but in <a href="http://en.wikipedia.org/wiki/Ternary_numeral_system" title="Ternary numeral system">base 3</a> it is trivial (0.1 or 1×3<sup>−1</sup>) . The occasions on which infinite expansions occur depend on the base and its <a href="http://en.wikipedia.org/wiki/Prime_factors" title="Prime factors" class="mw-redirect">prime factors</a>, as described in the article on <a href="http://en.wikipedia.org/wiki/Positional_notation#Infinite_representations" title="Positional notation">Positional Notation</a>.</p>
<p>The way in which the significand, exponent and sign bits are internally stored on a computer is implementation-dependent. The common IEEE formats are described in detail later and elsewhere, but as an example, in the binary single-precision (32-bit) floating-point representation <i>p</i>=24 and so the significand is a string of 24 <a href="Bit.html" title="Bit">bits</a>. For instance, the number <a href="http://en.wikipedia.org/wiki/Pi" title="Pi">π</a>'s first 33 bits are 11001001 00001111 11011010 10100010 0. Given that the 24th bit is zero, rounding to 24 bits in binary mode means attributing the 24th bit the value of the 25th which yields 11001001 00001111 11011011. When this is stored using the IEEE 754 encoding, this becomes the significand <i>s</i> with <i>e</i>&#160;=&#160;1 (where <i>s</i> is assumed to have a binary point to the right of the first bit) after a left-adjustment (or <i>normalization</i>) during which leading or trailing zeros are truncated should there be any. Note that they do not matter anyway. Then since the first bit of a non-zero binary significand is always 1 it need not be stored, giving an extra bit of precision. To calculate π the formula is</p>
<dl>
<dd><img class="tex" alt="\begin{align}
   &amp;\left( 1 + \sum_{n=1}^{p-1} \text{bit}_n\times 2^{-n} \right) \times 2^e\\
 = &amp;\left( 1 + 1\times 2^{-1} + 0\times 2^{-2} + 1\times 2^{-4} + 1\times2^{-7} + \dots + 1\times 2^{-23} \right) \times 2^1\\
 = &amp;\; 1.5707964\times 2
\end{align}" src="http://upload.wikimedia.org/math/0/8/7/087b307776fc13cdd636da70d992e829.png" /></dd>
</dl>
<p>where n is the normalized significand's n-th bit from the left. Normalization, which is reversed when 1 is being added above, can be thought of as a form of compression; it allows a binary significand to be compressed into a field one bit shorter than the maximum precision, at the expense of extra processing.</p>
<p>The word "mantissa" is often used as a synonym for significand. Use of mantissa in place of significand or coefficient is discouraged, as the mantissa is traditionally defined as the fractional part of a logarithm, while the <i>characteristic</i> is the integer part. This terminology comes from the manner in which <a href="http://en.wikipedia.org/wiki/Common_logarithm" title="Common logarithm">logarithm</a> tables were used before computers became commonplace. Log tables were actually tables of mantissas.</p>
<h3><span class="mw-headline" id="Some_other_computer_representations_for_non-integral_numbers">Some other computer representations for non-integral numbers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=2" title="Edit section: Some other computer representations for non-integral numbers">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Floating-point representation, in particular the standard IEEE format, is by far the most common way of representing an approximation to real numbers in computers because it is efficiently handled in most large computer processors. However, there are alternatives:</p>
<ul>
<li><a href="Fixed-point_arithmetic.html" title="Fixed-point arithmetic">Fixed-point</a> representation uses integer hardware operations controlled by a software implementation of a specific convention about the location of the binary or decimal point, for example, 6 bits or digits from the right. The hardware to manipulate these representations is less costly than floating point and is also commonly used to perform integer operations. Binary fixed point is usually used in special-purpose applications on embedded processors that can only do integer arithmetic, but decimal fixed point is common in commercial applications.</li>
<li><a href="http://en.wikipedia.org/wiki/Binary-coded_decimal" title="Binary-coded decimal">Binary-coded decimal</a> (BCD) is an encoding for decimal numbers in which each digit is represented by its own binary sequence. It is possible to implement a floating-point system with BCD encoding.</li>
<li><a href="http://en.wikipedia.org/wiki/Logarithmic_number_system" title="Logarithmic number system">Logarithmic number systems</a> represent a real number by the logarithm of its absolute value and a sign bit. The value distribution is similar to floating point, but the value-to-representation curve, i. e. the graph of the logarithm function, is smooth (except at 0). Contrary to floating-point arithmetic, in a logarithmic number system multiplication, division and exponentiation are easy to implement but addition and subtraction are difficult. The <a href="http://en.wikipedia.org/wiki/Symmetric_level-index_arithmetic" title="Symmetric level-index arithmetic">level index arithmetic</a> of Clenshaw, Olver, and Turner is a scheme based on a generalised logarithm representation.</li>
<li>Where greater precision is desired, floating-point arithmetic can be implemented (typically in software) with variable-length significands (and sometimes exponents) that are sized depending on actual need and depending on how the calculation proceeds. This is called <a href="http://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic" title="Arbitrary-precision arithmetic">arbitrary-precision</a> floating-point arithmetic.</li>
<li>Some numbers (<i>e.g.,</i> 1/3 and 1/10) cannot be represented exactly in binary floating-point, no matter what the precision is. Software packages that perform <a href="http://en.wikipedia.org/wiki/Fraction_(mathematics)" title="Fraction (mathematics)">rational arithmetic</a> represent numbers as fractions with integral numerator and denominator, and can therefore represent any rational number exactly. Such packages generally need to use "<a href="http://en.wikipedia.org/wiki/Bignum" title="Bignum" class="mw-redirect">bignum</a>" arithmetic for the individual integers.</li>
<li><a href="http://en.wikipedia.org/wiki/Computer_algebra_system" title="Computer algebra system">Computer algebra systems</a> such as <a href="http://en.wikipedia.org/wiki/Mathematica" title="Mathematica">Mathematica</a> and <a href="http://en.wikipedia.org/wiki/Maxima_(software)" title="Maxima (software)">Maxima</a> can often handle irrational numbers like <img class="tex" alt="\pi" src="http://upload.wikimedia.org/math/5/2/2/522359592d78569a9eac16498aa7a087.png" /> or <img class="tex" alt="\sqrt{3}" src="http://upload.wikimedia.org/math/7/d/2/7d2db2b2c90be143cb85c105105317da.png" /> in a completely "formal" way, without dealing with a specific encoding of the significand. Such programs can evaluate expressions like "<img class="tex" alt="\sin 3\pi" src="http://upload.wikimedia.org/math/e/d/9/ed9abea8a0342871392383a472339b58.png" />" exactly, because they "know" the underlying mathematics.</li>
</ul>
<h2><span class="mw-headline" id="Range_of_floating-point_numbers">Range of floating-point numbers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=3" title="Edit section: Range of floating-point numbers">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>A floating-point number consists of two <a href="Fixed-point_arithmetic.html" title="Fixed-point arithmetic">fixed-point</a> components, whose range depends exclusively on the number of bits or digits in their representation. Whereas components linearly depend on their range, the floating-point range linearly depends on the significant range and exponentially on the range of exponent component, which attaches outstandingly wider range to the number.</p>
<p>On a typical computer system, a 'double precision' (64-bit) binary floating-point number has a coefficient of 53 bits (one of which is implied), an exponent of 11 bits, and one sign bit. Positive floating-point numbers in this format have an approximate range of 10<sup>−308</sup> to 10<sup>308</sup>, because the range of the exponent is [−1022,1023] and 308 is approximately log<sub>10</sub>(2<sup>1023</sup>). The complete range of the format is from about −10<sup>308</sup> through +10<sup>308</sup> (see <a href="IEEE_754.html" title="IEEE 754" class="mw-redirect">IEEE 754</a>).</p>
<p>The number of normalized floating-point numbers in a system F (<i>B</i>, <i>P</i>, <i>L</i>, <i>U</i>) (where <i>B</i> is the base of the system, <i>P</i> is the precision of the system to <i>P</i> numbers, <i>L</i> is the smallest exponent representable in the system, and <i>U</i> is the largest exponent used in the system) is: <img class="tex" alt="2 (B - 1) (B^{P-1}) (U - L + 1) + 1" src="http://upload.wikimedia.org/math/6/2/9/629013407b781b4f70cea949fdcfc820.png" />.</p>
<p>There is a smallest positive normalized floating-point number, Underflow level = UFL = <img class="tex" alt="B^L" src="http://upload.wikimedia.org/math/b/6/0/b607ad3876a1476a2d23a1dfeba876cf.png" /> which has a 1 as the leading digit and 0 for the remaining digits of the significand, and the smallest possible value for the exponent.</p>
<p>There is a largest floating-point number, Overflow level = OFL = <img class="tex" alt="(1 - B^{-P}) (B^{U + 1})" src="http://upload.wikimedia.org/math/7/7/1/7713102c7add2eba015acb4d3c2ef605.png" /> which has <i>B</i> − 1 as the value for each digit of the significand and the largest possible value for the exponent.</p>
<p>In addition there are representable values strictly between −UFL and UFL. Namely, <a href="http://en.wikipedia.org/wiki/Signed_zero" title="Signed zero">positive and negative zeros</a>, as well as <a href="http://en.wikipedia.org/wiki/Denormal_numbers" title="Denormal numbers" class="mw-redirect">denormalized numbers</a>.</p>
<h2><span class="mw-headline" id="History">History</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=4" title="Edit section: History">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="thumb tleft">
<div class="thumbinner" style="width:182px;"><a href="http://en.wikipedia.org/wiki/File:Leonardo_Torres_Quevedo.jpg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Leonardo_Torres_Quevedo.jpg/180px-Leonardo_Torres_Quevedo.jpg" width="180" height="247" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/3/3c/Leonardo_Torres_Quevedo.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/3/3c/Leonardo_Torres_Quevedo.jpg 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Leonardo_Torres_Quevedo.jpg" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf17/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<a href="http://en.wikipedia.org/wiki/Leonardo_Torres_y_Quevedo" title="Leonardo Torres y Quevedo">Leonardo Torres y Quevedo</a>, in 1914 published an analysis of floating point based on the <a href="http://en.wikipedia.org/wiki/Analytic_engine" title="Analytic engine" class="mw-redirect">analytic engine</a>.</div>
</div>
</div>
<p><a href="http://en.wikipedia.org/wiki/Leonardo_Torres_y_Quevedo" title="Leonardo Torres y Quevedo">Leonardo Torres y Quevedo</a> in 1914 designed an electro-mechanical version of the <a href="Analytical_Engine.html" title="Analytical Engine">Analytical Engine</a> of <a href="Charles_Babbage.html" title="Charles Babbage">Charles Babbage</a> which included floating-point arithmetic.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2"><span>[</span>2<span>]</span></a></sup> In 1938, <a href="http://en.wikipedia.org/wiki/Konrad_Zuse" title="Konrad Zuse">Konrad Zuse</a> of Berlin completed the <a href="http://en.wikipedia.org/wiki/Z1_(computer)" title="Z1 (computer)">Z1</a>, the first mechanical binary programmable computer, this was however unreliable in operation.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3"><span>[</span>3<span>]</span></a></sup> It worked with 24-bit binary floating-point numbers having a 7-bit signed exponent, a 16-bit significand (including one implicit bit), and a sign bit. The memory used sliding metal parts to store 64 words of such numbers. The <a href="http://en.wikipedia.org/wiki/Relay" title="Relay">relay</a>-based <a href="http://en.wikipedia.org/wiki/Z3_(computer)" title="Z3 (computer)">Z3</a>, completed in 1941 had representations for plus and minus infinity. It implemented defined operations with infinity such as <span class="texhtml">1/∞ = 0</span> and stopped on undefined operations like <span class="texhtml">0×∞</span>. It also implemented the square root operation in hardware.</p>
<div class="thumb tright">
<div class="thumbinner" style="width:222px;"><a href="http://en.wikipedia.org/wiki/File:Konrad_Zuse_(1992).jpg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Konrad_Zuse_(1992).jpg/220px-Konrad_Zuse_(1992).jpg" width="220" height="293" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/da/Konrad_Zuse_%281992%29.jpg/330px-Konrad_Zuse_%281992%29.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/d/da/Konrad_Zuse_%281992%29.jpg 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Konrad_Zuse_(1992).jpg" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf17/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<a href="http://en.wikipedia.org/wiki/Konrad_Zuse" title="Konrad Zuse">Konrad Zuse</a>, architect of the <a href="http://en.wikipedia.org/wiki/Z3_(computer)" title="Z3 (computer)">Z3</a> computer, which used 22-bit binary floating point.</div>
</div>
</div>
<p>Zuse also proposed, but did not complete, carefully rounded floating–point arithmetic that would have included ±∞ and NaNs, anticipating features of IEEE Standard floating–point by four decades.<sup id="cite_ref-kahansiam_4-0" class="reference"><a href="#cite_note-kahansiam-4"><span>[</span>4<span>]</span></a></sup> By contrast, <a href="http://en.wikipedia.org/wiki/John_von_Neumann" title="John von Neumann">von Neumann</a> recommended against floating point for the 1951 <a href="http://en.wikipedia.org/wiki/IAS_machine" title="IAS machine">IAS machine</a>, arguing that fixed point arithmetic was preferable.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5"><span>[</span>5<span>]</span></a></sup></p>
<p>The first <i>commercial</i> computer with floating-point hardware was Zuse's <a href="http://en.wikipedia.org/wiki/Z4_(computer)" title="Z4 (computer)">Z4</a> computer designed in 1942–1945. The Bell Laboratories Mark V computer implemented decimal floating point in 1946.<sup id="cite_ref-6" class="reference"><a href="#cite_note-6"><span>[</span>6<span>]</span></a></sup></p>
<p>The <a href="http://en.wikipedia.org/wiki/Pilot_ACE" title="Pilot ACE">Pilot ACE</a> had binary floating-point arithmetic which became operational at <a href="http://en.wikipedia.org/wiki/National_Physical_Laboratory,_UK" title="National Physical Laboratory, UK" class="mw-redirect">National Physical Laboratory, UK</a> in 1950. A total of 33 were later sold commercially as the <a href="http://en.wikipedia.org/wiki/English_Electric_DEUCE" title="English Electric DEUCE">English Electric DEUCE</a>. The arithmetic was actually implemented as subroutines, but with a one megahertz clock rate, the speed of floating-point operations and fixed point was initially faster than many competing computers, and since it was only software, all the DEUCE's had it.</p>
<p>The mass-produced <a href="http://en.wikipedia.org/wiki/Vacuum_tube" title="Vacuum tube">vacuum tube</a>-based <a href="http://en.wikipedia.org/wiki/IBM_704" title="IBM 704">IBM 704</a> followed in 1954; it introduced the use of a <a href="http://en.wikipedia.org/wiki/Exponent_bias" title="Exponent bias">biased exponent</a>. For many decades after that, floating-point hardware was typically an optional feature, and computers that had it were said to be "scientific computers", or to have "scientific computing" capability. It was not until the launch of the Intel i486 in 1989 that <i>general-purpose</i> personal computers had floating-point capability in hardware as standard.</p>
<p>The <a href="http://en.wikipedia.org/wiki/UNIVAC_1100/2200_series" title="UNIVAC 1100/2200 series">UNIVAC 1100/2200 series</a>, introduced in 1962, supported two floating-point formats.</p>
<ul>
<li>Single precision used 36 bits, organized into a 1-bit sign, an 8-bit exponent, and a 27-bit significand.</li>
<li>Double precision used 72 bits organized as a 1-bit sign, an 11-bit exponent, and a 60-bit significand.</li>
</ul>
<p>The <a href="http://en.wikipedia.org/wiki/IBM_7094" title="IBM 7094" class="mw-redirect">IBM 7094</a>, also introduced in 1962 supported single and double precision but with no relation to the UNIVAC formats. IBM mainframes until the mid-1980s had no real floating-point standardization between them.</p>
<p>The lack of standardization in floating-point numbers at the mainframe level was an ongoing problem by the early 1970s those writing and maintaining higher level language source code. Floating-point compatibility across multiple computing systems was in desperate need of standardization by the early 1980s.</p>
<p>Prior to the <a href="http://en.wikipedia.org/wiki/IEEE-754" title="IEEE-754" class="mw-redirect">IEEE-754</a> standard, computers used many different forms of floating point.</p>
<p>These manufacturer floating-point standards differed in the word sizes, the format of the representations, and the rounding behavior of operations. These differing systems implemented different parts of the arithmetic in hardware and software, with varying accuracy.</p>
<p>The IEEE-754 standard was created in the early 1980s after word sizes of 32 bits (or 64) had been generally settled upon. The IEEE-754 standard was significantly based on a proposal from Intel who were designing the <a href="http://en.wikipedia.org/wiki/Intel_8087" title="Intel 8087">i8087</a> numerical coprocessor. Motorola that was designing the <a href="http://en.wikipedia.org/wiki/68000" title="68000" class="mw-redirect">68000</a> around the same time had significant input in the IEEE-754 standardization process as well.</p>
<p>Mathematician and computer scientist <a href="http://en.wikipedia.org/wiki/William_Kahan" title="William Kahan">Prof. William Kahan</a> at the <a href="http://en.wikipedia.org/wiki/University_of_California,_Berkeley" title="University of California, Berkeley">University of California, Berkeley</a> was the primary architect behind this proposal, along with his student Jerome Coonen at U.C. Berkeley and visiting Prof. Harold Stone, for which he was awarding the 1989 Turing award.<sup id="cite_ref-7" class="reference"><a href="#cite_note-7"><span>[</span>7<span>]</span></a></sup></p>
<p>Among the x86 innovations are these:</p>
<ul>
<li>A precisely specified encoding of the floating-point datums at the bit-string level, so that all compliant computers would interpret bit patterns the same way. This made it possible to transfer floating-point numbers from one computer to another after <a href="Endianness.html" title="Endianness">endianness</a> conversion.</li>
<li>A precisely specified behavior of the arithmetic operations: arithmetic operations were required to be correctly rounded, i.e. to give the same result as if infinitely precise arithmetic were used and then the result were rounded. This meant that a given program, with given data, would always produce the same result on any compliant computer, provided the same format were used internally and expressions were written in a non-ambiguous way. This helped reduce the almost mystical reputation that floating-point computation had for seemingly nondeterministic behavior.</li>
<li>The ability of exceptional conditions (overflow, divide by zero, etc.) to propagate through a computation in a benign manner and be handled by the software in a controlled way.</li>
</ul>
<h2><span class="mw-headline" id="IEEE_754:_floating_point_in_modern_computers">IEEE 754: floating point in modern computers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=5" title="Edit section: IEEE 754: floating point in modern computers">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="rellink relarticle mainarticle">Main article: <a href="http://en.wikipedia.org/wiki/IEEE_floating_point" title="IEEE floating point">IEEE floating point</a></div>
<table class="vertical-navbox nowraplinks plainlist" cellspacing="5" cellpadding="0" style="float:right;clear:right;width:22.0em;margin:0 0 1.0em 1.0em;background:#f9f9f9;border:1px solid #aaa;padding:0.2em;border-spacing:0.4em 0;text-align:center;line-height:1.4em;font-size:88%;">
<tr>
<th class="" style=";padding:0.2em 0.4em 0.2em;;font-size:145%;line-height:1.2em;"><a href="http://en.wikipedia.org/wiki/Floating-point" title="Floating-point" class="mw-redirect">Floating-point</a> <a href="http://en.wikipedia.org/wiki/Precision_(computer_science)" title="Precision (computer science)">precisions</a></th>
</tr>
<tr>
<th class="" style="padding:0.1em;;;"><a href="http://en.wikipedia.org/wiki/IEEE_floating_point" title="IEEE floating point">IEEE 754</a></th>
</tr>
<tr>
<td class="" style="padding:0 0.1em 0.4em;;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/16-bit" title="16-bit">16-bit</a>: <a href="http://en.wikipedia.org/wiki/Half-precision_floating-point_format" title="Half-precision floating-point format">Half</a> (binary16)</li>
<li><a href="http://en.wikipedia.org/wiki/32-bit" title="32-bit">32-bit</a>: <a href="http://en.wikipedia.org/wiki/Single-precision_floating-point_format" title="Single-precision floating-point format">Single</a> (binary32), <a href="http://en.wikipedia.org/wiki/Decimal32_floating-point_format" title="Decimal32 floating-point format">decimal32</a></li>
<li><a href="http://en.wikipedia.org/wiki/64-bit" title="64-bit" class="mw-redirect">64-bit</a>: <a href="http://en.wikipedia.org/wiki/Double-precision_floating-point_format" title="Double-precision floating-point format">Double</a> (binary64), <a href="http://en.wikipedia.org/wiki/Decimal64_floating-point_format" title="Decimal64 floating-point format">decimal64</a></li>
<li><a href="http://en.wikipedia.org/wiki/128-bit" title="128-bit">128-bit</a>: <a href="http://en.wikipedia.org/wiki/Quadruple-precision_floating-point_format" title="Quadruple-precision floating-point format">Quadruple</a> (binary128), <a href="http://en.wikipedia.org/wiki/Decimal128_floating-point_format" title="Decimal128 floating-point format">decimal128</a></li>
<li><a href="http://en.wikipedia.org/wiki/Extended_precision" title="Extended precision">Extended precision formats</a></li>
</ul>
</td>
</tr>
<tr>
<th class="" style="padding:0.1em;;;">Other</th>
</tr>
<tr>
<td class="" style="padding:0 0.1em 0.4em;;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Minifloat" title="Minifloat">Minifloat</a></li>
<li><a href="http://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic" title="Arbitrary-precision arithmetic">Arbitrary precision</a></li>
</ul>
</td>
</tr>
<tr>
<td style="text-align:right;font-size:115%;">
<div class="plainlinks hlist navbar mini" style="">
<ul>
<li class="nv-view"><a href="http://en.wikipedia.org/wiki/Template:Floating-point" title="Template:Floating-point"><span title="View this template" style="">v</span></a></li>
<li class="nv-talk"><a href="http://en.wikipedia.org/wiki/Template_talk:Floating-point" title="Template talk:Floating-point"><span title="Discuss this template" style="">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Floating-point&amp;action=edit"><span title="Edit this template" style="">e</span></a></li>
</ul>
</div>
</td>
</tr>
</table>
<p>The <a href="IEEE.html" title="IEEE" class="mw-redirect">IEEE</a> has standardized the computer representation for binary floating-point numbers in <a href="http://en.wikipedia.org/wiki/IEEE_floating_point" title="IEEE floating point">IEEE 754</a> (aka. IEC 60559). This standard is followed by almost all modern machines. Notable exceptions include IBM mainframes, which support <a href="http://en.wikipedia.org/wiki/IBM_Floating_Point_Architecture" title="IBM Floating Point Architecture">IBM's own format</a> (in addition to the IEEE 754 binary and decimal formats), and <a href="http://en.wikipedia.org/wiki/Cray" title="Cray">Cray</a> vector machines, where the <a href="http://en.wikipedia.org/wiki/Cray_T90" title="Cray T90">T90</a> series had an IEEE version, but the <a href="http://en.wikipedia.org/wiki/Cray_SV1" title="Cray SV1">SV1</a> still uses Cray floating-point format.</p>
<p>The standard provides for many closely related formats, differing in only a few details. Five of these formats are called <i>basic formats</i> and others are termed <i>extended formats</i>; three of these are especially widely used in computer hardware and languages:</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Single_precision" title="Single precision" class="mw-redirect">Single precision</a>, usually used to represent the "float" type in the C language family (though this is <a href="C_data_types.html#Basic_types" title="C data types">not guaranteed</a>). This is a binary format that occupies 32 bits (4 bytes) and its significand has a precision of 24 bits (about 7 decimal digits).</li>
<li><a href="Double_precision.html" title="Double precision" class="mw-redirect">Double precision</a>, usually used to represent the "double" type in the C language family (though this is <a href="C_data_types.html#Basic_types" title="C data types">not guaranteed</a>). This is a binary format that occupies 64 bits (8 bytes) and its significand has a precision of 53 bits (about 16 decimal digits).</li>
<li><a href="http://en.wikipedia.org/wiki/Extended_precision" title="Extended precision">Double extended</a>, also called "extended precision" format. This is a binary format that occupies at least 79 bits (80 if the hidden/implicit bit rule is not used) and its significand has a precision of at least 64 bits (about 19 decimal digits). A format satisfying the minimal requirements (64-bit precision, 15-bit exponent, thus fitting on 80 bits) is provided by the <a href="http://en.wikipedia.org/wiki/X86_architecture" title="X86 architecture" class="mw-redirect">x86 architecture</a>. In general on such processors, this format can be used with "<a href="http://en.wikipedia.org/wiki/Long_double" title="Long double">long double</a>" in the C language family (the <a href="C99.html" title="C99">C99</a> and <a href="C11_(C_standard_revision).html" title="C11 (C standard revision)">C11</a> standards "IEC 60559 floating-point arithmetic extension- Annex F" recommend the 80-bit extended format to be provided as "long double" when available). On other processors, "long double" may be a synonym for "double" if any form of extended precision is not available, or may stand for a larger format, such as quadruple precision.</li>
</ul>
<p>Increasing the precision of the floating point representation generally reduces the amount of accumulated <a href="http://en.wikipedia.org/wiki/Round-off_error" title="Round-off error">round-off error</a> caused by intermediate calculations.<sup id="cite_ref-8" class="reference"><a href="#cite_note-8"><span>[</span>8<span>]</span></a></sup></p>
<p>Less common IEEE formats include:</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Quadruple_precision" title="Quadruple precision" class="mw-redirect">Quadruple precision</a> (binary128). This is a binary format that occupies 128 bits (16 bytes) and its significand has a precision of 113 bits (about 34 decimal digits).</li>
<li><a href="http://en.wikipedia.org/wiki/Decimal64_floating-point_format" title="Decimal64 floating-point format">Double precision</a> (decimal64) and <a href="http://en.wikipedia.org/wiki/Decimal128_floating-point_format" title="Decimal128 floating-point format">quadruple precision</a> (decimal128) decimal floating-point formats. These formats, along with the <a href="http://en.wikipedia.org/wiki/Decimal32_floating-point_format" title="Decimal32 floating-point format">single precision</a> (decimal32) format, are intended for performing decimal rounding correctly.</li>
<li><a href="http://en.wikipedia.org/wiki/Half_precision" title="Half precision" class="mw-redirect">Half</a>, also called float16, a 16-bit floating-point value.</li>
</ul>
<p>Any integer with absolute value less than 2<sup>24</sup> can be exactly represented in the single precision format, and any integer with absolute value less than 2<sup>53</sup> can be exactly represented in the double precision format. Furthermore, a wide range of powers of 2 times such a number can be represented. These properties are sometimes used for purely integer data, to get 53-bit integers on platforms that have double precision floats but only 32-bit integers.</p>
<p>The standard specifies some special values, and their representation: positive <a href="http://en.wikipedia.org/wiki/Infinity" title="Infinity">infinity</a> (+∞), negative infinity (−∞), a <a href="http://en.wikipedia.org/wiki/Negative_zero" title="Negative zero" class="mw-redirect">negative zero</a> (−0) distinct from ordinary ("positive") zero, and "not a number" values (<a href="http://en.wikipedia.org/wiki/NaN" title="NaN">NaNs</a>).</p>
<p>Comparison of floating-point numbers, as defined by the IEEE standard, is a bit different from usual integer comparison. Negative and positive zero compare equal, and every NaN compares unequal to every value, including itself. All values except NaN are strictly smaller than +∞ and strictly greater than −∞. Finite floating-point numbers are ordered in the same way as their values (in the set of real numbers).</p>
<p>To a rough approximation, the bit representation of an IEEE binary floating-point number is proportional to its base 2 logarithm, with an average error of about 3%. (This is because the exponent field is in the more significant part of the datum.) This can be exploited in some applications, such as volume ramping in digital sound processing.</p>
<p>A project for revising the IEEE 754 standard was started in 2000 (see <a href="http://en.wikipedia.org/wiki/IEEE_754_revision" title="IEEE 754 revision">IEEE 754 revision</a>); it was completed and approved in June 2008. It includes decimal floating-point formats and a 16-bit floating-point format ("binary16"). binary16 has the same structure and rules as the older formats, with 1 sign bit, 5 exponent bits and 10 trailing significand bits. It is being used in the NVIDIA <a href="http://en.wikipedia.org/wiki/Cg_(programming_language)" title="Cg (programming language)">Cg</a> graphics language, and in the openEXR standard.<sup id="cite_ref-9" class="reference"><a href="#cite_note-9"><span>[</span>9<span>]</span></a></sup></p>
<h3><span class="mw-headline" id="Internal_representation">Internal representation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=6" title="Edit section: Internal representation">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Floating-point numbers are typically packed into a computer datum as the sign bit, the exponent field, and the significand (mantissa), from left to right. For the IEEE 754 binary formats (basic and extended) which have extant hardware implementations, they are apportioned as follows:</p>
<table class="wikitable" style="text-align: right;">
<tr>
<th>Type</th>
<th>Sign</th>
<th>Exponent</th>
<th>Significand</th>
<th>Total bits</th>
<th></th>
<th>Exponent bias</th>
<th>Bits precision</th>
<th>Number of decimal digits</th>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Half_precision" title="Half precision" class="mw-redirect">Half</a> (<a href="http://en.wikipedia.org/wiki/IEEE_floating_point" title="IEEE floating point">IEEE 754-2008</a>)</td>
<td>1</td>
<td>5</td>
<td>10</td>
<td>16</td>
<td></td>
<td>15</td>
<td>11</td>
<td>~3.3</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Single_precision" title="Single precision" class="mw-redirect">Single</a></td>
<td>1</td>
<td>8</td>
<td>23</td>
<td>32</td>
<td></td>
<td>127</td>
<td>24</td>
<td>~7.2</td>
</tr>
<tr>
<td><a href="Double_precision.html" title="Double precision" class="mw-redirect">Double</a></td>
<td>1</td>
<td>11</td>
<td>52</td>
<td>64</td>
<td></td>
<td>1023</td>
<td>53</td>
<td>~15.9</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Extended_precision" title="Extended precision">Double extended (80-bit)</a></td>
<td>1</td>
<td>15</td>
<td>64</td>
<td>80</td>
<td></td>
<td>16383</td>
<td>64</td>
<td>~19.2</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Quad_precision" title="Quad precision" class="mw-redirect">Quad</a></td>
<td>1</td>
<td>15</td>
<td>112</td>
<td>128</td>
<td></td>
<td>16383</td>
<td>113</td>
<td>~34.0</td>
</tr>
</table>
<p>While the exponent can be positive or negative, in binary formats it is stored as an unsigned number that has a fixed "bias" added to it. Values of all 0s in this field are reserved for the zeros and <a href="http://en.wikipedia.org/wiki/Subnormal_numbers" title="Subnormal numbers" class="mw-redirect">subnormal numbers</a>, values of all 1s are reserved for the infinities and NaNs. The exponent range for normalized numbers is [−126, 127] for single precision, [−1022, 1023] for double, or [−16382, 16383] for quad. Normalised numbers exclude subnormal values, zeros, infinities, and NaNs.</p>
<p>In the IEEE binary interchange formats the leading 1 bit of a normalized significand is not actually stored in the computer datum. It is called the "hidden" or "implicit" bit. Because of this, single precision format actually has a significand with 24 bits of precision, double precision format has 53, and quad has 113.</p>
<p>For example, it was shown above that π, rounded to 24 bits of precision, has:</p>
<ul>
<li>sign = 0&#160;; <i>e</i> = 1&#160;; <i>s</i> = 110010010000111111011011 (including the hidden bit)</li>
</ul>
<p>The sum of the exponent bias (127) and the exponent (1) is 128, so this is represented in single precision format as</p>
<ul>
<li>0 10000000 10010010000111111011011 (excluding the hidden bit) = 40490FDB<sup id="cite_ref-10" class="reference"><a href="#cite_note-10"><span>[</span>10<span>]</span></a></sup> as a <a href="http://en.wikipedia.org/wiki/Hexadecimal" title="Hexadecimal">hexadecimal</a> number.</li>
</ul>
<h3><span class="mw-headline" id="Special_values">Special values</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=7" title="Edit section: Special values">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<h4><span class="mw-headline" id="Signed_zero">Signed zero</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=8" title="Edit section: Signed zero">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="rellink relarticle mainarticle">Main article: <a href="http://en.wikipedia.org/wiki/Signed_zero" title="Signed zero">Signed zero</a></div>
<p>In the IEEE 754 standard, zero is signed, meaning that there exist both a "positive zero" (+0) and a "negative zero" (−0). In most <a href="http://en.wikipedia.org/wiki/Run-time_environment" title="Run-time environment" class="mw-redirect">run-time environments</a>, positive zero is usually printed as "0", while negative zero may be printed as "-0". The two values behave as equal in numerical comparisons, but some operations return different results for +0 and −0. For instance, 1/(−0) returns negative infinity, while 1/+0 returns positive infinity (so that the identity 1/(1/±∞) = ±∞ is maintained). Other common <a href="http://en.wikipedia.org/wiki/Discontinuous_function" title="Discontinuous function" class="mw-redirect">functions with a discontinuity</a> at x=0 which might treat +0 and −0 differently include <a href="http://en.wikipedia.org/wiki/Logarithm" title="Logarithm">log</a>(x), <a href="http://en.wikipedia.org/wiki/Signum_function" title="Signum function" class="mw-redirect">signum</a>(x), and the <a href="http://en.wikipedia.org/wiki/Square_root#Principal_square_root_of_a_complex_number" title="Square root">principal square root</a> of <span class="nowrap">y + xi</span> for any negative number y. As with any approximation scheme, operations involving "negative zero" can occasionally cause confusion. For example, in IEEE 754, <span class="nowrap">x == y</span> does not imply <span class="nowrap">1/x == 1/y</span>, as <span class="nowrap">0 == -0</span> but <span class="nowrap">1/0&#160;!= 1/-0</span>.<sup id="cite_ref-goldberg_acm_1991_11-0" class="reference"><a href="#cite_note-goldberg_acm_1991-11"><span>[</span>11<span>]</span></a></sup></p>
<h4><span class="mw-headline" id="Subnormal_numbers">Subnormal numbers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=9" title="Edit section: Subnormal numbers">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="rellink relarticle mainarticle">Main article: <a href="http://en.wikipedia.org/wiki/Subnormal_numbers" title="Subnormal numbers" class="mw-redirect">Subnormal numbers</a></div>
<p>Subnormal values fill the <a href="http://en.wikipedia.org/wiki/Arithmetic_underflow" title="Arithmetic underflow">underflow</a> gap with values where the absolute distance between them are the same as for adjacent values just outside of the underflow gap. This is an improvement over the older practice to just have zero in the underflow gap, and where underflowing results were replaced by zero (flush to zero).</p>
<p>Modern floating-point hardware usually handles subnormal values (as well as normal values), and does not require software emulation for subnormals.</p>
<h4><span class="mw-headline" id="Infinities">Infinities</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=10" title="Edit section: Infinities">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="rellink boilerplate seealso">For more details on the concept of infinite, see <a href="http://en.wikipedia.org/wiki/Infinity" title="Infinity">Infinity</a>.</div>
<p>The infinities of the <a href="http://en.wikipedia.org/wiki/Extended_real_number_line" title="Extended real number line">extended real number line</a> can be represented in IEEE floating-point datatypes, just like ordinary floating-point values like 1, 1.5, etc. They are not error values in any way, though they are often (but not always, as it depends on the rounding) used as replacement values when there is an <a href="http://en.wikipedia.org/wiki/Arithmetic_overflow" title="Arithmetic overflow">overflow</a>. Upon a divide-by-zero exception, a positive or negative infinity is returned as an exact result. An infinity can also be introduced as a numeral (like C's "INFINITY" macro, or "∞" if the programming language allows that syntax).</p>
<p>IEEE 754 requires infinities to be handled in a reasonable way, such as</p>
<ul>
<li>(+∞) + (+7) = (+∞)</li>
<li>(+∞) × (−2) = (−∞)</li>
<li>(+∞) × 0 = NaN – there is no meaningful thing to do</li>
</ul>
<h4><span class="mw-headline" id="NaNs">NaNs</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=11" title="Edit section: NaNs">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="rellink relarticle mainarticle">Main article: <a href="http://en.wikipedia.org/wiki/NaN" title="NaN">NaN</a></div>
<p>IEEE 754 specifies a special value called "Not a Number" (NaN) to be returned as the result of certain "invalid" operations, such as 0/0, ∞×0, or sqrt(−1). In general, NaNs will be propagated i.e. most operations involving a NaN will result in a NaN, although functions that would give some defined result for any given floating-point value will do so for NaNs as well, e.g. NaN ^ 0 == 1. There are two kinds of NaNs: the default <i>quiet</i> NaNs and, optionally, <i>signaling</i> NaNs. A signaling NaN in any arithmetic operation (including numerical comparisons) will cause an "invalid" <a href="http://en.wikipedia.org/wiki/Exception_(computing)" title="Exception (computing)" class="mw-redirect">exception</a> to be signaled.</p>
<p>The representation of NaNs specified by the standard has some unspecified bits that could be used to encode the type or source of error; but there is no standard for that encoding. In theory, signaling NaNs could be used by a <a href="http://en.wikipedia.org/wiki/Runtime_system" title="Runtime system" class="mw-redirect">runtime system</a> to flag uninitialised variables, or extend the floating-point numbers with other special values without slowing down the computations with ordinary values, although such extensions are not common.</p>
<h4><span class="mw-headline" id="IEEE_754_design_rationale">IEEE 754 design rationale</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=12" title="Edit section: IEEE 754 design rationale">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="thumb tright">
<div class="thumbinner" style="width:222px;"><a href="http://en.wikipedia.org/wiki/File:William_Kahan.jpg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/William_Kahan.jpg/220px-William_Kahan.jpg" width="220" height="155" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/b/b1/William_Kahan.jpg/330px-William_Kahan.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/b/b1/William_Kahan.jpg 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:William_Kahan.jpg" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf17/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
<a href="http://en.wikipedia.org/wiki/William_Kahan" title="William Kahan">William Kahan</a>. A primary architect of the Intel <a href="http://en.wikipedia.org/wiki/80x87" title="80x87" class="mw-redirect">80x87</a> floating-point coprocessor and <a href="IEEE_754.html" title="IEEE 754" class="mw-redirect">IEEE 754</a> floating-point standard.</div>
</div>
</div>
<p>It is a common misconception that the more esoteric features of the IEEE 754 standard discussed here, such as extended formats, NaN, infinities, subnormals etc., are only of interest to <a href="Numerical_analysis.html" title="Numerical analysis">numerical analysts</a>, or for advanced numerical applications; in fact the opposite is true: these features are designed to give safe robust defaults for numerically unsophisticated programmers, in addition to supporting sophisticated numerical libraries by experts. The key designer of IEEE 754, <a href="http://en.wikipedia.org/wiki/William_Kahan" title="William Kahan">Prof. W. Kahan</a> notes that it is incorrect to "... [deem] features of IEEE Standard 754 for Binary Floating- Point Arithmetic that ...[are] not appreciated to be features usable by none but numerical experts. The facts are quite the opposite. In 1977 those features were designed into the Intel 8087 to serve the widest possible market... . Error-analysis tells us how to design floating-point arithmetic, like IEEE Standard 754, moderately tolerant of well-meaning ignorance among programmers".<sup id="cite_ref-JavaHurt_12-0" class="reference"><a href="#cite_note-JavaHurt-12"><span>[</span>12<span>]</span></a></sup></p>
<ul>
<li>The special values such as infinity and NaN ensure that the floating-point arithmetic is algebraically completed, such that every floating-point operation produces a well-defined result and will not by default throw a machine interrupt or trap. Moreover, the choices of special values returned in exceptional cases were designed to give the correct answer in many cases, e.g. continued fractions such as R(z)&#160;:= 7 − 3/(z − 2 − 1/(z − 7 + 10/(z − 2 − 2/(z − 3)))) will give the correct answer in all inputs under IEEE-754 arithmetic as the potential divide by zero in e.g. R(3)=4.6 is correctly handled as +infinity and so can be safely ignored.<sup id="cite_ref-whyieee_13-0" class="reference"><a href="#cite_note-whyieee-13"><span>[</span>13<span>]</span></a></sup> As noted by Kahan, the unhandled floating point overflow exception that caused the <a href="http://en.wikipedia.org/wiki/Cluster_(spacecraft)" title="Cluster (spacecraft)">loss of an Ariane 5</a> rocket would not have happened under IEEE 754 floating point.<sup id="cite_ref-JavaHurt_12-1" class="reference"><a href="#cite_note-JavaHurt-12"><span>[</span>12<span>]</span></a></sup></li>
<li>Subnormal numbers ensure that for <i>finite</i> floating-point numbers x and y, x - y == 0 if and only if x == y, as expected, but which did not hold under earlier floating-point representations.<sup id="cite_ref-14" class="reference"><a href="#cite_note-14"><span>[</span>14<span>]</span></a></sup></li>
<li>On the design rationale of the x87 <a href="http://en.wikipedia.org/wiki/Extended_precision" title="Extended precision">80-bit format</a>, Prof. Kahan notes: "This Extended format is designed to be used, with negligible loss of speed, for all but the simplest arithmetic with float and double operands. For example, it should be used for scratch variables in loops that implement recurrences like polynomial evaluation, scalar products, partial and continued fractions. It often averts premature Over/Underflow or severe local cancellation that can spoil simple algorithms.<sup id="cite_ref-Baleful_15-0" class="reference"><a href="#cite_note-Baleful-15"><span>[</span>15<span>]</span></a></sup> Computing intermediate results in an extended format with high precision and extended exponent has precedents in the historical practice of scientific <a href="http://en.wikipedia.org/wiki/Significant_figures#Arithmetic" title="Significant figures">calculation</a> and in the design of scientific calculators e.g. Hewlett- Packard’s financial calculators performed arithmetic and financial functions to three more significant decimals than they stored or displayed.<sup id="cite_ref-Baleful_15-1" class="reference"><a href="#cite_note-Baleful-15"><span>[</span>15<span>]</span></a></sup> The implementation of extended precision enabled standard elementary function libraries to be readily developed that normally gave double precision results within one <a href="http://en.wikipedia.org/wiki/Unit_in_the_last_place" title="Unit in the last place">unit in the last place</a> (ULP) at high speed.</li>
<li>Correct rounding of values to the nearest representable value avoids systematic biases in calculations and slows the growth of errors. Rounding ties to even removes the statistical bias that can occur in adding similar figures.</li>
<li>Directed rounding was intended as an aid with checking error bounds, for instance in interval arithmetic. It is also used in the implementation of some functions.</li>
<li>The mathematical basis of the operations enabled high precision multiword arithmetic subroutines to be built relatively easily.</li>
<li>The single and double precision formats were designed to be easy to sort without using floating-point hardware.</li>
</ul>
<h2><span class="mw-headline" id="Representable_numbers.2C_conversion_and_rounding">Representable numbers, conversion and rounding</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=13" title="Edit section: Representable numbers, conversion and rounding">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>By their nature, all numbers expressed in floating-point format are <a href="http://en.wikipedia.org/wiki/Rational_number" title="Rational number">rational numbers</a> with a terminating expansion in the relevant base (for example, a terminating decimal expansion in base-10, or a terminating binary expansion in base-2). Irrational numbers, such as <a href="http://en.wikipedia.org/wiki/Pi" title="Pi">π</a> or √2, or non-terminating rational numbers, must be approximated. The number of digits (or bits) of precision also limits the set of rational numbers that can be represented exactly. For example, the number 123456789 cannot be exactly represented if only eight decimal digits of precision are available.</p>
<p>When a number is represented in some format (such as a character string) which is not a native floating-point representation supported in a computer implementation, then it will require a conversion before it can be used in that implementation. If the number can be represented exactly in the floating-point format then the conversion is exact. If there is not an exact representation then the conversion requires a choice of which floating-point number to use to represent the original value. The representation chosen will have a different value to the original, and the value thus adjusted is called the <i>rounded value</i>.</p>
<p>Whether or not a rational number has a terminating expansion depends on the base. For example, in base-10 the number 1/2 has a terminating expansion (0.5) while the number 1/3 does not (0.333...). In base-2 only rationals with denominators that are powers of 2 (such as 1/2 or 3/16) are terminating. Any rational with a denominator that has a prime factor other than 2 will have an infinite binary expansion. This means that numbers which appear to be short and exact when written in decimal format may need to be approximated when converted to binary floating-point. For example, the decimal number 0.1 is not representable in binary floating-point of any finite precision; the exact binary representation would have a "1100" sequence continuing endlessly:</p>
<dl>
<dd><i>e</i> = −4; <i>s</i> = 1100110011001100110011001100110011...,</dd>
</dl>
<p>where, as previously, <i>s</i> is the significand and <i>e</i> is the exponent.</p>
<p>When rounded to 24 bits this becomes</p>
<dl>
<dd><i>e</i> = −4; <i>s</i> = 110011001100110011001101,</dd>
</dl>
<p>which is actually 0.100000001490116119384765625 in decimal.</p>
<p>As a further example, the real number <a href="http://en.wikipedia.org/wiki/Pi" title="Pi">π</a>, represented in binary as an infinite series of bits is</p>
<dl>
<dd>11.0010010000111111011010101000100010000101101000110000100011010011...</dd>
</dl>
<p>but is</p>
<dl>
<dd>11.0010010000111111011011</dd>
</dl>
<p>when approximated by <a href="http://en.wikipedia.org/wiki/Rounding" title="Rounding">rounding</a> to a precision of 24 bits.</p>
<p>In binary single-precision floating-point, this is represented as <i>s</i>&#160;=&#160;1.10010010000111111011011 with <i>e</i>&#160;=&#160;1. This has a decimal value of</p>
<dl>
<dd><b>3.141592</b>7410125732421875,</dd>
</dl>
<p>whereas a more accurate approximation of the true value of π is</p>
<dl>
<dd><b>3.14159265358979323846264338327950</b>...</dd>
</dl>
<p>The result of rounding differs from the true value by about 0.03 parts per million, and matches the decimal representation of π in the first 7 digits. The difference is the <a href="http://en.wikipedia.org/wiki/Discretization_error" title="Discretization error">discretization error</a> and is limited by the <a href="http://en.wikipedia.org/wiki/Machine_epsilon" title="Machine epsilon">machine epsilon</a>.</p>
<p>The arithmetical difference between two consecutive representable floating-point numbers which have the same exponent is called a <a href="http://en.wikipedia.org/wiki/Unit_in_the_last_place" title="Unit in the last place">unit in the last place</a> (ULP). For example, if there is no representable number lying between the representable numbers 1.45a70c22<sub>hex</sub> and 1.45a70c24<sub>hex</sub>, the ULP is 2×16<sup>−8</sup>, or 2<sup>−31</sup>. For numbers with a base-2 exponent part of 0, i.e. numbers with an absolute value higher than or equal to 1 but lower than 2, an ULP is exactly 2<sup>−23</sup> or about 10<sup>−7</sup> in single precision, and exactly 2<sup>−53</sup> or about 10<sup>−16</sup> in double precision. The mandated behavior of IEEE-compliant hardware is that the result be within one-half of a ULP.</p>
<h3><span class="mw-headline" id="Rounding_modes">Rounding modes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=14" title="Edit section: Rounding modes">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Rounding is used when the exact result of a floating-point operation (or a conversion to floating-point format) would need more digits than there are digits in the significand. IEEE 754 requires <i>correct rounding</i>: that is, the rounded result is as if infinitely precise arithmetic was used to compute the value and then rounded (although in implementation only three extra bits are needed to ensure this). There are several different <a href="http://en.wikipedia.org/wiki/Rounding" title="Rounding">rounding schemes</a> (or <i>rounding modes</i>). Historically, <a href="http://en.wikipedia.org/wiki/Truncation" title="Truncation">truncation</a> was the typical approach. Since the introduction of IEEE 754, the default method (<i><a href="http://en.wikipedia.org/wiki/Rounding" title="Rounding">round to nearest, ties to even</a></i>, sometimes called Banker's Rounding) is more commonly used. This method rounds the ideal (infinitely precise) result of an arithmetic operation to the nearest representable value, and gives that representation as the result.<sup id="cite_ref-16" class="reference"><a href="#cite_note-16"><span>[</span>16<span>]</span></a></sup> In the case of a tie, the value that would make the significand end in an even digit is chosen. The IEEE 754 standard requires the same rounding to be applied to all fundamental algebraic operations, including square root and conversions, when there is a numeric (non-NaN) result. It means that the results of IEEE 754 operations are completely determined in all bits of the result, except for the representation of NaNs. ("Library" functions such as cosine and log are not mandated.)</p>
<p>Alternative rounding options are also available. IEEE 754 specifies the following rounding modes:</p>
<ul>
<li>round to nearest, where ties round to the nearest even digit in the required position (the default and by far the most common mode)</li>
<li>round to nearest, where ties round away from zero (optional for binary floating-point and commonly used in decimal)</li>
<li>round up (toward +∞; negative results thus round toward zero)</li>
<li>round down (toward −∞; negative results thus round away from zero)</li>
<li>round toward zero (truncation; it is similar to the common behavior of float-to-integer conversions, which convert −3.9 to −3 and 3.9 to 3)</li>
</ul>
<p>Alternative modes are useful when the amount of error being introduced must be bounded. Applications that require a bounded error are multi-precision floating-point, and <a href="http://en.wikipedia.org/wiki/Interval_arithmetic" title="Interval arithmetic">interval arithmetic</a>. The alternative rounding modes are also useful in diagnosing numerical instability: if the results of a subroutine vary substantially between rounding to + and - infinity then it is likely numerically unstable and affected by round-off error.<sup id="cite_ref-name_17-0" class="reference"><a href="#cite_note-name-17"><span>[</span>17<span>]</span></a></sup></p>
<h2><span class="mw-headline" id="Floating-point_arithmetic_operations">Floating-point arithmetic operations</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=15" title="Edit section: Floating-point arithmetic operations">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>For ease of presentation and understanding, decimal <a href="http://en.wikipedia.org/wiki/Radix" title="Radix">radix</a> with 7 digit precision will be used in the examples, as in the IEEE 754 <i>decimal32</i> format. The fundamental principles are the same in any <a href="http://en.wikipedia.org/wiki/Radix" title="Radix">radix</a> or precision, except that normalization is optional (it does not affect the numerical value of the result). Here, <i>s</i> denotes the significand and <i>e</i> denotes the exponent.</p>
<h3><span class="mw-headline" id="Addition_and_subtraction">Addition and subtraction</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=16" title="Edit section: Addition and subtraction">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>A simple method to add floating-point numbers is to first represent them with the same exponent. In the example below, the second number is shifted right by three digits, and we then proceed with the usual addition method:</p>
<pre>
  123456.7 = 1.234567 × 10^5
  101.7654 = 1.017654 × 10^2 = 0.001017654 × 10^5
</pre>
<pre>
  Hence:
  123456.7 + 101.7654 = (1.234567 × 10^5) + (1.017654 × 10^2)
                      = (1.234567 × 10^5) + (0.001017654 × 10^5)
                      = (1.234567 + 0.001017654) × 10^5
                      =  1.235584654 × 10^5
</pre>
<p>In detail:</p>
<pre>
  e=5;  s=1.234567     (123456.7)
+ e=2;  s=1.017654     (101.7654)
</pre>
<pre>
  e=5;  s=1.234567
+ e=5;  s=0.001017654  (after shifting)
--------------------
  e=5;  s=1.235584654  (true sum: 123558.4654)
</pre>
<p>This is the true result, the exact sum of the operands. It will be rounded to seven digits and then normalized if necessary. The final result is</p>
<pre>
  e=5;  s=1.235585    (final sum: 123558.5)
</pre>
<p>Note that the low three digits of the second operand (654) are essentially lost. This is <a href="http://en.wikipedia.org/wiki/Round-off_error" title="Round-off error">round-off error</a>. In extreme cases, the sum of two non-zero numbers may be equal to one of them:</p>
<pre>
  e=5;  s=1.234567
+ e=−3; s=9.876543
</pre>
<pre>
  e=5;  s=1.234567
+ e=5;  s=0.00000009876543 (after shifting)
----------------------
  e=5;  s=1.23456709876543 (true sum)
  e=5;  s=1.234567         (after rounding/normalization)
</pre>
<p>Note that in the above conceptual examples it would appear that a large number of extra digits would need to be provided by the adder to ensure correct rounding: in fact for binary addition or subtraction using careful implementation techniques only two extra <i>guard</i> bits and one extra <i>sticky</i> bit need to be carried beyond the precision of the operands.<sup id="cite_ref-goldberg_acm_1991_11-1" class="reference"><a href="#cite_note-goldberg_acm_1991-11"><span>[</span>11<span>]</span></a></sup></p>
<p>Another problem of loss of significance occurs when two close numbers are subtracted. In the following example <i>e</i>&#160;=&#160;5; <i>s</i>&#160;=&#160;1.234571 and <i>e</i>&#160;=&#160;5; <i>s</i>&#160;=&#160;1.234567 are representations of the rationals 123457.1467 and 123456.659.</p>
<pre>
  e=5;  s=1.234571
− e=5;  s=1.234567
----------------
  e=5;  s=0.000004
  e=−1; s=4.000000 (after rounding/normalization)
</pre>
<p>The best representation of this difference is <i>e</i>&#160;=&#160;−1; <i>s</i>&#160;=&#160;4.877000, which differs more than 20% from <i>e</i>&#160;=&#160;−1; <i>s</i>&#160;=&#160;4.000000. In extreme cases, all significant digits of precision can be lost (although gradual underflow ensures that the result will not be zero unless the two operands were equal). This <i><a href="http://en.wikipedia.org/wiki/Loss_of_significance" title="Loss of significance">cancellation</a></i> illustrates the danger in assuming that all of the digits of a computed result are meaningful. Dealing with the consequences of these errors is a topic in <a href="Numerical_analysis.html" title="Numerical analysis">numerical analysis</a>; see also <a href="#Accuracy_problems">Accuracy problems</a>.</p>
<h3><span class="mw-headline" id="Multiplication_and_division">Multiplication and division</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=17" title="Edit section: Multiplication and division">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>To multiply, the significands are multiplied while the exponents are added, and the result is rounded and normalized.</p>
<pre>
  e=3;  s=4.734612
× e=5;  s=5.417242
-----------------------
  e=8;  s=25.648538980104 (true product)
  e=8;  s=25.64854        (after rounding)
  e=9;  s=2.564854        (after normalization)
</pre>
<p>Similarly, division is accomplished by subtracting the divisor's exponent from the dividend's exponent, and dividing the dividend's significand by the divisor's significand.</p>
<p>There are no cancellation or absorption problems with multiplication or division, though small errors may accumulate as operations are performed in succession.<sup id="cite_ref-goldberg_18-0" class="reference"><a href="#cite_note-goldberg-18"><span>[</span>18<span>]</span></a></sup> In practice, the way these operations are carried out in digital logic can be quite complex (see <a href="http://en.wikipedia.org/wiki/Booth%27s_multiplication_algorithm" title="Booth's multiplication algorithm">Booth's multiplication algorithm</a> and <a href="http://en.wikipedia.org/wiki/Division_algorithm" title="Division algorithm">Division algorithm</a>).<sup id="cite_ref-19" class="reference"><a href="#cite_note-19"><span>[</span>19<span>]</span></a></sup> For a fast, simple method, see the <a href="http://en.wikipedia.org/wiki/Horner_scheme#Floating_point_multiplication_and_division" title="Horner scheme" class="mw-redirect">Horner method</a>.</p>
<h2><span class="mw-headline" id="Dealing_with_exceptional_cases">Dealing with exceptional cases</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=18" title="Edit section: Dealing with exceptional cases">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Floating-point computation in a computer can run into three kinds of problems:</p>
<ul>
<li>An operation can be mathematically undefined, such as ∞/∞, or division by zero.</li>
<li>An operation can be legal in principle, but not supported by the specific format, for example, calculating the square root of −1 or the inverse sine of 2 (both of which result in <a href="Complex_number.html" title="Complex number">complex numbers</a>).</li>
<li>An operation can be legal in principle, but the result can be impossible to represent in the specified format, because the exponent is too large or too small to encode in the exponent field. Such an event is called an <a href="http://en.wikipedia.org/wiki/Arithmetic_overflow" title="Arithmetic overflow">overflow</a> (exponent too large), <a href="http://en.wikipedia.org/wiki/Arithmetic_underflow" title="Arithmetic underflow">underflow</a> (exponent too small) or <a href="http://en.wikipedia.org/wiki/Denormal_number" title="Denormal number">denormalization</a> (precision loss).</li>
</ul>
<p>Prior to the IEEE standard, such conditions usually caused the program to terminate, or triggered some kind of <a href="http://en.wikipedia.org/wiki/Trap_(computing)" title="Trap (computing)">trap</a> that the programmer might be able to catch. How this worked was system-dependent, meaning that floating-point programs were not <a href="Porting.html" title="Porting">portable</a>. (Note that the term "exception" as used in IEEE-754 is a general term meaning an exceptional condition, which is not necessarily an error, and is a different usage to that typically defined in programming languages such as a C++ or Java, in which an "<a href="http://en.wikipedia.org/wiki/Exception_handling" title="Exception handling">exception</a>" is an alternative flow of control, closer to what is termed a "trap" in IEEE-754 terminology).</p>
<p>Here, the required default method of handling exceptions according to IEEE 754 is discussed (the IEEE-754 optional trapping and other "alternate exception handling" modes are not discussed). Arithmetic exceptions are (by default) required to be recorded in "sticky" status flag bits. That they are "sticky" means that they are not reset by the next (arithmetic) operation, but stay set until explicitly reset. The use of "sticky" flags thus allows for testing of exceptional conditions to be delayed until after a full floating-point expression or subroutine: without them exceptional conditions that could not be otherwise ignored would require explicit testing immediately after every floating-point operation. By default, an operation always returns a result according to specification without interrupting computation. For instance, 1/0 returns +∞, while also setting the divide-by-zero flag bit (this default of ∞ is designed so as to often return a finite result when used in subsequent operations and so be safely ignored).</p>
<p>The original IEEE 754 standard, however, failed to recommend operations to handle such sets of arithmetic exception flag bits. So while these were implemented in hardware, initially programming language implementations typically did not provide a means to access them (apart from assembler). Over time some programming language standards (e.g., <a href="C99.html" title="C99">C99</a>/C11 and Fortran) have been updated to specify methods to access and change status flag bits. The 2008 version of the IEEE 754 standard now specifies a few operations for accessing and handling the arithmetic flag bits. The programming model is based on a single thread of execution and use of them by multiple threads has to be handled by a <a href="http://en.wikipedia.org/wiki/Concurrency_(computer_science)" title="Concurrency (computer science)">means</a> outside of the standard (e.g. <a href="C11_(C_standard_revision).html" title="C11 (C standard revision)">C11</a> specifies that the flags have <a href="http://en.wikipedia.org/wiki/Thread-local_storage" title="Thread-local storage">thread-local storage</a>).</p>
<p>IEEE 754 specifies five arithmetic exceptions that are to be recorded in the status flags ("sticky bits"):</p>
<ul>
<li><b>inexact</b>, set if the rounded (and returned) value is different from the mathematically exact result of the operation.</li>
<li><b>underflow</b>, set if the rounded value is tiny (as specified in IEEE 754) <i>and</i> inexact (or maybe limited to if it has denormalisation loss, as per the 1984 version of IEEE 754), returning a subnormal value including the zeros.</li>
<li><b>overflow</b>, set if the absolute value of the rounded value is too large to be represented. An infinity or maximal finite value is returned, depending on which rounding is used.</li>
<li><b>divide-by-zero</b>, set if the result is infinite given finite operands, returning an infinity, either +∞ or −∞.</li>
<li><b>invalid</b>, set if a real-valued result cannot be returned e.g. sqrt(−1) or 0/0, returning a quiet NaN.</li>
</ul>
<div class="thumb tleft">
<div class="thumbinner" style="width:202px;"><a href="http://en.wikipedia.org/wiki/File:Resistors_in_Parallel.svg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/64/Resistors_in_Parallel.svg/200px-Resistors_in_Parallel.svg.png" width="200" height="80" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/6/64/Resistors_in_Parallel.svg/300px-Resistors_in_Parallel.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/6/64/Resistors_in_Parallel.svg/400px-Resistors_in_Parallel.svg.png 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Resistors_in_Parallel.svg" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf17/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Fig. 1: resistances in parallel, with total resistance <img class="tex" alt="R_{tot}" src="http://upload.wikimedia.org/math/7/b/2/7b22dd5502a0bfb41bd2881cc2751345.png" /></div>
</div>
</div>
<p>The default return value for each of the exceptions is designed to give the correct result in the majority of cases such that the exceptions can be ignored in the majority of codes. <i>inexact</i> returns a correctly rounded result, and <i>underflow</i> returns a denormalised small value and so can almost always be ignored.<sup id="cite_ref-20" class="reference"><a href="#cite_note-20"><span>[</span>20<span>]</span></a></sup> <i>divide-by-zero</i> returns infinity exactly, which will typically then divide a finite number and so give zero, or else will give an <i>invalid</i> exception subsequently if not, and so can also typically be ignored. For example, the effective resistance of n resistors in parallel (see fig. 1) is given by <img class="tex" alt="R_{tot}=1/(1/R_1+1/R_2+...+1/R_n)" src="http://upload.wikimedia.org/math/7/7/9/779b2f0bf43cff7d3d7a0cceabcf7b92.png" />. If a short-circuit develops with <img class="tex" alt="R_1" src="http://upload.wikimedia.org/math/b/e/4/be473692ca1cbc48985e5e93af6755bf.png" /> set to 0, <img class="tex" alt="1/R_1" src="http://upload.wikimedia.org/math/5/b/5/5b5c2c4187c91c9b936829930b275878.png" /> will return +infinity which will give a final <img class="tex" alt="R_{tot}" src="http://upload.wikimedia.org/math/7/b/2/7b22dd5502a0bfb41bd2881cc2751345.png" /> of 0, as expected<sup id="cite_ref-21" class="reference"><a href="#cite_note-21"><span>[</span>21<span>]</span></a></sup> (see the continued fraction example of <a href="Floating_point.html#IEEE_754:_floating_point_in_modern_computers" title="Floating point">IEEE 754 design rationale</a> for another example).</p>
<p><i>Overflow</i> and <i>invalid</i> exceptions can typically not be ignored, but do not necessarily represent errors: for example, a <a href="http://en.wikipedia.org/wiki/Zero_of_a_function" title="Zero of a function">root-finding</a> routine, as part of its normal operation, may evaluate a passed-in function at values outside of its domain, returning NaN and an <i>invalid</i> exception flag to be ignored until finding a useful start point.<sup id="cite_ref-22" class="reference"><a href="#cite_note-22"><span>[</span>22<span>]</span></a></sup></p>
<p><br /></p>
<h2><span class="mw-headline" id="Accuracy_problems">Accuracy problems</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=19" title="Edit section: Accuracy problems">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The fact that floating-point numbers cannot precisely represent all real numbers, and that floating-point operations cannot precisely represent true arithmetic operations, leads to many surprising situations. This is related to the finite <a href="http://en.wikipedia.org/wiki/Precision_(computer_science)" title="Precision (computer science)">precision</a> with which computers generally represent numbers.</p>
<p>For example, the non-representability of 0.1 and 0.01 (in binary) means that the result of attempting to square 0.1 is neither 0.01 nor the representable number closest to it. In 24-bit (single precision) representation, 0.1 (decimal) was given previously as <i>e</i>&#160;=&#160;−4; <i>s</i>&#160;=&#160;110011001100110011001101, which is</p>
<dl>
<dd>0.100000001490116119384765625 exactly.</dd>
</dl>
<p>Squaring this number gives</p>
<dl>
<dd>0.010000000298023226097399174250313080847263336181640625 exactly.</dd>
</dl>
<p>Squaring it with single-precision floating-point hardware (with rounding) gives</p>
<dl>
<dd>0.010000000707805156707763671875 exactly.</dd>
</dl>
<p>But the representable number closest to 0.01 is</p>
<dl>
<dd>0.009999999776482582092285156250 exactly.</dd>
</dl>
<p>Also, the non-representability of π (and π/2) means that an attempted computation of tan(π/2) will not yield a result of infinity, nor will it even overflow. It is simply not possible for standard floating-point hardware to attempt to compute tan(π/2), because π/2 cannot be represented exactly. This computation in C:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="coMULTI">/* Enough digits to be sure we get the correct approximation. */</span>
<span class="kw4">double</span> pi <span class="sy0">=</span> <span class="nu16">3.1415926535897932384626433832795</span><span class="sy0">;</span>
<span class="kw4">double</span> z <span class="sy0">=</span> <span class="kw3">tan</span><span class="br0">(</span>pi<span class="sy0">/</span><span class="nu16">2.0</span><span class="br0">)</span><span class="sy0">;</span>
</pre></div>
</div>
<p>will give a result of 16331239353195370.0. In single precision (using the tanf function), the result will be −22877332.0.</p>
<p>By the same token, an attempted computation of sin(π) will not yield zero. The result will be (approximately) 0.1225<span style="margin:0 .15em 0 .25em">×</span>10<sup>−15</sup> in double precision, or −0.8742<span style="margin:0 .15em 0 .25em">×</span>10<sup>−7</sup> in single precision.<sup id="cite_ref-23" class="reference"><a href="#cite_note-23"><span>[</span>23<span>]</span></a></sup></p>
<p>While floating-point addition and multiplication are both <a href="http://en.wikipedia.org/wiki/Commutative" title="Commutative" class="mw-redirect">commutative</a> (<i>a</i> + <i>b</i> = <i>b</i> + <i>a</i> and <i>a</i>×<i>b</i> = <i>b</i>×<i>a</i>), they are not necessarily <a href="http://en.wikipedia.org/wiki/Associative" title="Associative" class="mw-redirect">associative</a>. That is, (<i>a</i> + <i>b</i>) + <i>c</i> is not necessarily equal to <i>a</i> + (<i>b</i> + <i>c</i>). Using 7-digit mantissa decimal arithmetic:</p>
<pre>
 a = 1234.567, b = 45.67834, c = 0.0004
</pre>
<pre>
 (a + b) + c:
     1234.567   (a)
   +   45.67834 (b)
   ____________
     1280.24534   rounds to   1280.245
</pre>
<pre>
    1280.245  (a + b)
   +   0.0004 (c)
   ____________
    1280.2454   rounds to   <b>1280.245</b>  &lt;--- (a + b) + c
</pre>
<pre>
 a + (b + c):
   45.67834 (b)
 +  0.0004  (c)
 ____________
   45.67874
</pre>
<pre>
   1234.567   (a)
 +   45.67874 (b + c)
 ____________
   1280.24574   rounds to   <b>1280.246</b> &lt;--- a + (b + c)
</pre>
<p>They are also not necessarily <a href="http://en.wikipedia.org/wiki/Distributive" title="Distributive" class="mw-redirect">distributive</a>. That is, (<i>a</i> + <i>b</i>) ×<i>c</i> may not be the same as <i>a</i>×<i>c</i> + <i>b</i>×<i>c</i>:</p>
<pre>
 1234.567 × 3.333333 = 4115.223
 1.234567 × 3.333333 = 4.115223
                       4115.223 + 4.115223 = 4119.338
 but
 1234.567 + 1.234567 = 1235.802
                       1235.802 × 3.333333 = 4119.340
</pre>
<p>In addition to loss of significance, inability to represent numbers such as π and 0.1 exactly, and other slight inaccuracies, the following phenomena may occur:</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Loss_of_significance" title="Loss of significance">Cancellation</a>: subtraction of nearly equal operands may cause extreme loss of accuracy.<sup id="cite_ref-24" class="reference"><a href="#cite_note-24"><span>[</span>24<span>]</span></a></sup> When we subtract two almost equal numbers we set the most significant digits to zero, leaving ourselves with just the insignificant, and most erroneous, digits. For example, when determining a <a href="http://en.wikipedia.org/wiki/Derivative" title="Derivative">derivative</a> of a function the following formula is used:</li>
</ul>
<dl>
<dd><img class="tex" alt="Q(h) = \frac{f(a + h) - f(a)}{h}." src="http://upload.wikimedia.org/math/a/3/0/a302c220e330c52c50dbedeb7ff8859b.png" /></dd>
<dd>Intuitively one would want an <i>h</i> very close to zero, however when using floating-point operations, the smallest number won't give the best approximation of a derivative. As <i>h</i> grows smaller the difference between f (a + h) and f(a) grows smaller, cancelling out the most significant and least erroneous digits and making the most erroneous digits more important. As a result the smallest number of <i>h</i> possible will give a more erroneous approximation of a derivative than a somewhat larger number. This is perhaps the most common and serious accuracy problem.</dd>
</dl>
<ul>
<li>Conversions to integer are not intuitive: converting (63.0/9.0) to integer yields 7, but converting (0.63/0.09) may yield 6. This is because conversions generally truncate rather than round. <a href="http://en.wikipedia.org/wiki/Floor_and_ceiling_functions" title="Floor and ceiling functions">Floor and ceiling functions</a> may produce answers which are off by one from the intuitively expected value.</li>
<li>Limited exponent range: results might overflow yielding infinity, or underflow yielding a <a href="http://en.wikipedia.org/wiki/Subnormal_number" title="Subnormal number" class="mw-redirect">subnormal number</a> or zero. In these cases precision will be lost.</li>
<li>Testing for <a href="http://en.wikipedia.org/wiki/Division_by_zero#In_computer_arithmetic" title="Division by zero">safe division</a> is problematic: Checking that the divisor is not zero does not guarantee that a division will not overflow.</li>
<li>Testing for equality is problematic. Two computational sequences that are mathematically equal may well produce different floating-point values.</li>
</ul>
<h3><span class="mw-headline" id="Incidents">Incidents</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=20" title="Edit section: Incidents">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li>On 25 February 1991, a <a href="http://en.wikipedia.org/wiki/Loss_of_significance" title="Loss of significance">loss of significance</a> in a <a href="http://en.wikipedia.org/wiki/MIM-104_Patriot" title="MIM-104 Patriot">MIM-104 Patriot</a> missile battery prevented it intercepting an incoming <a href="http://en.wikipedia.org/wiki/Al_Hussein_(missile)" title="Al Hussein (missile)">Scud</a> missile in <a href="http://en.wikipedia.org/wiki/Dhahran" title="Dhahran">Dhahran</a>, <a href="http://en.wikipedia.org/wiki/Saudi_Arabia" title="Saudi Arabia">Saudi Arabia</a>, contributing to the death of 28 soldiers from the U.S. Army's <a href="http://en.wikipedia.org/wiki/14th_Quartermaster_Detachment" title="14th Quartermaster Detachment">14th Quartermaster Detachment</a>.<sup id="cite_ref-GAO_report_IMTEC_92-26_25-0" class="reference"><a href="#cite_note-GAO_report_IMTEC_92-26-25"><span>[</span>25<span>]</span></a></sup> See also: <a href="http://en.wikipedia.org/wiki/MIM-104_Patriot#Failure_at_Dhahran" title="MIM-104 Patriot">Failure at Dhahran</a></li>
</ul>
<h3><span class="mw-headline" id="Machine_precision_and_backward_error_analysis">Machine precision and backward error analysis</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=21" title="Edit section: Machine precision and backward error analysis">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><i>Machine precision</i> is a quantity that characterizes the accuracy of a floating-point system, and is used in <a href="http://en.wikipedia.org/wiki/Error_analysis#Error_analysis_in_numerical_modeling" title="Error analysis">backward error analysis</a> of floating-point algorithms. It is also known as unit roundoff or <i><a href="http://en.wikipedia.org/wiki/Machine_epsilon" title="Machine epsilon">machine epsilon</a></i>. Usually denoted Ε<sub>mach</sub>, its value depends on the particular rounding being used.</p>
<p>With rounding to zero,</p>
<dl>
<dd><img class="tex" alt="\Epsilon_\text{mach} = B^{1-P},\," src="http://upload.wikimedia.org/math/c/8/4/c844d729e0caf7827255c120c4d5dc77.png" /></dd>
</dl>
<p>whereas rounding to nearest,</p>
<dl>
<dd><img class="tex" alt="\Epsilon_\text{mach} = \tfrac{1}{2} B^{1-P}." src="http://upload.wikimedia.org/math/f/6/0/f609497c6a24be26ef17f415c35e656f.png" /></dd>
</dl>
<p>This is important since it bounds the <i><a href="http://en.wikipedia.org/wiki/Relative_error" title="Relative error" class="mw-redirect">relative error</a></i> in representing any non-zero real number x within the normalised range of a floating-point system:</p>
<dl>
<dd><img class="tex" alt="\left| \frac{fl(x) - x}{x} \right| \le \Epsilon_\text{mach}." src="http://upload.wikimedia.org/math/1/8/f/18f8b1f72daf487751a98b0822a57e0a.png" /></dd>
</dl>
<p>Backward error analysis, the theory of which was developed and popularized by <a href="http://en.wikipedia.org/wiki/James_H._Wilkinson" title="James H. Wilkinson">James H. Wilkinson</a>, can be used to establish that an algorithm implementing a numerical function is numerically stable.<sup id="cite_ref-RalstonReilly2003_26-0" class="reference"><a href="#cite_note-RalstonReilly2003-26"><span>[</span>26<span>]</span></a></sup> The basic approach is to show that although the calculated result, due to roundoff errors, will not be exactly correct, it is the exact solution to a nearby problem with slightly perturbed input data. If the perturbation required is small, on the order of the uncertainty in the input data, then the results are in some sense as accurate as the data "deserves". The algorithm is then defined as <i><a href="http://en.wikipedia.org/wiki/Numerical_stability#Forward.2C_backward.2C_and_mixed_stability" title="Numerical stability">backward stable</a></i>. Stability is a measure of the sensitivity to rounding errors of a given numerical procedure; by contrast, the <a href="http://en.wikipedia.org/wiki/Condition_number" title="Condition number">condition number</a> of a function for a given problem indicates the inherent sensitivity of the function to small perturbations in its input and is independent of the implementation used to solve the problem.<sup id="cite_ref-Einarsson2005_27-0" class="reference"><a href="#cite_note-Einarsson2005-27"><span>[</span>27<span>]</span></a></sup></p>
<p>As a trivial example, consider a simple expression giving the inner product of (length two) vectors <img class="tex" alt="x" src="http://upload.wikimedia.org/math/9/d/d/9dd4e461268c8034f5c8564e155c67a6.png" /> and <img class="tex" alt="y" src="http://upload.wikimedia.org/math/4/1/5/415290769594460e2e485922904f345d.png" />, then</p>
<dl>
<dd><img class="tex" alt="fl(x \cdot y)=fl(fl(x_1*y_1)+fl(x_2*y_2))" src="http://upload.wikimedia.org/math/7/3/a/73aa13baf7ccb369acbe70598483fac9.png" /> where <img class="tex" alt="fl()" src="http://upload.wikimedia.org/math/2/d/0/2d029573e0d81a5d5f8d9a2d944ddec6.png" /> indicates correctly rounded floating-point arithmetic
<dl>
<dd>
<dl>
<dd><img class="tex" alt="= fl((x_1*y_1)(1+\delta_1)+(x_2*y_2)(1+\delta_2))" src="http://upload.wikimedia.org/math/3/2/c/32c05ec51fee7b251ca6bb2037785b4e.png" /> where <img class="tex" alt="\delta_n \leq \Epsilon_\text{mach}" src="http://upload.wikimedia.org/math/9/b/6/9b6a53cbacaa64963a015b5e28a5293f.png" />, from above</dd>
<dd><img class="tex" alt="= ((x_1*y_1)(1+\delta_1)+(x_2*y_2)(1+\delta_2))(1+\delta_3)" src="http://upload.wikimedia.org/math/9/5/6/9566214d2e3d74e7888fb578cd8c4356.png" /></dd>
<dd><img class="tex" alt="= (x_1*y_1)(1+\delta_1)(1+\delta_3)+(x_2*y_2)(1+\delta_2)(1+\delta_3)" src="http://upload.wikimedia.org/math/5/3/8/53836c22ee0eea1e4e4b0c4b4790c083.png" /></dd>
</dl>
</dd>
</dl>
</dd>
</dl>
<p>and so</p>
<dl>
<dd><img class="tex" alt="fl(x \cdot y)=\hat{x} \cdot \hat{y}" src="http://upload.wikimedia.org/math/0/6/7/067eefee9145be8789df074db0b1b34e.png" /> where</dd>
<dd><img class="tex" alt="\hat{x}_1 = x_1(1+\delta_1)" src="http://upload.wikimedia.org/math/0/c/e/0cee0561d78b325589ee0d0c80a5a659.png" />; <img class="tex" alt="\hat{x}_2=x_2(1+\delta_2)" src="http://upload.wikimedia.org/math/7/b/f/7bf90e92f1f4b57160c643d4af6a0b68.png" />;</dd>
<dd><img class="tex" alt="\hat{y}_1 = y_1(1+\delta_3)" src="http://upload.wikimedia.org/math/9/5/c/95c5f0aba70c963d1b50af3b0fd46239.png" />; <img class="tex" alt="\hat{y}_2 = y_2(1+\delta_3)" src="http://upload.wikimedia.org/math/2/f/5/2f5e0be8bb0950d7915e265ad77b2011.png" /></dd>
<dd>where <img class="tex" alt="\delta_n \leq \Epsilon_\text{mach}" src="http://upload.wikimedia.org/math/9/b/6/9b6a53cbacaa64963a015b5e28a5293f.png" />, by definition</dd>
</dl>
<p>which is the sum of two slightly perturbed (on the order of Ε<sub>mach</sub>) input data, and so is backward stable. For more realistic examples in <a href="http://en.wikipedia.org/wiki/Numerical_linear_algebra" title="Numerical linear algebra">numerical linear algebra</a> see Higham 2002 and other references below).</p>
<h3><span class="mw-headline" id="Minimizing_the_effect_of_accuracy_problems">Minimizing the effect of accuracy problems</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=22" title="Edit section: Minimizing the effect of accuracy problems">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Although, as noted previously, individual arithmetic operations of IEEE 754 are guaranteed accurate to within half a ULP, more complicated formulae can suffer from larger errors due to round-off. The loss of accuracy can be substantial if a problem or its data are <a href="http://en.wikipedia.org/wiki/Condition_number" title="Condition number">ill-conditioned</a>, meaning that the correct result is hypersensitive to tiny perturbations in its data. However, even functions that are well-conditioned can suffer from large loss of accuracy if an algorithm <a href="http://en.wikipedia.org/wiki/Numerical_stability" title="Numerical stability">numerically unstable</a> for that data is used: apparently equivalent formulations of expressions in a programming language can differ markedly in their numerical stability. One approach to remove the risk of such loss of accuracy is the design and analysis of numerically stable algorithms, which is an aim of the branch of mathematics known as <a href="Numerical_analysis.html" title="Numerical analysis">numerical analysis</a>. Another approach that can protect against the risk of numerical instabilities is the computation of intermediate (scratch) values in an algorithm at a higher precision than the final result requires, which can remove, or reduce by orders of magnitude,<sup id="cite_ref-28" class="reference"><a href="#cite_note-28"><span>[</span>28<span>]</span></a></sup> such risk: <a href="http://en.wikipedia.org/wiki/Quadruple-precision_floating-point_format" title="Quadruple-precision floating-point format">IEEE 754 quadruple precision</a> and <a href="http://en.wikipedia.org/wiki/Extended_precision" title="Extended precision">extended precision</a> are designed for this purpose when computing at double precision.<sup id="cite_ref-debug_29-0" class="reference"><a href="#cite_note-debug-29"><span>[</span>29<span>]</span></a></sup><sup id="cite_ref-30" class="reference"><a href="#cite_note-30"><span>[</span>30<span>]</span></a></sup></p>
<p>For example, the following algorithm is a direct implementation to compute the function A(x) = (x–1)/( exp(x–1) – 1) which is well-conditioned at 1.0,<sup id="cite_ref-31" class="reference"><a href="#cite_note-31"><span>[</span>31<span>]</span></a></sup> however it can be shown to be numerically unstable and lose up to half the significant digits carried by the arithmetic when computed near 1.0.<sup id="cite_ref-JavaHurt_12-2" class="reference"><a href="#cite_note-JavaHurt-12"><span>[</span>12<span>]</span></a></sup></p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw4">double</span> A<span class="br0">(</span><span class="kw4">double</span> X<span class="br0">)</span>
<span class="br0">{</span>
        <span class="kw4">double</span>  Y<span class="sy0">,</span> Z<span class="sy0">;</span>  <span class="co1">// [1]</span>
        Y <span class="sy0">=</span> X <span class="sy0">-</span> <span class="nu16">1.0</span><span class="sy0">;</span>
        Z <span class="sy0">=</span> <span class="kw3">exp</span><span class="br0">(</span>Y<span class="br0">)</span><span class="sy0">;</span>
        <span class="kw1">if</span> <span class="br0">(</span>Z <span class="sy0">!=</span> <span class="nu16">1.0</span><span class="br0">)</span> Z <span class="sy0">=</span> Y<span class="sy0">/</span><span class="br0">(</span>Z <span class="sy0">-</span> <span class="nu16">1.0</span><span class="br0">)</span><span class="sy0">;</span> <span class="co1">// [2]</span>
        <span class="kw1">return</span><span class="br0">(</span>Z<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>If, however, intermediate computations are all performed in extended precision (e.g. by setting line [1] to <a href="C99.html" title="C99">C99</a> long double), then up to full precision in the final double result can be maintained.<sup id="cite_ref-32" class="reference"><a href="#cite_note-32"><span>[</span>32<span>]</span></a></sup> Alternatively, a numerical analysis of the algorithm reveals that if the following non-obvious change to line [2] is made:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
 <span class="kw1">if</span> <span class="br0">(</span>Z <span class="sy0">!=</span> <span class="nu16">1.0</span><span class="br0">)</span> Z <span class="sy0">=</span> <span class="kw3">log</span><span class="br0">(</span>Z<span class="br0">)</span><span class="sy0">/</span><span class="br0">(</span>Z <span class="sy0">-</span> <span class="nu16">1.0</span><span class="br0">)</span><span class="sy0">;</span>
</pre></div>
</div>
<p>then the algorithm becomes numerically stable and can compute to full double precision.</p>
<p>To maintain the properties of such carefully constructed numerically stable programs, careful handling by the <a href="Compiler.html" title="Compiler">compiler</a> is required. Certain "optimizations" that compilers might make (for example, reordering operations) can work against the goals of well-behaved software. There is some controversy about the failings of compilers and language designs in this area: <a href="C99.html" title="C99">C99</a> is an example of a language where such optimisations are carefully specified so as to maintain numerical precision. See the external references at the bottom of this article.</p>
<p>A detailed treatment of the techniques for writing high-quality floating-point software is beyond the scope of this article, and the reader is referred to,<sup id="cite_ref-33" class="reference"><a href="#cite_note-33"><span>[</span>33<span>]</span></a></sup><sup id="cite_ref-kahan_maths_34-0" class="reference"><a href="#cite_note-kahan_maths-34"><span>[</span>34<span>]</span></a></sup> and the other references at the bottom of this article. Kahan suggests several rules of thumb that can substantially decrease by orders of magnitude<sup id="cite_ref-kahan_maths_34-1" class="reference"><a href="#cite_note-kahan_maths-34"><span>[</span>34<span>]</span></a></sup> the risk of numerical anomalies, in addition to, or in lieu of, a more careful numerical analysis. These include: as noted above, computing all expressions and intermediate results in the highest precision supported in hardware (a common rule of thumb is to carry twice the precision of the desired result i.e. compute in double precision for a final single precision result, or in double extended or quad precision for up to double precision results<sup id="cite_ref-35" class="reference"><a href="#cite_note-35"><span>[</span>35<span>]</span></a></sup>); and rounding input data and results to only the precision required and supported by the input data (carrying excess precision in the final result beyond that required and supported by the input data can be misleading, increases storage cost and decreases speed, and the excess bits can affect convergence of numerical procedures:<sup id="cite_ref-36" class="reference"><a href="#cite_note-36"><span>[</span>36<span>]</span></a></sup> notably, the first form of the iterative example given below converges correctly when using this rule of thumb). Brief descriptions of several additional issues and techniques follow.</p>
<p>As decimal fractions can often not be exactly represented in binary floating-point, such arithmetic is at its best when it is simply being used to measure real-world quantities over a wide range of scales (such as the orbital period of a moon around Saturn or the mass of a <a href="http://en.wikipedia.org/wiki/Proton" title="Proton">proton</a>), and at its worst when it is expected to model the interactions of quantities expressed as decimal strings that are expected to be exact.<sup id="cite_ref-37" class="reference"><a href="#cite_note-37"><span>[</span>37<span>]</span></a></sup><sup id="cite_ref-38" class="reference"><a href="#cite_note-38"><span>[</span>38<span>]</span></a></sup> An example of the latter case is financial calculations. For this reason, financial software tends not to use a binary floating-point number representation.<sup id="cite_ref-39" class="reference"><a href="#cite_note-39"><span>[</span>39<span>]</span></a></sup> The "decimal" data type of the <a href="C_Sharp_(programming_language).html" title="C Sharp (programming language)">C#</a> and <a href="Python_(programming_language).html" title="Python (programming language)">Python</a> programming languages, and the <a href="http://en.wikipedia.org/wiki/IEEE_754-2008" title="IEEE 754-2008" class="mw-redirect">IEEE 754-2008</a> decimal floating-point standard, are designed to avoid the problems of binary floating-point representations when applied to human-entered exact decimal values, and make the arithmetic always behave as expected when numbers are printed in decimal.</p>
<p>Expectations from mathematics may not be realised in the field of floating-point computation. For example, it is known that <img class="tex" alt="(x+y)(x-y) = x^2-y^2\," src="http://upload.wikimedia.org/math/e/4/a/e4a8f9d1785121505817aec7f100ebeb.png" />, and that <img class="tex" alt="\sin^2{\theta}+\cos^2{\theta} = 1\," src="http://upload.wikimedia.org/math/0/0/0/0003793e1c0afcf8afb4c48f0c1e0c57.png" />, however these facts cannot be relied on when the quantities involved are the result of floating-point computation.</p>
<p>The use of the equality test (<code>if (x==y) ...</code>) requires care when dealing with floating-point numbers. Even simple expressions like <code>0.6/0.2-3==0</code> will, on most computers, fail to be true<sup id="cite_ref-40" class="reference"><a href="#cite_note-40"><span>[</span>40<span>]</span></a></sup> (in IEEE 754 double precision, for example, <code>0.6/0.2-3</code> is approximately equal to -4.44089209850063e-16). Consequently, such tests are sometimes replaced with "fuzzy" comparisons (<code>if (abs(x-y) &lt; epsilon) ...</code>, where <a href="http://en.wikipedia.org/wiki/Machine_epsilon" title="Machine epsilon">epsilon</a> is sufficiently small and tailored to the application, such as 1.0E−13). The wisdom of doing this varies greatly, and can require numerical analysis to bound epsilon.<sup id="cite_ref-41" class="reference"><a href="#cite_note-41"><span>[</span>41<span>]</span></a></sup> Values derived from the primary data representation and their comparisons should be performed in a wider, extended, precision to minimise the risk of such inconsistencies due to round-off errors.<sup id="cite_ref-kahan_maths_34-2" class="reference"><a href="#cite_note-kahan_maths-34"><span>[</span>34<span>]</span></a></sup> It is often better to organize the code in such a way that such tests are unnecessary. For example, in <a href="Computational_geometry.html" title="Computational geometry">computational geometry</a>, exact tests of whether a point lies off or on a line or plane defined by other points can be performed using adaptive precision or exact arithmetic methods.<sup id="cite_ref-42" class="reference"><a href="#cite_note-42"><span>[</span>42<span>]</span></a></sup></p>
<p>Small errors in floating-point arithmetic can grow when mathematical algorithms perform operations an enormous number of times. A few examples are <a href="http://en.wikipedia.org/wiki/Matrix_inversion" title="Matrix inversion" class="mw-redirect">matrix inversion</a>, <a href="http://en.wikipedia.org/wiki/Eigenvector" title="Eigenvector" class="mw-redirect">eigenvector</a> computation, and differential equation solving. These algorithms must be very carefully designed, using numerical approaches such as <a href="http://en.wikipedia.org/wiki/Iterative_refinement" title="Iterative refinement">Iterative refinement</a>, if they are to work well.<sup id="cite_ref-43" class="reference"><a href="#cite_note-43"><span>[</span>43<span>]</span></a></sup></p>
<p>Summation of a vector of floating-point values is a basic algorithm in <a href="http://en.wikipedia.org/wiki/Computational_science" title="Computational science">scientific computing</a>, and so an awareness of when loss of significance can occur is essential. For example, if one is adding a very large number of numbers, the individual addends are very small compared with the sum. This can lead to loss of significance. A typical addition would then be something like</p>
<pre>
3253.671
+  3.141276
--------
3256.812
</pre>
<p>The low 3 digits of the addends are effectively lost. Suppose, for example, that one needs to add many numbers, all approximately equal to 3. After 1000 of them have been added, the running sum is about 3000; the lost digits are not regained. The <a href="http://en.wikipedia.org/wiki/Kahan_summation_algorithm" title="Kahan summation algorithm">Kahan summation algorithm</a> may be used to reduce the errors.<sup id="cite_ref-44" class="reference"><a href="#cite_note-44"><span>[</span>44<span>]</span></a></sup></p>
<p>Round-off error can affect the convergence and accuracy of iterative numerical procedures. As an example, <a href="http://en.wikipedia.org/wiki/Archimedes" title="Archimedes">Archimedes</a> approximated π by calculating the perimeters of polygons inscribing and circumscribing a circle, starting with hexagons, and successively doubling the number of sides. As noted above, computations may be rearranged in a way that is mathematically equivalent but less prone to error (<a href="Numerical_analysis.html" title="Numerical analysis">numerical analysis</a>). Two forms of the recurrence formula for the circumscribed polygon are:</p>
<dl>
<dd><img class="tex" alt="t_0 = \frac{1}{\sqrt{3}}" src="http://upload.wikimedia.org/math/4/3/2/4329f82cd4a36a21e140157da12e5ceb.png" /></dd>
</dl>
<dl>
<dd><img class="tex" alt="\qquad\mathrm{first\ form:}\qquad t_{i+1} = \frac{\sqrt{t_i^2+1}-1}{t_i}\qquad\mathrm{second\ form:}\qquad t_{i+1} = \frac{t_i}{\sqrt{t_i^2+1}+1}" src="http://upload.wikimedia.org/math/c/f/7/cf7fad650bb86f0d0d72062ed610ae4a.png" /></dd>
</dl>
<dl>
<dd><img class="tex" alt="\pi \sim 6 \times 2^i \times t_i,\qquad\mathrm{converging\ as\ i \rightarrow \infty}\," src="http://upload.wikimedia.org/math/7/9/7/797fb30ed647a1f4983c9744b3feeb6d.png" /></dd>
</dl>
<p>Here is a computation using IEEE "double" (a significand with 53 bits of precision) arithmetic:</p>
<pre>
 i   6 × 2<sup>i</sup> × t<sub>i</sub>, first form    6 × 2<sup>i</sup> × t<sub>i</sub>, second form
</pre>
<pre>
 0   <b><span style="color:purple;">3</span></b>.4641016151377543863      <b><span style="color:purple;">3</span></b>.4641016151377543863
 1   <b><span style="color:purple;">3</span></b>.2153903091734710173      <b><span style="color:purple;">3</span></b>.2153903091734723496
 2   <b><span style="color:purple;">3.1</span></b>596599420974940120      <b><span style="color:purple;">3.1</span></b>596599420975006733
 3   <b><span style="color:purple;">3.14</span></b>60862151314012979      <b><span style="color:purple;">3.14</span></b>60862151314352708
 4   <b><span style="color:purple;">3.14</span></b>27145996453136334      <b><span style="color:purple;">3.14</span></b>27145996453689225
 5   <b><span style="color:purple;">3.141</span></b>8730499801259536      <b><span style="color:purple;">3.141</span></b>8730499798241950
 6   <b><span style="color:purple;">3.141</span></b>6627470548084133      <b><span style="color:purple;">3.141</span></b>6627470568494473
 7   <b><span style="color:purple;">3.141</span></b>6101765997805905      <b><span style="color:purple;">3.141</span></b>6101766046906629
 8   <b><span style="color:purple;">3.14159</span></b>70343230776862      <b><span style="color:purple;">3.14159</span></b>70343215275928
 9   <b><span style="color:purple;">3.14159</span></b>37488171150615      <b><span style="color:purple;">3.14159</span></b>37487713536668
10   <b><span style="color:purple;">3.141592</span></b>9278733740748      <b><span style="color:purple;">3.141592</span></b>9273850979885
11   <b><span style="color:purple;">3.141592</span></b>7256228504127      <b><span style="color:purple;">3.141592</span></b>7220386148377
12   <b><span style="color:purple;">3.1415926</span></b>717412858693      <b><span style="color:purple;">3.1415926</span></b>707019992125
13   <b><span style="color:purple;">3.1415926</span></b>189011456060      <b><span style="color:purple;">3.14159265</span></b>78678454728
14   <b><span style="color:purple;">3.1415926</span></b>717412858693      <b><span style="color:purple;">3.14159265</span></b>46593073709
15   <b><span style="color:purple;">3.14159</span></b>19358822321783      <b><span style="color:purple;">3.141592653</span></b>8571730119
16   <b><span style="color:purple;">3.1415926</span></b>717412858693      <b><span style="color:purple;">3.141592653</span></b>6566394222
17   <b><span style="color:purple;">3.1415</span></b>810075796233302      <b><span style="color:purple;">3.141592653</span></b>6065061913
18   <b><span style="color:purple;">3.1415926</span></b>717412858693      <b><span style="color:purple;">3.1415926535</span></b>939728836
19   <b><span style="color:purple;">3.141</span></b>4061547378810956      <b><span style="color:purple;">3.1415926535</span></b>908393901
20   <b><span style="color:purple;">3.14</span></b>05434924008406305      <b><span style="color:purple;">3.1415926535</span></b>900560168
21   <b><span style="color:purple;">3.14</span></b>00068646912273617      <b><span style="color:purple;">3.141592653589</span></b>8608396
22   <b><span style="color:purple;">3.1</span></b>349453756585929919      <b><span style="color:purple;">3.141592653589</span></b>8122118
23   <b><span style="color:purple;">3.14</span></b>00068646912273617      <b><span style="color:purple;">3.14159265358979</span></b>95552
24   <b><span style="color:purple;">3</span></b>.2245152435345525443      <b><span style="color:purple;">3.14159265358979</span></b>68907
25                              <b><span style="color:purple;">3.14159265358979</span></b>62246
26                              <b><span style="color:purple;">3.14159265358979</span></b>62246
27                              <b><span style="color:purple;">3.14159265358979</span></b>62246
28                              <b><span style="color:purple;">3.14159265358979</span></b>62246
              The true value is <b><span style="color:purple;">3.14159265358979323846264338327...</span></b>
</pre>
<p>While the two forms of the recurrence formula are clearly mathematically equivalent,<sup id="cite_ref-45" class="reference"><a href="#cite_note-45"><span>[</span>45<span>]</span></a></sup> the first subtracts 1 from a number extremely close to 1, leading to an increasingly problematic loss of <a href="http://en.wikipedia.org/wiki/Significant_digit" title="Significant digit" class="mw-redirect">significant digits</a>. As the recurrence is applied repeatedly, the accuracy improves at first, but then it deteriorates. It never gets better than about 8 digits, even though 53-bit arithmetic should be capable of about 16 digits of precision. When the second form of the recurrence is used, the value converges to 15 digits of precision.</p>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=23" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="noprint tright portal" style="border:solid #aaa 1px;margin:0.5em 0 0.5em 1em;">
<table style="background:#f9f9f9;font-size:85%;line-height:110%;max-width:175px;">
<tr valign="middle">
<td style="text-align:center;"><a href="http://en.wikipedia.org/wiki/File:Internet_map_1024.jpg" class="image"><img alt="Portal icon" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Internet_map_1024.jpg/28px-Internet_map_1024.jpg" width="28" height="28" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Internet_map_1024.jpg/42px-Internet_map_1024.jpg 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Internet_map_1024.jpg/56px-Internet_map_1024.jpg 2x" /></a></td>
<td style="padding:0 0.2em;vertical-align:middle;font-style:italic;font-weight:bold;"><a href="http://en.wikipedia.org/wiki/Portal:Computer_Science" title="Portal:Computer Science" class="mw-redirect">Computer Science portal</a></td>
</tr>
</table>
</div>
<div style="column-count:3;-moz-column-count:3;-webkit-column-count:3">
<ul>
<li><a href="C99.html#IEEE_754_floating_point_support" title="C99">C99</a> for code examples demonstrating access and use of IEEE 754 features.</li>
<li><a href="http://en.wikipedia.org/wiki/Computable_number" title="Computable number">Computable number</a></li>
<li><a href="http://en.wikipedia.org/wiki/Coprocessor" title="Coprocessor">Coprocessor</a></li>
<li><a href="http://en.wikipedia.org/wiki/Decimal_floating_point" title="Decimal floating point">Decimal floating point</a></li>
<li><a href="Double_precision.html" title="Double precision" class="mw-redirect">Double precision</a></li>
<li><a href="http://en.wikipedia.org/wiki/Experimental_mathematics" title="Experimental mathematics">Experimental mathematics</a>—utilises high precision floating-point computations</li>
<li><a href="Fixed-point_arithmetic.html" title="Fixed-point arithmetic">Fixed-point arithmetic</a></li>
<li><a href="http://en.wikipedia.org/wiki/FLOPS" title="FLOPS">FLOPS</a></li>
<li><a href="http://en.wikipedia.org/wiki/Gal%27s_accurate_tables" title="Gal's accurate tables">Gal's accurate tables</a></li>
<li><a href="GNU_Multi-Precision_Library.html" title="GNU Multi-Precision Library" class="mw-redirect">GNU Multi-Precision Library</a></li>
<li><a href="http://en.wikipedia.org/wiki/Half_precision" title="Half precision" class="mw-redirect">Half precision</a></li>
<li><a href="IEEE_754.html" title="IEEE 754" class="mw-redirect">IEEE 754</a> — Standard for Binary Floating-Point Arithmetic</li>
<li><a href="http://en.wikipedia.org/wiki/IBM_Floating_Point_Architecture" title="IBM Floating Point Architecture">IBM Floating Point Architecture</a></li>
<li><a href="http://en.wikipedia.org/wiki/Kahan_summation_algorithm" title="Kahan summation algorithm">Kahan summation algorithm</a></li>
<li><a href="http://en.wikipedia.org/wiki/Microsoft_Binary_Format" title="Microsoft Binary Format">Microsoft Binary Format</a></li>
<li><a href="http://en.wikipedia.org/wiki/Minifloat" title="Minifloat">Minifloat</a></li>
<li><a href="http://en.wikipedia.org/wiki/Q_(number_format)" title="Q (number format)">Q (number format)</a> for constant resolution</li>
<li><a href="http://en.wikipedia.org/wiki/Quad_precision" title="Quad precision" class="mw-redirect">Quad precision</a></li>
<li><a href="http://en.wikipedia.org/wiki/Significant_digits" title="Significant digits" class="mw-redirect">Significant digits</a></li>
<li><a href="http://en.wikipedia.org/wiki/Single_precision" title="Single precision" class="mw-redirect">Single precision</a></li>
</ul>
</div>
<h2><span class="mw-headline" id="Notes_and_references">Notes and references</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=24" title="Edit section: Notes and references">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist columns references-column-width" style="-moz-column-width: 30em; -webkit-column-width: 30em; column-width: 30em; list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><span class="citation book">W.Smith, Steven (1997). <a rel="nofollow" class="external text" href="http://www.dspguide.com/ch28/4.htm">"Chapter 28, Fixed versus Floating Point"</a>. <i>The Scientist and Engineer's Guide to Digital Signal Processing</i>. California Technical Pub. p.&#160;514. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/0966017633" title="Special:BookSources/0966017633">0966017633</a><span class="reference-accessdate">. Retrieved December 31, 2012</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.atitle=The+Scientist+and+Engineer%27s+Guide+to+Digital+Signal+Processing&amp;rft.aufirst=Steven&amp;rft.aulast=W.Smith&amp;rft.au=W.Smith%2C+Steven&amp;rft.btitle=Chapter+28%2C+Fixed+versus+Floating+Point&amp;rft.date=1997&amp;rft.genre=bookitem&amp;rft_id=http%3A%2F%2Fwww.dspguide.com%2Fch28%2F4.htm&amp;rft.isbn=0966017633&amp;rft.pages=514&amp;rft.pub=California+Technical+Pub&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><span class="citation book">B. Randell (1982). <i>From analytical engine to electronic digital computer: the contributions of Ludgate, Torres, and Bush. IEEE Annals of the History of Computing, 04(4)</i>. pp.&#160;327–341.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.au=B.+Randell&amp;rft.aulast=B.+Randell&amp;rft.btitle=From+analytical+engine+to+electronic+digital+computer%3A+the+contributions+of+Ludgate%2C+Torres%2C+and+Bush.+IEEE+Annals+of+the+History+of+Computing%2C+04%284%29&amp;rft.date=1982&amp;rft.genre=book&amp;rft.pages=327%E2%80%93341&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text"><span class="citation journal"><a rel="nofollow" class="external text" href="http://ed-thelen.org/comp-hist/Zuse_Z1_and_Z3.pdf">"Konrad Zuse’s Legacy: The Architecture of the Z1 and Z3"</a>. <i>IEEE Annals of the History of Computing</i> <b>19</b> (2): 5–15. 1997.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.atitle=Konrad+Zuse%E2%80%99s+Legacy%3A+The+Architecture+of+the+Z1+and+Z3&amp;rft.date=1997&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fed-thelen.org%2Fcomp-hist%2FZuse_Z1_and_Z3.pdf&amp;rft.issue=2&amp;rft.jtitle=IEEE+Annals+of+the+History+of+Computing&amp;rft.pages=5%E2%80%9315&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=19" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-kahansiam-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-kahansiam_4-0">^</a></b></span> <span class="reference-text"><span class="citation web">William Kahan (15 July 1997). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/SIAMjvnl.pdf">"The Baleful Effect of Computer Languages and Benchmarks upon Applied Mathematics, Physics and Chemistry"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=William+Kahan&amp;rft.au=William+Kahan&amp;rft.btitle=The%09Baleful+Effect%09of+Computer+Languages+and+Benchmarks+upon+Applied+Mathematics%2C+Physics+and+Chemistry&amp;rft.date=15+July+1997&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2FSIAMjvnl.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/SIAMjvnl.pdf">"The Baleful Effect of Computer Languages and Benchmarks upon Applied Mathematics, Physics and Chemistry. John von Neumann Lecture"</a>. 16 July 1997. p.&#160;3.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.btitle=The%09Baleful+Effect+of+Computer+Languages+and+Benchmarks+upon+Applied+Mathematics%2C+Physics+and+Chemistry.+John+von+Neumann+Lecture&amp;rft.date=16+July+1997&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2FSIAMjvnl.pdf&amp;rft.pages=3&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-6">^</a></b></span> <span class="reference-text"><span class="citation book">Randell, Brian, ed. (1982) [1973]. <i>The Origins of Digital Computers: Selected Papers</i> (3rd ed.). Berlin; New York: Springer-Verlag. p.&#160;244. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/3-540-11319-3" title="Special:BookSources/3-540-11319-3">3-540-11319-3</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.btitle=The+Origins+of+Digital+Computers%3A+Selected+Papers&amp;rft.date=1982&amp;rft.edition=3rd&amp;rft.genre=book&amp;rft.isbn=3-540-11319-3&amp;rft.pages=244&amp;rft.place=Berlin%3B+New+York&amp;rft.pub=Springer-Verlag&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-7">^</a></b></span> <span class="reference-text"><span class="citation web">Severance, Charles (20 February 1998). <a rel="nofollow" class="external text" href="http://www.eecs.berkeley.edu/~wkahan/ieee754status/754story.html">"An Interview with the Old Man of Floating-Point"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aufirst=Charles&amp;rft.aulast=Severance&amp;rft.au=Severance%2C+Charles&amp;rft.btitle=An+Interview+with+the+Old+Man+of+Floating-Point&amp;rft.date=20+February+1998&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.eecs.berkeley.edu%2F~wkahan%2Fieee754status%2F754story.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/Qdrtcs.pdf">"W. Kahan. "On the Cost of Floating-Point Computation Without Extra-Precise Arithmetic<span style="padding-right:0.2em;">"</span>"</a> (PDF). 20 November 2004<span class="reference-accessdate">. Retrieved 19 February 2012</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.btitle=W.+Kahan.+%22On+the+Cost+of+Floating-Point+Computation+Without+Extra-Precise+Arithmetic%22&amp;rft.date=20+November+2004&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2FQdrtcs.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://www.openexr.com/about.html">"openEXR"</a>. openEXR<span class="reference-accessdate">. Retrieved 25 April 2012</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.btitle=openEXR&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.openexr.com%2Fabout.html&amp;rft.pub=openEXR&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-10">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://babbage.cs.qc.edu/IEEE-754/32bit.html">http://babbage.cs.qc.edu/IEEE-754/32bit.html</a></span></li>
<li id="cite_note-goldberg_acm_1991-11"><span class="mw-cite-backlink">^ <a href="#cite_ref-goldberg_acm_1991_11-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-goldberg_acm_1991_11-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><span class="citation web">David Goldberg (March 1991). <a rel="nofollow" class="external text" href="http://www.validlab.com/goldberg/paper.pdf">"What every computer scientist should know about floating-point arithmetic. ACM Computing Surveys, volume 23, issue 1"</a>. p.&#160;195.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.au=David+Goldberg&amp;rft.aulast=David+Goldberg&amp;rft.btitle=What+every+computer+scientist+should+know+about+floating-point+arithmetic.+ACM+Computing+Surveys%2C+volume+23%2C+issue+1&amp;rft.date=March+1991&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.validlab.com%2Fgoldberg%2Fpaper.pdf&amp;rft.pages=195&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-JavaHurt-12"><span class="mw-cite-backlink">^ <a href="#cite_ref-JavaHurt_12-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-JavaHurt_12-1"><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-JavaHurt_12-2"><sup><i><b>c</b></i></sup></a></span> <span class="reference-text"><span class="citation web">William Kahan (1 March 1998). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/JAVAhurt.pdf">"How JAVA's Floating-Point Hurts Everyone Everywhere"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=William+Kahan&amp;rft.au=William+Kahan&amp;rft.btitle=How+JAVA%27s+Floating-Point+Hurts+Everyone+Everywhere&amp;rft.date=1+March+1998&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2FJAVAhurt.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-whyieee-13"><span class="mw-cite-backlink"><b><a href="#cite_ref-whyieee_13-0">^</a></b></span> <span class="reference-text"><span class="citation web">William Kahan (12 February 1981). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/ieee754status/why-ieee.pdf">"Why do we need a floating-point arithmetic standard?"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=William+Kahan&amp;rft.au=William+Kahan&amp;rft.btitle=Why+do+we+need+a+floating-point+arithmetic+standard%3F&amp;rft.date=12+February+1981&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2Fieee754status%2Fwhy-ieee.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-14"><span class="mw-cite-backlink"><b><a href="#cite_ref-14">^</a></b></span> <span class="reference-text"><span class="citation web"><a href="http://en.wikipedia.org/wiki/Charles_Severance" title="Charles Severance">Charles Severance</a> (20 February 1998). <a rel="nofollow" class="external text" href="http://www.eecs.berkeley.edu/~wkahan/ieee754status/754story.html">"An Interview with the Old Man of Floating-Point"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.au=Charles+Severance&amp;rft.aulast=Charles+Severance&amp;rft.btitle=An+Interview+with+the+Old+Man+of+Floating-Point&amp;rft.date=20+February+1998&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.eecs.berkeley.edu%2F~wkahan%2Fieee754status%2F754story.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-Baleful-15"><span class="mw-cite-backlink">^ <a href="#cite_ref-Baleful_15-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Baleful_15-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><span class="citation web">William Kahan (11 June 1996). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/ieee754status/baleful.pdf">"The Baleful Effect of Computer Benchmarks upon Applied Mathematics, Physics and Chemistry"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=William+Kahan&amp;rft.au=William+Kahan&amp;rft.btitle=The+Baleful+Effect+of+Computer+Benchmarks+upon+Applied+Mathematics%2C+Physics+and+Chemistry&amp;rft.date=11+June+1996&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2Fieee754status%2Fbaleful.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-16"><span class="mw-cite-backlink"><b><a href="#cite_ref-16">^</a></b></span> <span class="reference-text">Computer hardware doesn't necessarily compute the exact value; it simply has to produce the equivalent rounded result as though it had computed the infinitely precise result.</span></li>
<li id="cite_note-name-17"><span class="mw-cite-backlink"><b><a href="#cite_ref-name_17-0">^</a></b></span> <span class="reference-text"><span class="citation web">William Kahan (11 January 2006). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/Mindless.pdf">"How Futile are Mindless Assessments of Roundoff in Floating-Point Computation&#160;?"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=William+Kahan&amp;rft.au=William+Kahan&amp;rft.btitle=How+Futile+are+Mindless+Assessments+of+Roundoff+in+Floating-Point+Computation+%3F&amp;rft.date=11+January+2006&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2FMindless.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-goldberg-18"><span class="mw-cite-backlink"><b><a href="#cite_ref-goldberg_18-0">^</a></b></span> <span class="reference-text"><span class="citation journal">Goldberg, David (1991). <a rel="nofollow" class="external text" href="http://docs.sun.com/source/806-3568/ncg_goldberg.html">"What Every Computer Scientist Should Know About Floating-Point Arithmetic"</a>. <i>ACM Computing Surveys</i> <b>23</b>: 5–48. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1145%2F103162.103163">10.1145/103162.103163</a><span class="reference-accessdate">. Retrieved 2 September 2010</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.atitle=What+Every+Computer+Scientist+Should+Know+About+Floating-Point+Arithmetic&amp;rft.aufirst=David&amp;rft.au=Goldberg%2C+David&amp;rft.aulast=Goldberg&amp;rft.date=1991&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fdocs.sun.com%2Fsource%2F806-3568%2Fncg_goldberg.html&amp;rft_id=info%3Adoi%2F10.1145%2F103162.103163&amp;rft.jtitle=ACM+Computing+Surveys&amp;rft.pages=5%E2%80%9348&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=23" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-19"><span class="mw-cite-backlink"><b><a href="#cite_ref-19">^</a></b></span> <span class="reference-text">The enormous complexity of modern division algorithms once led to a famous error. An early version of the Intel Pentium chip was shipped with a division instruction that, on rare occasions, gave slightly incorrect results. Many computers had been shipped before the error was discovered. Until the defective computers were replaced, patched versions of compilers were developed that could avoid the failing cases. See <i><a href="http://en.wikipedia.org/wiki/Pentium_FDIV_bug" title="Pentium FDIV bug">Pentium FDIV bug</a></i>.</span></li>
<li id="cite_note-20"><span class="mw-cite-backlink"><b><a href="#cite_ref-20">^</a></b></span> <span class="reference-text"><span class="citation web">William Kahan (1 October 1997). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/ieee754status/IEEE754.PDF">"Lecture Notes on the Status of IEEE Standard 754 for Binary Floating-Point Arithmetic"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=William+Kahan&amp;rft.au=William+Kahan&amp;rft.btitle=Lecture+Notes+on+the+Status+of+IEEE+Standard+754+for+Binary+Floating-Point+Arithmetic&amp;rft.date=1+October+1997&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2Fieee754status%2FIEEE754.PDF&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-21"><span class="mw-cite-backlink"><b><a href="#cite_ref-21">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html">"Intel® 64 and IA-32 Architectures Software Developers' Manuals. Volume 1. section D.3.2.1"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.btitle=Intel%C2%AE+64+and+IA-32+Architectures+Software+Developers%27+Manuals.+Volume+1.+section+D.3.2.1&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.intel.com%2Fcontent%2Fwww%2Fus%2Fen%2Fprocessors%2Farchitectures-software-developer-manuals.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-22"><span class="mw-cite-backlink"><b><a href="#cite_ref-22">^</a></b></span> <span class="reference-text"><span class="citation web">William Kahan (1 October 1997). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/ieee754status/IEEE754.PDF">"Lecture Notes on the Status of IEEE Standard 754 for Binary Floating-Point Arithmetic (page 9)"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=William+Kahan&amp;rft.au=William+Kahan&amp;rft.btitle=Lecture+Notes+on+the+Status+of+IEEE+Standard+754+for+Binary+Floating-Point+Arithmetic+%28page+9%29&amp;rft.date=1+October+1997&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2Fieee754status%2FIEEE754.PDF&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-23"><span class="mw-cite-backlink"><b><a href="#cite_ref-23">^</a></b></span> <span class="reference-text">But an attempted computation of cos(π) yields −1 exactly. Since the derivative is nearly zero near π, the effect of the inaccuracy in the argument is far smaller than the spacing of the floating-point numbers around −1, and the rounded result is exact.</span></li>
<li id="cite_note-24"><span class="mw-cite-backlink"><b><a href="#cite_ref-24">^</a></b></span> <span class="reference-text"><span class="citation journal">Richard Harris (October 2010). <a rel="nofollow" class="external text" href="http://accu.org/index.php/journals/1702">"You're Going To Have To Think!"</a>. <i><a href="http://en.wikipedia.org/wiki/Overload_(magazine)" title="Overload (magazine)">Overload</a></i> (<a rel="nofollow" class="external text" href="http://accu.org/var/uploads/journals/overload99.pdf">99</a>): 5–10. <a href="International_Standard_Serial_Number.html" title="International Standard Serial Number">ISSN</a>&#160;<a rel="nofollow" class="external text" href="http://www.worldcat.org/issn/1354-3172">1354-3172</a><span class="reference-accessdate">. Retrieved 24 September 2011</span>. "Far more worrying is cancellation error which can yield catastrophic loss of precision."</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.atitle=You%27re+Going+To+Have+To+Think%21&amp;rft.aulast=Richard+Harris&amp;rft.au=Richard+Harris&amp;rft.date=October+2010&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Faccu.org%2Findex.php%2Fjournals%2F1702&amp;rft.issn=1354-3172&amp;rft.issue=%5Bhttp%3A%2F%2Faccu.org%2Fvar%2Fuploads%2Fjournals%2Foverload99.pdf+99%5D&amp;rft.jtitle=Overload&amp;rft.pages=5%26ndash%3B10&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-GAO_report_IMTEC_92-26-25"><span class="mw-cite-backlink"><b><a href="#cite_ref-GAO_report_IMTEC_92-26_25-0">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://www.gao.gov/products/IMTEC-92-26">"Patriot missile defense, Software problem led to system failure at Dharhan, Saudi Arabia; GAO report IMTEC 92-26"</a>. <a href="http://en.wikipedia.org/wiki/Government_Accountability_Office" title="Government Accountability Office">US Government Accounting Office</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.btitle=Patriot+missile+defense%2C+Software+problem+led+to+system+failure+at+Dharhan%2C+Saudi+Arabia%3B+GAO+report+IMTEC+92-26&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.gao.gov%2Fproducts%2FIMTEC-92-26&amp;rft.pub=US+Government+Accounting+Office&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-RalstonReilly2003-26"><span class="mw-cite-backlink"><b><a href="#cite_ref-RalstonReilly2003_26-0">^</a></b></span> <span class="reference-text"><span class="citation book">James H. Wilkinson; Anthony Ralston(ed); Edwin D. Reilly(ed); David Hemmendinger(ed) (8 September 2003). <a rel="nofollow" class="external text" href="http://books.google.com/books?id=OLRwQgAACAAJ"><i>"Error Analysis" in Encyclopedia of Computer Science. pp. 669-674</i></a>. Wiley. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0-470-86412-8" title="Special:BookSources/978-0-470-86412-8">978-0-470-86412-8</a><span class="reference-accessdate">. Retrieved 14 May 2013</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.au=Anthony+Ralston%28ed%29&amp;rft.au=David+Hemmendinger%28ed%29&amp;rft.au=Edwin+D.+Reilly%28ed%29&amp;rft.au=James+H.+Wilkinson&amp;rft.aulast=James+H.+Wilkinson&amp;rft.btitle=%22Error+Analysis%22+in+Encyclopedia+of+Computer+Science.+pp.+669-674&amp;rft.date=8+September+2003&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fbooks.google.com%2Fbooks%3Fid%3DOLRwQgAACAAJ&amp;rft.isbn=978-0-470-86412-8&amp;rft.pub=Wiley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-Einarsson2005-27"><span class="mw-cite-backlink"><b><a href="#cite_ref-Einarsson2005_27-0">^</a></b></span> <span class="reference-text"><span class="citation book">Bo Einarsson (2005). <a rel="nofollow" class="external text" href="http://books.google.com/books?id=sh4orx_qB_QC&amp;pg=PA50"><i>Accuracy and reliability in scientific computing</i></a>. SIAM. pp.&#160;50–. <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-0-89871-815-7" title="Special:BookSources/978-0-89871-815-7">978-0-89871-815-7</a><span class="reference-accessdate">. Retrieved 14 May 2013</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.au=Bo+Einarsson&amp;rft.aulast=Bo+Einarsson&amp;rft.btitle=Accuracy+and+reliability+in+scientific+computing&amp;rft.date=2005&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fbooks.google.com%2Fbooks%3Fid%3Dsh4orx_qB_QC%26pg%3DPA50&amp;rft.isbn=978-0-89871-815-7&amp;rft.pages=50%E2%80%93&amp;rft.pub=SIAM&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-28"><span class="mw-cite-backlink"><b><a href="#cite_ref-28">^</a></b></span> <span class="reference-text">Kahan estimates that the incidence of excessively inaccurate results near singularities is reduced by a factor of approx. 1/2000 uisng the 11 extra bits of precision of <a href="http://en.wikipedia.org/wiki/Extended_precision" title="Extended precision">double extended</a>- <span class="citation web"><a href="http://en.wikipedia.org/wiki/William_Kahan" title="William Kahan">William Kahan</a> (15 July 2005). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/ARITH_17.pdf">"<span style="padding-left:0.2em;">"</span>Floating-Point Arithmetic Besieged by "Business Decisions". Keynote Address, IEEE-Sponsored ARITH 17 Symposium on Computer Arithmetic,.p. 18"</a><span class="reference-accessdate">. Retrieved 23 May 2013</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=William+Kahan&amp;rft.au=William+Kahan&amp;rft.btitle=%22Floating-Point+Arithmetic+Besieged+by+%22Business+Decisions%22.+Keynote+Address%2C+IEEE-Sponsored+ARITH+17+Symposium+on+Computer+Arithmetic%2C.p.+18&amp;rft.date=15+July+2005&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2FARITH_17.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-debug-29"><span class="mw-cite-backlink"><b><a href="#cite_ref-debug_29-0">^</a></b></span> <span class="reference-text"><span class="citation web">William Kahan (3 August 2011). <a rel="nofollow" class="external text" href="http://www.eecs.berkeley.edu/~wkahan/Boulder.pdf">"Desperately Needed Remedies for the Undebuggability of Large Floating-Point Computations in Science and Engineering. IFIP/SIAM/NIST Working Conference on Uncertainty Quantification in Scientific Computing. Boulder CO."</a>. p.&#160;33.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=William+Kahan&amp;rft.au=William+Kahan&amp;rft.btitle=Desperately+Needed+Remedies+for+the+Undebuggability+of+Large+Floating-Point+Computations+in+Science+and+Engineering.+IFIP%2FSIAM%2FNIST+Working+Conference+on+Uncertainty+Quantification+in+Scientific+Computing.+Boulder+CO.&amp;rft.date=3+August+2011&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.eecs.berkeley.edu%2F~wkahan%2FBoulder.pdf&amp;rft.pages=33&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-30"><span class="mw-cite-backlink"><b><a href="#cite_ref-30">^</a></b></span> <span class="reference-text">Kahan notes: "Except in extremely uncommon situations, extra-precise arithmetic generally attenuates risks due to roundoff at far less cost than the price of a competent error-analyst."</span></li>
<li id="cite_note-31"><span class="mw-cite-backlink"><b><a href="#cite_ref-31">^</a></b></span> <span class="reference-text">note: the Taylor expansion of this function demonstrates that it is well-conditioned near 1: A(x) = 1 – (x–1)/2 + (x–1)^2/12 – (x–1)^4/720 + (x–1)^6/30240 – (x–1)^8/1209600 + ... for |x–1| &lt; π</span></li>
<li id="cite_note-32"><span class="mw-cite-backlink"><b><a href="#cite_ref-32">^</a></b></span> <span class="reference-text">if long double is IEEE quad precision then full double precision is retained; if long double is IEEE double extended precision then additional, but not full, precision is retained</span></li>
<li id="cite_note-33"><span class="mw-cite-backlink"><b><a href="#cite_ref-33">^</a></b></span> <span class="reference-text"><span class="citation book">Higham, Nicholas (2002). <i>"Designing stable algorithms" in Accuracy and Stability of Numerical Algorithms (2 ed)</i>. SIAM. pp.&#160;27–28.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aufirst=Nicholas&amp;rft.au=Higham%2C+Nicholas&amp;rft.aulast=Higham&amp;rft.btitle=%22Designing+stable+algorithms%22+in+Accuracy+and+Stability+of+Numerical+Algorithms+%282+ed%29&amp;rft.date=2002&amp;rft.genre=book&amp;rft.pages=27%E2%80%9328&amp;rft.pub=SIAM&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-kahan_maths-34"><span class="mw-cite-backlink">^ <a href="#cite_ref-kahan_maths_34-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-kahan_maths_34-1"><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-kahan_maths_34-2"><sup><i><b>c</b></i></sup></a></span> <span class="reference-text"><span class="citation web">William Kahan. <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/MktgMath.pdf">"<span style="padding-left:0.2em;">"</span>Four Rules of Thumb for Best Use of Modern Floating-point Hardware" in Marketing versus Mathematics"</a>. p.&#160;47.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=William+Kahan&amp;rft.au=William+Kahan&amp;rft.btitle=%22Four+Rules+of+Thumb+for+Best+Use+of+Modern+Floating-point+Hardware%22+in+Marketing+versus+Mathematics&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2FMktgMath.pdf&amp;rft.pages=47&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-35"><span class="mw-cite-backlink"><b><a href="#cite_ref-35">^</a></b></span> <span class="reference-text"><span class="citation web">William Kahan (12 February 1981). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/ieee754status/why-ieee.pdf">"Why do we need a floating-point arithmetic standard? (page 26)"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=William+Kahan&amp;rft.au=William+Kahan&amp;rft.btitle=Why+do+we+need+a+floating-point+arithmetic+standard%3F+%28page+26%29&amp;rft.date=12+February+1981&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2Fieee754status%2Fwhy-ieee.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-36"><span class="mw-cite-backlink"><b><a href="#cite_ref-36">^</a></b></span> <span class="reference-text"><span class="citation web">William Kahan (transcribed by David Bindel) (4 June 2001). <a rel="nofollow" class="external text" href="http://www.cims.nyu.edu/~dbindel/class/cs279/notes-06-04.pdf">"Lecture notes of System Support for Scientific Computation"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=William+Kahan+%28transcribed+by+David+Bindel%29&amp;rft.au=William+Kahan+%28transcribed+by+David+Bindel%29&amp;rft.btitle=Lecture+notes+of+System+Support+for+Scientific+Computation&amp;rft.date=4+June+2001&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cims.nyu.edu%2F~dbindel%2Fclass%2Fcs279%2Fnotes-06-04.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-37"><span class="mw-cite-backlink"><b><a href="#cite_ref-37">^</a></b></span> <span class="reference-text"><span class="citation web">Prof. W. Kahan (27 August 2000). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/MktgMath.pdf">"Marketing versus Mathematics (p 15)"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=Prof.+W.+Kahan&amp;rft.au=Prof.+W.+Kahan&amp;rft.btitle=Marketing+versus+Mathematics+%28p+15%29&amp;rft.date=27+August+2000&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2FMktgMath.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-38"><span class="mw-cite-backlink"><b><a href="#cite_ref-38">^</a></b></span> <span class="reference-text"><span class="citation web">Prof. W. Kahan (5 July 2005). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/ARITH_17.pdf">"Floating-Point Arithmetic Besieged by "Business Decisions": Keynote Address for the IEEE-Sponsored ARITH 17 Symposium on Computer Arithmetic"</a>. p.&#160;6.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=Prof.+W.+Kahan&amp;rft.au=Prof.+W.+Kahan&amp;rft.btitle=Floating-Point+Arithmetic+Besieged+by+%22Business+Decisions%22%3A+Keynote+Address+for+the+IEEE-Sponsored+ARITH+17+Symposium+on+Computer+Arithmetic&amp;rft.date=5+July+2005&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2FARITH_17.pdf&amp;rft.pages=6&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-39"><span class="mw-cite-backlink"><b><a href="#cite_ref-39">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://speleotrove.com/decimal/">"General Decimal Arithmetic"</a>. Speleotrove.com<span class="reference-accessdate">. Retrieved 25 April 2012</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.btitle=General+Decimal+Arithmetic&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fspeleotrove.com%2Fdecimal%2F&amp;rft.pub=Speleotrove.com&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-40"><span class="mw-cite-backlink"><b><a href="#cite_ref-40">^</a></b></span> <span class="reference-text"><span class="citation web">Tom Christiansen, Nathan Torkington, and others (2006). <a rel="nofollow" class="external text" href="http://perldoc.perl.org/5.8.8/perlfaq4.html#Why-is-int%28%29-broken?">"perlfaq4 / Why is int() broken?"</a>. perldoc.perl.org<span class="reference-accessdate">. Retrieved 11 January 2011</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=Tom+Christiansen%2C+Nathan+Torkington%2C+and+others&amp;rft.au=Tom+Christiansen%2C+Nathan+Torkington%2C+and+others&amp;rft.btitle=perlfaq4+%2F+Why+is+int%28%29+broken%3F&amp;rft.date=2006&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fperldoc.perl.org%2F5.8.8%2Fperlfaq4.html%23Why-is-int%2528%2529-broken%3F&amp;rft.pub=perldoc.perl.org&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-41"><span class="mw-cite-backlink"><b><a href="#cite_ref-41">^</a></b></span> <span class="reference-text"><span class="citation book">Higham, Nicholas (2002). <i>"Subtleties of floating point arithmetic" in Accuracy and Stability of Numerical Algorithms (2 ed)</i>. SIAM. p.&#160;493.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aufirst=Nicholas&amp;rft.au=Higham%2C+Nicholas&amp;rft.aulast=Higham&amp;rft.btitle=%22Subtleties+of+floating+point+arithmetic%22+in+Accuracy+and+Stability+of+Numerical+Algorithms+%282+ed%29&amp;rft.date=2002&amp;rft.genre=book&amp;rft.pages=493&amp;rft.pub=SIAM&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-42"><span class="mw-cite-backlink"><b><a href="#cite_ref-42">^</a></b></span> <span class="reference-text"><span class="citation journal">Jonathan Richard Shewchuk (1997). <a rel="nofollow" class="external text" href="http://www.cs.cmu.edu/~quake/robust.html"><i>Adaptive Precision Floating-Point Arithmetic and Fast Robust Geometric Predicates, Discrete &amp; Computational Geometry 18:305-363</i></a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.au=Jonathan+Richard+Shewchuk&amp;rft.aulast=Jonathan+Richard+Shewchuk&amp;rft.btitle=Adaptive+Precision+Floating-Point+Arithmetic+and+Fast+Robust+Geometric+Predicates%2C+Discrete+%26+Computational+Geometry+18%3A305-363&amp;rft.date=1997&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.cmu.edu%2F~quake%2Frobust.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-43"><span class="mw-cite-backlink"><b><a href="#cite_ref-43">^</a></b></span> <span class="reference-text"><span class="citation web">Prof. W. Kahan and Ms. Melody Y. Ivory (3 July 1997). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/Cantilever.pdf">"Roundoff Degrades an Idealized Cantilever"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aulast=Prof.+W.+Kahan+and+Ms.+Melody+Y.+Ivory&amp;rft.au=Prof.+W.+Kahan+and+Ms.+Melody+Y.+Ivory&amp;rft.btitle=Roundoff+Degrades+an+Idealized+Cantilever&amp;rft.date=3+July+1997&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.cs.berkeley.edu%2F~wkahan%2FCantilever.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-44"><span class="mw-cite-backlink"><b><a href="#cite_ref-44">^</a></b></span> <span class="reference-text"><span class="citation book">Higham, Nicholas (2002). <i>Summation in "Subtleties of floating point arithmetic" in Accuracy and Stability of Numerical Algorithms (2 ed)</i>. SIAM. pp.&#160;110–123.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFloating+point&amp;rft.aufirst=Nicholas&amp;rft.au=Higham%2C+Nicholas&amp;rft.aulast=Higham&amp;rft.btitle=Summation+in+%22Subtleties+of+floating+point+arithmetic%22+in+Accuracy+and+Stability+of+Numerical+Algorithms+%282+ed%29&amp;rft.date=2002&amp;rft.genre=book&amp;rft.pages=110%E2%80%93123&amp;rft.pub=SIAM&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-45"><span class="mw-cite-backlink"><b><a href="#cite_ref-45">^</a></b></span> <span class="reference-text">The equivalence of the two forms can be verified algebraically by noting that the <a href="http://en.wikipedia.org/wiki/Denominator" title="Denominator" class="mw-redirect">denominator</a> of the fraction in the second form is the <a href="http://en.wikipedia.org/wiki/Conjugate_(algebra)" title="Conjugate (algebra)">conjugate</a> of the <a href="http://en.wikipedia.org/wiki/Numerator" title="Numerator" class="mw-redirect">numerator</a> of the first. By multiplying the top and bottom of the first expression by this conjugate, one obtains the second expression.</span></li>
</ol>
</div>
<h2><span class="mw-headline" id="Further_reading">Further reading</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=25" title="Edit section: Further reading">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><i><a rel="nofollow" class="external text" href="http://download.oracle.com/docs/cd/E19422-01/819-3693/ncg_goldberg.html">What Every Computer Scientist Should Know About Floating-Point Arithmetic</a></i>, by David Goldberg, published in the March, 1991 issue of Computing Surveys.</li>
<li>Nicholas Higham. <i>Accuracy and Stability of Numerical Algorithms</i>, Second Edition. SIAM, 2002. <a href="http://en.wikipedia.org/wiki/Special:BookSources/0898713552" class="internal mw-magiclink-isbn">ISBN 0-89871-355-2</a>.</li>
<li>Gene F. Golub and Charles F. van Loan. <i>Matrix Computations</i>, Third Edition. Johns Hopkins University Press, 1986. ISBN 0-8018-5413.</li>
<li><a href="Donald_Knuth.html" title="Donald Knuth">Donald Knuth</a>. <i>The Art of Computer Programming</i>, Volume 2: <i>Seminumerical Algorithms</i>, Third Edition. Addison-Wesley, 1997. <a href="http://en.wikipedia.org/wiki/Special:BookSources/0201896842" class="internal mw-magiclink-isbn">ISBN 0-201-89684-2</a>. Section 4.2: Floating Point Arithmetic, pp.&#160;214–264.</li>
<li>Press et al. <i><a href="http://en.wikipedia.org/wiki/Numerical_Recipes" title="Numerical Recipes">Numerical Recipes</a> in <a href="C%2b%2b.html" title="C++">C++</a>. The Art of Scientific Computing</i>, <a href="http://en.wikipedia.org/wiki/Special:BookSources/0521750334" class="internal mw-magiclink-isbn">ISBN 0-521-75033-4</a>.</li>
<li><a href="http://en.wikipedia.org/wiki/James_H._Wilkinson" title="James H. Wilkinson">James H. Wilkinson</a>. <i>Rounding errors in algebraic processes</i>. 1963. -- Classic influential treatises on floating point arithmetic.</li>
<li><a href="http://en.wikipedia.org/wiki/James_H._Wilkinson" title="James H. Wilkinson">James H. Wilkinson</a>. <i>The Algebraic Eigenvalue Problem</i>, Clarendon Press, 1965.</li>
<li>P.H. Sterbenz. <i>Floating point computation</i>. 1974. -- Another classic book on floating point and <a href="http://en.wikipedia.org/wiki/Error_analysis#Error_analysis_in_numerical_modeling" title="Error analysis">error analysis</a>.</li>
<li>Jean-Michel Muller, Nicolas Brisebarre, Florent de Dinechin, Claude-Pierre Jeannerod, Vincent Lefèvre, Guillaume Melquiond, Nathalie Revol, Damien Stehlé, and Serge Torres. <i>Handbook of Floating-Point Arithmetic</i>. 2010. <a href="http://en.wikipedia.org/wiki/Special:BookSources/9780817647056" class="internal mw-magiclink-isbn">ISBN 978-0-8176-4705-6</a>.</li>
</ul>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit&amp;section=26" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li>Kahan, William and Darcy, Joseph (2001). <a rel="nofollow" class="external text" href="http://www.cs.berkeley.edu/~wkahan/JAVAhurt.pdf">How Java's floating-point hurts everyone everywhere</a>. Retrieved 5 September 2003.</li>
<li><a rel="nofollow" class="external text" href="http://www.mrob.com/pub/math/floatformats.html">Survey of Floating-Point Formats</a> This page gives a very brief summary of floating-point formats that have been used over the years.</li>
<li><i><a rel="nofollow" class="external text" href="http://hal.archives-ouvertes.fr/hal-00128124/en/">The pitfalls of verifying floating-point computations</a></i>, by David Monniaux, also printed in <i><a href="Association_for_Computing_Machinery.html" title="Association for Computing Machinery">ACM</a> Transactions on programming languages and systems (TOPLAS)</i>, May 2008: a compendium of non-intuitive behaviors of floating point on popular architectures, with implications for program verification and testing</li>
<li><a rel="nofollow" class="external free" href="http://www.opencores.org/">http://www.opencores.org</a> The OpenCores website contains open source floating-point IP cores for the implementation of floating-point operators in FPGA or ASIC devices. The project, double_fpu, contains verilog source code of a double precision floating-point unit. The project, fpuvhdl, contains vhdl source code of a single precision floating-point unit.</li>
<li><a rel="nofollow" class="external free" href="http://msdn.microsoft.com/en-us/library/aa289157(v=vs.71).aspx">http://msdn.microsoft.com/en-us/library/aa289157(v=vs.71).aspx</a> "Microsoft Visual C++ Floating-Point Optimization", by Eric Fleegal, MSDN, 2004</li>
</ul>
<table cellspacing="0" class="navbox" style="border-spacing:0;">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks hlist collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;">
<tr>
<th scope="col" class="navbox-title" colspan="2">
<div class="plainlinks hlist navbar mini">
<ul>
<li class="nv-view"><a href="http://en.wikipedia.org/wiki/Template:Data_types" title="Template:Data types"><span title="View this template" style=";;background:none transparent;border:none;;">v</span></a></li>
<li class="nv-talk"><a href="http://en.wikipedia.org/wiki/Template_talk:Data_types" title="Template talk:Data types"><span title="Discuss this template" style=";;background:none transparent;border:none;;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Data_types&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;;">e</span></a></li>
</ul>
</div>
<div style="font-size:110%;"><a href="Data_type.html" title="Data type">Data types</a></div>
</th>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Uninterpreted</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Bit.html" title="Bit">Bit</a></li>
<li><a href="Byte.html" title="Byte">Byte</a></li>
<li><a href="http://en.wikipedia.org/wiki/Ternary_numeral_system" title="Ternary numeral system">Trit</a></li>
<li><a href="http://en.wikipedia.org/wiki/Ternary_numeral_system#Tryte" title="Ternary numeral system">Tryte</a></li>
<li><a href="http://en.wikipedia.org/wiki/Word_(computer_architecture)" title="Word (computer architecture)">Word</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Numeric</th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic" title="Arbitrary-precision arithmetic">Bignum</a></li>
<li><a href="http://en.wikipedia.org/wiki/Complex_data_type" title="Complex data type">Complex</a></li>
<li><a href="http://en.wikipedia.org/wiki/Decimal_data_type" title="Decimal data type">Decimal</a></li>
<li><a href="Fixed-point_arithmetic.html" title="Fixed-point arithmetic">Fixed-point</a></li>
<li><strong class="selflink">Floating-point</strong></li>
<li><a href="http://en.wikipedia.org/wiki/Integer_(computer_science)" title="Integer (computer science)">Integer</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Signedness" title="Signedness">signedness</a></li>
</ul>
</li>
<li><a href="http://en.wikipedia.org/wiki/Interval_arithmetic" title="Interval arithmetic">Interval</a></li>
<li><a href="http://en.wikipedia.org/wiki/Rational_data_type" title="Rational data type">Rational</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Plain_text.html" title="Plain text">Text</a></th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Character_(computing).html" title="Character (computing)">Character</a></li>
<li><a href="http://en.wikipedia.org/wiki/String_(computer_science)" title="String (computer science)">String</a>
<ul>
<li><a href="Null-terminated_string.html" title="Null-terminated string">null-terminated</a></li>
</ul>
</li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="Pointer_(computer_programming).html" title="Pointer (computer programming)">Pointer</a></th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Memory_address" title="Memory address">Address</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Physical_address" title="Physical address">physical</a></li>
<li><a href="http://en.wikipedia.org/wiki/Virtual_address_space" title="Virtual address space">virtual</a></li>
</ul>
</li>
<li><a href="http://en.wikipedia.org/wiki/Reference_(computer_science)" title="Reference (computer science)">Reference</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group"><a href="http://en.wikipedia.org/wiki/Composite_data_type" title="Composite data type">Composite</a></th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Algebraic_data_type" title="Algebraic data type">Algebraic data type</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Generalized_algebraic_data_type" title="Generalized algebraic data type">generalized</a></li>
</ul>
</li>
<li><a href="Array_data_type.html" title="Array data type">Array</a></li>
<li><a href="Associative_array.html" title="Associative array">Associative array</a></li>
<li><a href="http://en.wikipedia.org/wiki/Class_(computer_programming)" title="Class (computer programming)">Class</a></li>
<li><a href="http://en.wikipedia.org/wiki/Dependent_type" title="Dependent type">Dependent</a></li>
<li><a href="http://en.wikipedia.org/wiki/Intuitionistic_type_theory#Equality_type" title="Intuitionistic type theory">Equality</a></li>
<li><a href="http://en.wikipedia.org/wiki/Inductive_type" title="Inductive type">Inductive</a></li>
<li><a href="http://en.wikipedia.org/wiki/List_(abstract_data_type)" title="List (abstract data type)">List</a></li>
<li><a href="http://en.wikipedia.org/wiki/Object_(computer_science)" title="Object (computer science)">Object</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Metaobject" title="Metaobject">metaobject</a></li>
</ul>
</li>
<li><a href="http://en.wikipedia.org/wiki/Option_type" title="Option type">Option type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Product_type" title="Product type">Product</a></li>
<li><a href="http://en.wikipedia.org/wiki/Record_(computer_science)" title="Record (computer science)">Record</a></li>
<li><a href="Set_(abstract_data_type).html" title="Set (abstract data type)">Set</a></li>
<li><a href="http://en.wikipedia.org/wiki/Union_type" title="Union type">Union</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Tagged_union" title="Tagged union">tagged</a></li>
</ul>
</li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Other</th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Boolean_data_type" title="Boolean data type">Boolean</a></li>
<li><a href="http://en.wikipedia.org/wiki/Bottom_type" title="Bottom type">Bottom type</a></li>
<li><a href="Container_(abstract_data_type).html" title="Container (abstract data type)">Collection</a></li>
<li><a href="Enumerated_type.html" title="Enumerated type">Enumerated type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Exception_handling" title="Exception handling">Exception</a></li>
<li><a href="http://en.wikipedia.org/wiki/Function_type" title="Function type">Function type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Opaque_data_type" title="Opaque data type">Opaque data type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Recursive_data_type" title="Recursive data type">Recursive data type</a></li>
<li><a href="Semaphore_(programming).html" title="Semaphore (programming)">Semaphore</a></li>
<li><a href="http://en.wikipedia.org/wiki/Stream_(computing)" title="Stream (computing)">Stream</a></li>
<li><a href="http://en.wikipedia.org/wiki/Top_type" title="Top type">Top type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Type_class" title="Type class">Type class</a></li>
<li><a href="http://en.wikipedia.org/wiki/Unit_type" title="Unit type">Unit type</a></li>
<li><a href="Void_type.html" title="Void type">Void</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Related topics</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="Abstract_data_type.html" title="Abstract data type">Abstract data type</a></li>
<li><a href="Data_structure.html" title="Data structure">Data structure</a></li>
<li><a href="Generic_programming.html" title="Generic programming">Generic</a></li>
<li><a href="http://en.wikipedia.org/wiki/Kind_(type_theory)" title="Kind (type theory)">Kind</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Metaclass" title="Metaclass">metaclass</a></li>
</ul>
</li>
<li><a href="http://en.wikipedia.org/wiki/Parametric_polymorphism" title="Parametric polymorphism">Parametric polymorphism</a></li>
<li><a href="http://en.wikipedia.org/wiki/Primitive_data_type" title="Primitive data type">Primitive data type</a></li>
<li><a href="http://en.wikipedia.org/wiki/Protocol_(object-oriented_programming)" title="Protocol (object-oriented programming)">Protocol</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Interface_(computing)#Software_interfaces_in_object-oriented_languages" title="Interface (computing)">interface</a></li>
</ul>
</li>
<li><a href="http://en.wikipedia.org/wiki/Subtyping" title="Subtyping">Subtyping</a></li>
<li><a href="http://en.wikipedia.org/wiki/Type_constructor" title="Type constructor">Type constructor</a></li>
<li><a href="Type_conversion.html" title="Type conversion">Type conversion</a></li>
<li><a href="Type_system.html" title="Type system">Type system</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Parsed by mw1181
CPU time usage: 1.464 seconds
Real time usage: 1.670 seconds
Preprocessor visited node count: 4128/1000000
Preprocessor generated node count: 18493/1500000
Post‐expand include size: 84341/2048000 bytes
Template argument size: 3274/2048000 bytes
Highest expansion depth: 15/40
Expensive parser function count: 3/500
Lua time usage: 0.120/10.000 seconds
Lua memory usage: 2.43 MB/50 MB
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:11376-0!*!0!!en!4!*!math=0 and timestamp 20140315081054
 -->
<noscript><img src="http://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>								<div class="printfooter">
				Retrieved from "<a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;oldid=599305991">http://en.wikipedia.org/w/index.php?title=Floating_point&amp;oldid=599305991</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="http://en.wikipedia.org/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="http://en.wikipedia.org/wiki/Category:Data_types" title="Category:Data types">Data types</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Computer_arithmetic" title="Category:Computer arithmetic">Computer arithmetic</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Primitive_types" title="Category:Primitive types">Primitive types</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="http://en.wikipedia.org/wiki/Category:Use_dmy_dates_from_May_2012" title="Category:Use dmy dates from May 2012">Use dmy dates from May 2012</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Floating+point&amp;type=signup">Create account</a></li><li id="pt-login"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Floating+point" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Floating_point.html"  title="View the content page [c]" accesskey="c">Article</a></span></li>
					<li  id="ca-talk"><span><a href="http://en.wikipedia.org/wiki/Talk:Floating_point"  title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Floating_point.html" >Read</a></span></li>
					<li id="ca-edit"><span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=edit"  title="You can edit this page. &#10;Please review your changes before saving. [e]" accesskey="e">Edit</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=history"  title="Past versions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="http://en.wikipedia.org/w/index.php" id="searchform">
					<div id="simpleSearch">
					<input type="search" name="search" placeholder="Search" title="Search Wikipedia [f]" accesskey="f" id="searchInput" /><input type="hidden" value="Special:Search" name="title" /><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton" /><input type="submit" name="go" value="Go" title="Go to a page with this exact name if one exists" id="searchButton" class="searchButton" />		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="Main_Page.html"  title="Visit the main page"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="Main_Page.html" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-contents"><a href="http://en.wikipedia.org/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
			<li id="n-featuredcontent"><a href="http://en.wikipedia.org/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li>
			<li id="n-currentevents"><a href="http://en.wikipedia.org/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
			<li id="n-randompage"><a href="http://en.wikipedia.org/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			<li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li>
			<li id="n-shoplink"><a href="http://shop.wikimedia.org/" title="Visit the Wikimedia Shop">Wikimedia Shop</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
	<h3 id='p-interaction-label'>Interaction</h3>
	<div class="body">
		<ul>
			<li id="n-help"><a href="http://en.wikipedia.org/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			<li id="n-aboutsite"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
			<li id="n-portal"><a href="http://en.wikipedia.org/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
			<li id="n-recentchanges"><a href="http://en.wikipedia.org/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-contactpage"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://en.wikipedia.org/wiki/Special:WhatLinksHere/Floating_point" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://en.wikipedia.org/wiki/Special:RecentChangesLinked/Floating_point" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-upload"><a href="http://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li>
			<li id="t-specialpages"><a href="http://en.wikipedia.org/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;oldid=599305991" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;action=info">Page information</a></li>
			<li id="t-wikibase"><a href="http://www.wikidata.org/wiki/Q117879" title="Link to connected data repository item [g]" accesskey="g">Data item</a></li>
<li id="t-cite"><a href="http://en.wikipedia.org/w/index.php?title=Special:Cite&amp;page=Floating_point&amp;id=599305991" title="Information on how to cite this page">Cite this page</a></li>		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
	<h3 id='p-coll-print_export-label'>Print/export</h3>
	<div class="body">
		<ul>
			<li id="coll-create_a_book"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Floating+point">Create a book</a></li>
			<li id="coll-download-as-rl"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Floating+point&amp;oldid=599305991&amp;writer=rl">Download as PDF</a></li>
			<li id="t-print"><a href="http://en.wikipedia.org/w/index.php?title=Floating_point&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
	<h3 id='p-lang-label'>Languages</h3>
	<div class="body">
		<ul>
			<li class="interlanguage-link interwiki-ar"><a href="http://ar.wikipedia.org/wiki/عدد_فاصل_عائم" title="عدد فاصل عائم – Arabic" lang="ar" hreflang="ar">العربية</a></li>
			<li class="interlanguage-link interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Coma_flotant" title="Coma flotant – Catalan" lang="ca" hreflang="ca">Català</a></li>
			<li class="interlanguage-link interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Pohyblivá_řádová_čárka" title="Pohyblivá řádová čárka – Czech" lang="cs" hreflang="cs">Čeština</a></li>
			<li class="interlanguage-link interwiki-de"><a href="http://de.wikipedia.org/wiki/Gleitkommazahl" title="Gleitkommazahl – German" lang="de" hreflang="de">Deutsch</a></li>
			<li class="interlanguage-link interwiki-et"><a href="http://et.wikipedia.org/wiki/Ujukomaarv" title="Ujukomaarv – Estonian" lang="et" hreflang="et">Eesti</a></li>
			<li class="interlanguage-link interwiki-es"><a href="http://es.wikipedia.org/wiki/Coma_flotante" title="Coma flotante – Spanish" lang="es" hreflang="es">Español</a></li>
			<li class="interlanguage-link interwiki-eo"><a href="http://eo.wikipedia.org/wiki/Glitkomo" title="Glitkomo – Esperanto" lang="eo" hreflang="eo">Esperanto</a></li>
			<li class="interlanguage-link interwiki-fa"><a href="http://fa.wikipedia.org/wiki/ممیز_شناور" title="ممیز شناور – Persian" lang="fa" hreflang="fa">فارسی</a></li>
			<li class="interlanguage-link interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Virgule_flottante" title="Virgule flottante – French" lang="fr" hreflang="fr">Français</a></li>
			<li class="interlanguage-link interwiki-ko"><a href="http://ko.wikipedia.org/wiki/부동소수점" title="부동소수점 – Korean" lang="ko" hreflang="ko">한국어</a></li>
			<li class="interlanguage-link interwiki-id"><a href="http://id.wikipedia.org/wiki/Floating-point" title="Floating-point – Indonesian" lang="id" hreflang="id">Bahasa Indonesia</a></li>
			<li class="interlanguage-link interwiki-it"><a href="http://it.wikipedia.org/wiki/Numero_in_virgola_mobile" title="Numero in virgola mobile – Italian" lang="it" hreflang="it">Italiano</a></li>
			<li class="interlanguage-link interwiki-he"><a href="http://he.wikipedia.org/wiki/נקודה_צפה" title="נקודה צפה – Hebrew" lang="he" hreflang="he">עברית</a></li>
			<li class="interlanguage-link interwiki-hu"><a href="http://hu.wikipedia.org/wiki/Lebegőpontos_számábrázolás" title="Lebegőpontos számábrázolás – Hungarian" lang="hu" hreflang="hu">Magyar</a></li>
			<li class="interlanguage-link interwiki-ml"><a href="http://ml.wikipedia.org/wiki/ഫ്ലോട്ടിങ്ങ്_പോയിന്റ്" title="ഫ്ലോട്ടിങ്ങ് പോയിന്റ് – Malayalam" lang="ml" hreflang="ml">മലയാളം</a></li>
			<li class="interlanguage-link interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Zwevendekommagetal" title="Zwevendekommagetal – Dutch" lang="nl" hreflang="nl">Nederlands</a></li>
			<li class="interlanguage-link interwiki-ja"><a href="http://ja.wikipedia.org/wiki/浮動小数点数" title="浮動小数点数 – Japanese" lang="ja" hreflang="ja">日本語</a></li>
			<li class="interlanguage-link interwiki-no"><a href="http://no.wikipedia.org/wiki/Flyttall" title="Flyttall – Norwegian (bokmål)" lang="no" hreflang="no">Norsk bokmål</a></li>
			<li class="interlanguage-link interwiki-pl"><a href="http://pl.wikipedia.org/wiki/Liczba_zmiennoprzecinkowa" title="Liczba zmiennoprzecinkowa – Polish" lang="pl" hreflang="pl">Polski</a></li>
			<li class="interlanguage-link interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Ponto_flutuante" title="Ponto flutuante – Portuguese" lang="pt" hreflang="pt">Português</a></li>
			<li class="interlanguage-link interwiki-ro"><a href="http://ro.wikipedia.org/wiki/Virgulă_mobilă" title="Virgulă mobilă – Romanian" lang="ro" hreflang="ro">Română</a></li>
			<li class="interlanguage-link interwiki-ru"><a href="http://ru.wikipedia.org/wiki/Число_с_плавающей_запятой" title="Число с плавающей запятой – Russian" lang="ru" hreflang="ru">Русский</a></li>
			<li class="interlanguage-link interwiki-sq"><a href="http://sq.wikipedia.org/wiki/Float" title="Float – Albanian" lang="sq" hreflang="sq">Shqip</a></li>
			<li class="interlanguage-link interwiki-simple"><a href="http://simple.wikipedia.org/wiki/Floating_point" title="Floating point – Simple English" lang="simple" hreflang="simple">Simple English</a></li>
			<li class="interlanguage-link interwiki-sk"><a href="http://sk.wikipedia.org/wiki/Pohyblivá_rádová_čiarka" title="Pohyblivá rádová čiarka – Slovak" lang="sk" hreflang="sk">Slovenčina</a></li>
			<li class="interlanguage-link interwiki-sl"><a href="http://sl.wikipedia.org/wiki/Plavajoča_vejica" title="Plavajoča vejica – Slovenian" lang="sl" hreflang="sl">Slovenščina</a></li>
			<li class="interlanguage-link interwiki-fi"><a href="http://fi.wikipedia.org/wiki/Liukuluku" title="Liukuluku – Finnish" lang="fi" hreflang="fi">Suomi</a></li>
			<li class="interlanguage-link interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Flyttal" title="Flyttal – Swedish" lang="sv" hreflang="sv">Svenska</a></li>
			<li class="interlanguage-link interwiki-th"><a href="http://th.wikipedia.org/wiki/จำนวนจุดลอยตัว" title="จำนวนจุดลอยตัว – Thai" lang="th" hreflang="th">ไทย</a></li>
			<li class="interlanguage-link interwiki-tr"><a href="http://tr.wikipedia.org/wiki/Kayan_nokta" title="Kayan nokta – Turkish" lang="tr" hreflang="tr">Türkçe</a></li>
			<li class="interlanguage-link interwiki-uk"><a href="http://uk.wikipedia.org/wiki/Число_з_плаваючою_комою" title="Число з плаваючою комою – Ukrainian" lang="uk" hreflang="uk">Українська</a></li>
			<li class="interlanguage-link interwiki-vi"><a href="http://vi.wikipedia.org/wiki/Số_thực_dấu_phẩy_động" title="Số thực dấu phẩy động – Vietnamese" lang="vi" hreflang="vi">Tiếng Việt</a></li>
			<li class="interlanguage-link interwiki-zh"><a href="http://zh.wikipedia.org/wiki/浮点数" title="浮点数 – Chinese" lang="zh" hreflang="zh">中文</a></li>
			<li class="uls-p-lang-dummy"><a href="#"></a></li>
			<li class="wbc-editpage"><a href="http://www.wikidata.org/wiki/Q117879#sitelinks-wikipedia" title="Edit interlanguage links">Edit links</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 12 March 2014 at 16:37.<br /></li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="http://wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="http://wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy.</a> <br/>
Wikipedia® is a registered trademark of the <a href="http://www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="http://en.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a class="external" href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-mobileview"><a href="http://en.m.wikipedia.org/wiki/Floating_point" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<a href="http://wikimediafoundation.org/"><img src="http://bits.wikimedia.org/images/wikimedia-button.png" width="88" height="31" alt="Wikimedia Foundation"/></a>
					</li>
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="http://bits.wikimedia.org/static-1.23wmf17/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["ext.cite","mobile.desktop","mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.DRN-wizard","ext.gadget.charinsert","mw.MwEmbedSupport.style","ext.wikimediaShopLink.core","ext.navigationTiming","schema.UniversalLanguageSelector","ext.uls.eventlogger","ext.uls.interlanguage","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served by mw1181 in 1.918 secs. -->
	</body>

<!-- Mirrored from en.wikipedia.org/wiki/Floating_point by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 29 Mar 2014 23:57:34 GMT -->
</html>
