http://old-www.cs.dartmouth.edu/~cs50/data/tse/wikipedia/Call_stack.html
2
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">

<!-- Mirrored from en.wikipedia.org/wiki/Call_stack by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 29 Mar 2014 23:57:51 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="UTF-8" />
<title>Call stack - Wikipedia, the free encyclopedia</title>
<meta http-equiv="X-UA-Compatible" content="IE=EDGE" />
<meta name="generator" content="MediaWiki 1.23wmf19" />
<link rel="alternate" href="http://en.wikipedia.org/wiki/android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Call_stack" />
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit" />
<link rel="edit" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit" />
<link rel="apple-touch-icon" href="http://bits.wikimedia.org/apple-touch/wikipedia.png" />
<link rel="shortcut icon" href="http://bits.wikimedia.org/favicon/wikipedia.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://en.wikipedia.org/w/opensearch_desc.php" title="Wikipedia (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://en.wikipedia.org/w/api.php?action=rsd" />
<link rel="copyright" href="http://creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="canonical" href="Call_stack.html" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cteahouse%7Cext.rtlcite%2Cwikihiero%7Cext.uls.nojs%7Cext.visualEditor.viewPageTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.ui.button%7Cskins.common.interface%7Cskins.vector.styles&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: enwiki:resourceloader:filter:minify-css:7:3904d24a08aa08f6a68dc338f9be277e */</style>

<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Call_stack","wgTitle":"Call stack","wgCurRevisionId":600433050,"wgRevisionId":600433050,"wgArticleId":1718105,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Articles needing additional references from September 2012","All articles needing additional references","All accuracy disputes","Articles with disputed statements from June 2011","Pages containing cite templates with deprecated parameters","Subroutines","Memory management"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Call_stack","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":false,"previewDialog":false,"publish":false,"toc":false},"wgBetaFeaturesFeatures":[],"wgVisualEditor":{"isPageWatched":false,"magnifyClipIconURL":"//bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png","pageLanguageCode":"en","pageLanguageDir":"ltr","svgMaxSize":2048},"wikilove-recipient":"","wikilove-anon":0,"wgGuidedTourHelpGuiderUrl":"Help:Guided tours/guider","wgFlowTermsOfUseEdit":"By saving changes, you agree to our \u003Ca class=\"external text\" href=\"//wikimediafoundation.org/wiki/Terms_of_use\"\u003ETerms of Use\u003C/a\u003E and agree to irrevocably release your text under the \u003Ca rel=\"nofollow\" class=\"external text\" href=\"//creativecommons.org/licenses/by-sa/3.0\"\u003ECC BY-SA 3.0 License\u003C/a\u003E and \u003Ca class=\"external text\" href=\"//en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License\"\u003EGFDL\u003C/a\u003E","wgULSAcceptLanguageList":["nl-nl","nl","en-us","en","fr"],"wgULSCurrentAutonym":"English","wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgNoticeProject":"wikipedia","wgWikibaseItemId":"Q759899"});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"editfont":"default","editondblclick":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nickname":"","norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"showhiddencats":false,"shownumberswatching":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":4,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,
"wllimit":250,"useeditwarning":1,"prefershttps":1,"flaggedrevssimpleui":1,"flaggedrevsstable":0,"flaggedrevseditdiffs":true,"flaggedrevsviewdiffs":false,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"visualeditor-enable":0,"visualeditor-enable-experimental":0,"visualeditor-betatempdisable":0,"wikilove-enabled":1,"echo-subscriptions-web-page-review":true,"echo-subscriptions-email-page-review":false,"ep_showtoplink":false,"ep_bulkdelorgs":false,"ep_bulkdelcourses":true,"ep_showdyk":true,"echo-subscriptions-web-education-program":true,"echo-subscriptions-email-education-program":false,"echo-notify-show-link":true,"echo-show-alert":true,"echo-email-frequency":0,"echo-email-format":"html","echo-subscriptions-email-system":true,"echo-subscriptions-web-system":true,"echo-subscriptions-email-other":false,"echo-subscriptions-web-other":true,"echo-subscriptions-email-edit-user-talk":false,"echo-subscriptions-web-edit-user-talk":true,"echo-subscriptions-email-reverted":false,
"echo-subscriptions-web-reverted":true,"echo-subscriptions-email-article-linked":false,"echo-subscriptions-web-article-linked":false,"echo-subscriptions-email-mention":false,"echo-subscriptions-web-mention":true,"echo-subscriptions-web-edit-thank":true,"echo-subscriptions-email-edit-thank":false,"echo-subscriptions-web-flow-discussion":true,"echo-subscriptions-email-flow-discussion":false,"gettingstarted-task-toolbar-show-intro":true,"uls-preferences":"","language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"searchNs100":false,"searchNs101":false,"searchNs108":false,
"searchNs109":false,"searchNs118":false,"searchNs119":false,"searchNs446":false,"searchNs447":false,"searchNs710":false,"searchNs711":false,"searchNs828":false,"searchNs829":false,"gadget-teahouse":1,"gadget-ReferenceTooltips":1,"gadget-DRN-wizard":1,"gadget-charinsert":1,"gadget-mySandbox":1,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: enwiki:resourceloader:filter:minify-js:7:868e43d07ede2616d2d1dc3507cd8145 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","ext.centralauth.centralautologin","skins.vector.compactPersonalBar.defaultTracking","ext.visualEditor.viewPageTarget.init","ext.uls.init","ext.uls.interface","wikibase.client.init","ext.centralNotice.bannerController","skins.vector.js"]);
}</script>
<link rel="dns-prefetch" href="http://meta.wikimedia.org/" /><!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/static-1.23wmf19/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Call_stack skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<div id="siteNotice"><!-- CentralNotice --></div>
						<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Call stack</span></h1>
						<div id="bodyContent">
								<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-navigation">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><table class="metadata plainlinks ambox ambox-content ambox-Refimprove" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px;"><a href="http://en.wikipedia.org/wiki/File:Question_book-new.svg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x" /></a></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This article <b>needs additional citations for <a href="http://en.wikipedia.org/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit">improve this article</a> by <a href="http://en.wikipedia.org/wiki/Help:Introduction_to_referencing/1" title="Help:Introduction to referencing/1">adding citations to reliable sources</a>. Unsourced material may be challenged and removed.</span> <small><i>(September 2012)</i></small></span></td>
</tr>
</table>
<p>In <a href="Computer_science.html" title="Computer science">computer science</a>, a <b>call stack</b> is a <a href="Stack_(data_structure).html" title="Stack (data structure)" class="mw-redirect">stack</a> data structure that stores information about the active <a href="Subroutine.html" title="Subroutine">subroutines</a> of a <a href="http://en.wikipedia.org/wiki/Computer_program" title="Computer program">computer program</a>. This kind of stack is also known as an <b>execution stack</b>, <b>control stack</b>, <b>run-time stack</b>, or <b>machine stack</b>, and is often shortened to just "the stack". Although maintenance of the call stack is important for the proper functioning of most <a href="Software.html" title="Software">software</a>, the details are normally hidden and automatic in <a href="High-level_programming_language.html" title="High-level programming language">high-level programming languages</a>.</p>
<p>A call stack is used for several related purposes, but the main reason for having one is to keep track of the point to which each active subroutine should return control when it finishes executing. An active subroutine is one that has been called but is yet to complete execution after which control should be handed back to the point of call. Such activations of subroutines may be nested to any level (recursive as a special case), hence the stack structure. If, for example, a subroutine <code>DrawSquare</code> calls a subroutine <code>DrawLine</code> from four different places, <code>DrawLine</code> must know where to return when its execution completes. To accomplish this, the <a href="http://en.wikipedia.org/wiki/Memory_address" title="Memory address">address</a> following the call <a href="http://en.wikipedia.org/wiki/Instruction_(computer_science)" title="Instruction (computer science)" class="mw-redirect">instruction</a>, the <i>return address</i>, is pushed onto the call stack with each call.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Functions_of_the_call_stack"><span class="tocnumber">2</span> <span class="toctext">Functions of the call stack</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Structure"><span class="tocnumber">3</span> <span class="toctext">Structure</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="#The_stack_and_frame_pointers"><span class="tocnumber">3.1</span> <span class="toctext">The stack and frame pointers</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Stack_frame_sizes"><span class="tocnumber">3.2</span> <span class="toctext">Stack frame sizes</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="#Storing_the_address_to_the_caller.27s_frame"><span class="tocnumber">3.3</span> <span class="toctext">Storing the address to the caller's frame</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="#Lexically_nested_routines"><span class="tocnumber">3.4</span> <span class="toctext">Lexically nested routines</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Overlap"><span class="tocnumber">3.5</span> <span class="toctext">Overlap</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="#Use"><span class="tocnumber">4</span> <span class="toctext">Use</span></a>
<ul>
<li class="toclevel-2 tocsection-10"><a href="#Call_site_processing"><span class="tocnumber">4.1</span> <span class="toctext">Call site processing</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#Subroutine_entry_processing"><span class="tocnumber">4.2</span> <span class="toctext">Subroutine entry processing</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="#Return_processing"><span class="tocnumber">4.3</span> <span class="toctext">Return processing</span></a></li>
<li class="toclevel-2 tocsection-13"><a href="#Unwinding"><span class="tocnumber">4.4</span> <span class="toctext">Unwinding</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-14"><a href="#Call_stack_inspection"><span class="tocnumber">5</span> <span class="toctext">Call stack inspection</span></a></li>
<li class="toclevel-1 tocsection-15"><a href="#Performance_analysis"><span class="tocnumber">6</span> <span class="toctext">Performance analysis</span></a></li>
<li class="toclevel-1 tocsection-16"><a href="#Security"><span class="tocnumber">7</span> <span class="toctext">Security</span></a></li>
<li class="toclevel-1 tocsection-17"><a href="#See_also"><span class="tocnumber">8</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-18"><a href="#Notes"><span class="tocnumber">9</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-19"><a href="#References"><span class="tocnumber">10</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-20"><a href="#External_links"><span class="tocnumber">11</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Description">Description</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=1" title="Edit section: Description">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Since the call stack is organized as a <a href="Stack_(data_structure).html" title="Stack (data structure)" class="mw-redirect">stack</a>, the caller <i>pushes</i> the return address onto the stack, and the called subroutine, when it finishes, <a href="http://en.wikipedia.org/wiki/Pop_(computer_programming)" title="Pop (computer programming)" class="mw-redirect">pulls or pops</a> the return address off the call stack and transfers control to that address. If a called subroutine calls on to yet another subroutine, it will push another return address onto the call stack, and so on, with the information stacking up and unstacking as the program dictates. If the pushing consumes all of the space allocated for the call stack, an error called a <a href="http://en.wikipedia.org/wiki/Stack_overflow" title="Stack overflow">stack overflow</a> occurs, generally causing the program to <a href="http://en.wikipedia.org/wiki/Crash_(computing)" title="Crash (computing)">crash</a>. Adding a subroutine's entry to the call stack is sometimes called <b>winding</b>; conversely, removing entries is <b>unwinding</b>.</p>
<p>There is usually exactly one call stack associated with a running program (or more accurately, with each <a href="http://en.wikipedia.org/wiki/Task_(computers)" title="Task (computers)" class="mw-redirect">task</a> or <a href="http://en.wikipedia.org/wiki/Thread_(computer_science)" title="Thread (computer science)" class="mw-redirect">thread</a> of a <a href="Process_(computing).html" title="Process (computing)">process</a>), although additional stacks may be created for <a href="http://en.wikipedia.org/wiki/Signal_(computing)" title="Signal (computing)" class="mw-redirect">signal</a> handling or <a href="http://en.wikipedia.org/wiki/Cooperative_multitasking" title="Cooperative multitasking" class="mw-redirect">cooperative multitasking</a> (as with <a href="http://en.wikipedia.org/wiki/Setcontext" title="Setcontext">setcontext</a>). Since there is only one in this important context, it can be referred to as <i>the</i> stack (implicitly, "of the task"); however, in the <a href="http://en.wikipedia.org/wiki/Forth_programming_language" title="Forth programming language" class="mw-redirect">Forth programming language</a> the <i>data stack</i> or <i>parameter stack</i> is accessed more explicitly than the call stack and is commonly referred to as <i>the</i> stack (see below).</p>
<p>In <a href="High-level_programming_language.html" title="High-level programming language">high-level programming languages</a>, the specifics of the call stack are usually hidden from the programmer. They are given access only to a set of functions, and not the memory on the stack itself. This is an example of <a href="http://en.wikipedia.org/wiki/Abstraction_(computer_science)" title="Abstraction (computer science)">abstraction</a>. Most <a href="Assembly_language.html" title="Assembly language">assembly languages</a>, on the other hand, require programmers to be involved with manipulating the stack. The actual details of the stack in a <a href="Programming_language.html" title="Programming language">programming language</a> depend upon the <a href="Compiler.html" title="Compiler">compiler</a>, <a href="Operating_system.html" title="Operating system">operating system</a>, and the available <a href="http://en.wikipedia.org/wiki/Instruction_set" title="Instruction set">instruction set</a>.</p>
<h2><span class="mw-headline" id="Functions_of_the_call_stack">Functions of the call stack</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=2" title="Edit section: Functions of the call stack">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>As noted above, the primary purpose of a call stack is:</p>
<dl>
<dt>Storing the return address&#160;</dt>
<dd>When a subroutine is called, the location (address) of the instruction at which it can later resume needs to be saved somewhere. Using a stack to save the return address has important advantages over alternatives. One is that each task has its own stack, and thus the subroutine can be <a href="http://en.wikipedia.org/wiki/Reentrant_(subroutine)" title="Reentrant (subroutine)" class="mw-redirect">reentrant</a>, that is, can be active simultaneously for different tasks doing different things. Another benefit is that <a href="http://en.wikipedia.org/wiki/Recursion_(computer_science)" title="Recursion (computer science)">recursion</a> is automatically supported. When a function calls itself recursively, a return address needs to be stored for each activation of the function so that it can later be used to return from the function activation. This capability is automatic with a stack.</dd>
</dl>
<p>A call stack may serve additional functions, depending on the language, operating system, and machine environment. Among them can be:</p>
<dl>
<dt>Local data storage&#160;</dt>
<dd>A subroutine frequently needs memory space for storing the values of <a href="http://en.wikipedia.org/wiki/Local_variable" title="Local variable">local variables</a>, the variables that are known only within the active subroutine and do not retain values after it returns. It is often convenient to allocate space for this use by simply moving the top of the stack by enough to provide the space. This is very fast compared to <a href="Dynamic_memory_allocation.html" title="Dynamic memory allocation" class="mw-redirect">heap</a> allocation. Note that each separate activation of a subroutine gets its own separate space in the stack for locals.</dd>
</dl>
<dl>
<dt>Parameter passing&#160;</dt>
<dd>Subroutines often require that values for <a href="http://en.wikipedia.org/wiki/Parameter_(computer_science)" title="Parameter (computer science)" class="mw-redirect">parameters</a> be supplied to them by the code which calls them, and it is not uncommon that space for these parameters may be laid out in the call stack. Generally if there are only a few small parameters, <a href="http://en.wikipedia.org/wiki/Processor_register" title="Processor register">processor registers</a> will be used to pass the values, but if there are more parameters than can be handled this way, memory space will be needed. The call stack works well as a place for these parameters, especially since each call to a subroutine, which will have differing values for parameters, will be given separate space on the call stack for those values.</dd>
</dl>
<dl>
<dt>Evaluation stack&#160;</dt>
<dd>Operands for arithmetic or logical operations are most often placed into registers and operated on there. However, in some situations the operands may be stacked up to an arbitrary depth, which means something more than registers must be used (this is the case of <a href="http://en.wikipedia.org/wiki/Register_allocation#Spilling" title="Register allocation">register spilling</a>). The stack of such operands, rather like that in an <a href="http://en.wikipedia.org/wiki/RPN_calculator" title="RPN calculator" class="mw-redirect">RPN calculator</a>, is called an evaluation stack, and may occupy space in the call stack.</dd>
</dl>
<dl>
<dt>Pointer to current instance&#160;</dt>
<dd>Some <a href="http://en.wikipedia.org/wiki/Object-oriented_language" title="Object-oriented language" class="mw-redirect">object-oriented languages</a> (e.g., <a href="C%2b%2b.html" title="C++">C++</a>), store the <a href="http://en.wikipedia.org/wiki/This_(computer_science)" title="This (computer science)" class="mw-redirect"><i>this</i> pointer</a> along with function arguments in the call stack when invoking methods. The <i>this</i> pointer points to the <a href="http://en.wikipedia.org/wiki/Object_(computer_science)" title="Object (computer science)">object</a> <a href="http://en.wikipedia.org/wiki/Instance_(computer_science)" title="Instance (computer science)">instance</a> associated with the method to be invoked.</dd>
</dl>
<dl>
<dt>Enclosing subroutine context&#160;</dt>
<dd>Some programming languages (e.g., <a href="Pascal_(programming_language).html" title="Pascal (programming language)">Pascal</a> and <a href="http://en.wikipedia.org/wiki/Ada_(programming_language)" title="Ada (programming language)">Ada</a>) support <a href="http://en.wikipedia.org/wiki/Nested_functions" title="Nested functions" class="mw-redirect">nested subroutines</a>, allowing an inner routine to access the context of its outer enclosing routine, i.e., the parameters and local variables within the scope of the outer routine. Such static nesting can repeat - a function declared within a function declared within a function... The implementation must provide a means by which a called function at any given static nesting level can reference the enclosing frame at each enclosing nesting level. Commonly this reference is implemented by a pointer to the encompassing frame, called a "downstack link" or "static link", to distinguish it from the "dynamic link" that refers to the immediate caller (which need not be the static parent function). For example, languages often allow inner routines to call themselves recursively, resulting in multiple call frames for the inner routine's invocations, all of whose static links point to the same outer routine context. Instead of a static link, the references to the enclosing static frames may be collected into an array of pointers known as a <i>display</i> which is indexed to locate a desired frame. The <a href="Burroughs_large_systems.html" title="Burroughs large systems">Burroughs B6500</a> had such a display in hardware that supported up to 32 levels of static nesting.</dd>
</dl>
<dl>
<dt>Other return state&#160;</dt>
<dd>Besides the return address, in some environments there may be other machine or software states that need to be restored when a subroutine returns. This might include things like privilege level, exception handling information, arithmetic modes, and so on. If needed, this may be stored in the call stack just as the return address is.</dd>
</dl>
<p>The typical call stack is used for the return address, locals, and parameters (known as a <i>call frame</i>). In some environments there may be more or fewer functions assigned to the call stack. In the <a href="http://en.wikipedia.org/wiki/Forth_(programming_language)" title="Forth (programming language)">Forth programming language</a>, for example, ordinarily only the return address, counted loop parameters and indexes, and possibly local variables are stored on the call stack (which in that environment is named the <i>return stack</i>), although any data can be temporarily placed there using special return stack handling code so long as the needs of calls and returns are respected; parameters are ordinarily stored on a separate <i>data stack</i> or <i>parameter stack</i>, typically called <i>the</i> stack in Forth terminology even though there is a call stack since it is usually accessed more explicitly. Some Forths also have a third stack for <a href="Floating_point.html" title="Floating point">floating point</a> parameters.</p>
<h2><span class="mw-headline" id="Structure"><span id="Structure"></span>Structure</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=3" title="Edit section: Structure">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="thumb tright">
<div class="thumbinner" style="width:344px;"><a href="http://en.wikipedia.org/wiki/File:Call_stack_layout.svg" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Call_stack_layout.svg/342px-Call_stack_layout.svg.png" width="342" height="279" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Call_stack_layout.svg/513px-Call_stack_layout.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Call_stack_layout.svg/684px-Call_stack_layout.svg.png 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:Call_stack_layout.svg" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf18/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Call stack layout</div>
</div>
</div>
<p>A call stack is composed of <b>stack frames</b> (also called <b>activation records</b> or <b>activation frames</b>). These are <a href="http://en.wikipedia.org/wiki/Machine_dependent" title="Machine dependent" class="mw-redirect">machine dependent</a> and <a href="http://en.wikipedia.org/wiki/Application_binary_interface" title="Application binary interface">ABI</a>-dependent data structures containing subroutine state information. Each stack frame corresponds to a call to a subroutine which has not yet terminated with a return. For example, if a subroutine named <code>DrawLine</code> is currently running, having been called by a subroutine <code>DrawSquare</code>, the top part of the call stack might be laid out like in the picture on the right.</p>
<p>A diagram like this can be drawn in either direction as long as the placement of the top, and so direction of stack growth, is understood. Furthermore, independently of this, architectures differ as to whether call stacks grow towards higher addresses or towards lower addresses. The logic of the diagram is independent of the addressing choice.</p>
<p>The stack frame at the top of the stack is for the currently executing routine. The stack frame usually includes at least the following items (in push order):</p>
<ul>
<li>the arguments (parameter values) passed to the routine (if any);</li>
<li>the return address back to the routine's caller (e.g. in the <code>DrawLine</code> stack frame, an address into <code>DrawSquare</code>'s code); and</li>
<li>space for the local variables of the routine (if any).</li>
</ul>
<h3><span class="mw-headline" id="The_stack_and_frame_pointers">The stack and frame pointers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=4" title="Edit section: The stack and frame pointers">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The data stored in the stack frame may sometimes be accessed directly via the <b>stack pointer</b> register (SP, which indicates the current top of the stack). However, as the stack pointer is variable during the activation of the routine, memory locations within the stack frame are more typically accessed via a separate register which makes relative addressing simpler and also enables dynamic allocation mechanisms (see below). This register is often termed the <b>frame pointer</b> or <b>stack base pointer</b> (BP) and is set up at procedure entry to point to a <i>fixed</i> location in the frame structure (such as the return address).</p>
<h3><span class="mw-headline" id="Stack_frame_sizes">Stack frame sizes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=5" title="Edit section: Stack frame sizes">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>As different routines have different parameters and local data, stack frames have varying sizes. Although they may often be fixed across all activations of a particular routine, many modern languages also support <i>dynamic</i> allocations on the stack, which means that the local data area will vary from activation to activation with a size that may be unspecified when the program is <a href="Compiler.html" title="Compiler">compiled</a>. In this case access via a frame pointer, rather than via the stack pointer, is usually necessary since the offsets from the stack top to values such as the return address would not be known at compile time. If the subroutine does not use dynamic stack allocation and does not call any further subroutines, the frame pointer is not needed, and the register may be used for other purposes.</p>
<h3><span class="mw-headline" id="Storing_the_address_to_the_caller.27s_frame">Storing the address to the caller's frame</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=6" title="Edit section: Storing the address to the caller's frame">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>In most systems a stack frame has a field to contain the previous value of the frame pointer register, the value it had while the caller was executing. For example, the stack frame of <code>DrawLine</code> would have a memory location holding the frame pointer value that <code>DrawSquare</code> uses (not shown in the diagram above). The value is saved upon entry to the subroutine and restored upon return. Having such a field in a known location in the stack frame enables code to access each frame successively underneath the currently executing routine's frame, and also allows the routine to easily restore the frame pointer to the caller's frame, just before it returns.</p>
<h3><span class="mw-headline" id="Lexically_nested_routines">Lexically nested routines</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=7" title="Edit section: Lexically nested routines">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="rellink">Further information: <a href="http://en.wikipedia.org/wiki/Nested_function" title="Nested function">Nested function</a>&#160;and&#160;<a href="http://en.wikipedia.org/wiki/Non-local_variable" title="Non-local variable">Non-local variable</a></div>
<p>Programming languages that support <a href="http://en.wikipedia.org/wiki/Nested_function" title="Nested function">nested subroutines</a> also have a field in the call frame that points to the stack frame of the <i>latest</i> activation of the procedure that most closely encapsulates the callee, i.e. the immediate <i>scope</i> of the callee. This is called an <b>access link</b> or <b>static link</b> (as it keeps track of static nesting during dynamic and recursive calls) and provides the routine (as well as any other routines it may invoke) access to the local data of its encapsulating routines at every nesting level. Some architectures, compilers, or optimization cases store one link for each enclosing level (not just the immediately enclosing), so that deeply nested routines that access shallow data do not have to traverse several links; this strategy is often called a <b>display</b>.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1"><span>[</span>1<span>]</span></a></sup> Access link(s) can be optimized away in cases where an inner function does not access any (non constant) local data in the encapsulation—pure functions, i.e. routines communicating via argument(s) and return value(s) only would be an example of this. Some historical computers, such as the <a href="Burroughs_large_systems.html" title="Burroughs large systems">Burroughs large systems</a>, had special "display registers" to support nested functions while compilers for most modern machines (such as the ubiquitous x86) simply reserve a few words on the stack for the pointers, as needed.</p>
<h3><span class="mw-headline" id="Overlap">Overlap</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=8" title="Edit section: Overlap">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>For some purposes, the stack frame of a subroutine and that of its caller can be considered to overlap, the overlap consisting of the area where the parameters are passed from the caller to the callee. In some environments, the caller pushes each argument onto the stack, thus extending its stack frame, then invokes the callee. In other environments, the caller has a preallocated area at the top of its stack frame to hold the arguments it supplies to other subroutines it calls. This area is sometimes termed the <b>outgoing arguments area</b> or <b>callout area</b>. Under this approach, the size of the area is calculated by the compiler to be the largest needed by any called subroutine.</p>
<h2><span class="mw-headline" id="Use">Use</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=9" title="Edit section: Use">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="Call_site_processing">Call site processing</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=10" title="Edit section: Call site processing">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Usually the call stack manipulation needed at the site of a call to a subroutine is minimal (which is good since there can be many call sites for each subroutine to be called). The values for the actual arguments are evaluated at the call site, since they are specific to the particular call, and either pushed onto the stack or placed into registers, as determined by the <a href="http://en.wikipedia.org/wiki/Calling_convention" title="Calling convention">calling convention</a> being used. The actual call instruction, such as "Branch and Link," is then typically executed to transfer control to the code of the target subroutine.</p>
<h3><span class="mw-headline" id="Subroutine_entry_processing">Subroutine entry processing</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=11" title="Edit section: Subroutine entry processing">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>In the called subroutine, the first code executed is usually termed the <a href="http://en.wikipedia.org/wiki/Function_prologue" title="Function prologue">subroutine prologue</a>, since it does the necessary housekeeping before the code for the statements of the routine is begun.</p>
<p>The prologue will commonly save the return address left in a register by the call instruction by pushing the value onto the call stack. Similarly, the current stack pointer and/or frame pointer values may be pushed. Alternatively, some instruction set architectures automatically provide comparable functionality as part of the action of the call instruction itself, and in such an environment the prologue need not do this.</p>
<p>If frame pointers are being used, the prologue will typically set the new value of the frame pointer register from the stack pointer. Space on the stack for local variables can then be allocated by incrementally changing the stack pointer.</p>
<p>The <a href="http://en.wikipedia.org/wiki/Forth_(programming_language)" title="Forth (programming language)">Forth programming language</a> allows explicit winding of the call stack (called there the "return stack").</p>
<h3><span class="mw-headline" id="Return_processing">Return processing</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=12" title="Edit section: Return processing">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>When a subroutine is ready to return, it executes an epilogue that undoes the steps of the prologue. This will typically restore saved register values (such as the frame pointer value) from the stack frame, pop the entire stack frame off the stack by changing the stack pointer value, and finally branch to the instruction at the return address. Under many calling conventions the items popped off the stack by the epilogue include the original argument values, in which case there usually are no further stack manipulations that need to be done by the caller. With some calling conventions, however, it is the caller's responsibility to remove the arguments from the stack after the return.</p>
<h3><span class="mw-headline" id="Unwinding">Unwinding</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=13" title="Edit section: Unwinding">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Returning from the called function will pop the top frame off of the stack, perhaps leaving a return value.</p>
<p>Some languages (such as <a href="http://en.wikipedia.org/wiki/Pascal_programming_language" title="Pascal programming language" class="mw-redirect">Pascal</a>) allow a global <a href="http://en.wikipedia.org/wiki/GOTO" title="GOTO" class="mw-redirect">goto</a> statement to transfer control out of a nested function and into a previously invoked outer function. This operation requires the stack to be unwound, removing as many stack frames as necessary to restore the proper context to transfer control to the target statement within the enclosing outer function. Such transfers of control are generally used only for error handling.</p>
<p>Other languages (such as <a href="http://en.wikipedia.org/wiki/Object_Pascal" title="Object Pascal">Object Pascal</a>) provide <a href="http://en.wikipedia.org/wiki/Exception_handling" title="Exception handling">exception handling</a>, which also requires unwinding of the stack. The stack frame of a function contains one or more entries specifying exception handlers. When an exception is thrown, the stack is unwound until an exception handler is found that is prepared to handle (catch) the exception. <a href="http://en.wikipedia.org/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a> allows control of what happens when the stack is unwound by using the <code>unwind-protect</code> special operator.</p>
<p>When applying a <a href="http://en.wikipedia.org/wiki/Continuation" title="Continuation">continuation</a>, the stack is (logically) unwound and then rewound with the stack of the continuation. This is not the only way to implement continuations; for example, using multiple, explicit stacks, application of a continuation can simply activate its stack and wind a value to be passed. The <a href="http://en.wikipedia.org/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme programming language</a> allows arbitrary <a href="http://en.wikipedia.org/wiki/Thunk_(functional_programming)" title="Thunk (functional programming)" class="mw-redirect">thunks</a> to be executed in specified points on "unwinding" or "rewinding" of the control stack when a continuation is invoked.</p>
<h2><span class="mw-headline" id="Call_stack_inspection">Call stack inspection</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=14" title="Edit section: Call stack inspection">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The call stack can sometimes be inspected as the program is running. Depending on how the program is written and compiled, the information on the stack can be used to determine intermediate values and function call traces. This has been used to generate fine-grained automated tests,<sup id="cite_ref-2" class="reference"><a href="#cite_note-2"><span>[</span>2<span>]</span></a></sup> and in cases like Ruby and Smalltalk, to implement first-class continuations.</p>
<h2><span class="mw-headline" id="Performance_analysis">Performance analysis</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=15" title="Edit section: Performance analysis">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Taking regular-time samples of the call stack can be very useful in profiling the performance of programs. The reason is if a subroutine's pointer appears on the call stack sampling data many times, It is likely a code bottleneck and should be inspected for performance problems.<sup class="noprint Inline-Template" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Disputed_statement" title="Wikipedia:Disputed statement" class="mw-redirect"><span title="The material near this tag is possibly inaccurate or nonfactual. (June 2011)">dubious</span></a> <span class="metadata">– <a href="http://en.wikipedia.org/wiki/Talk:Call_stack#Dubious" title="Talk:Call stack">discuss</a></span></i>]</sup> See <a href="http://en.wikipedia.org/wiki/Profiling_(computer_programming)" title="Profiling (computer programming)">Performance analysis</a> and <a href="http://en.wikipedia.org/wiki/Deep_sampling" title="Deep sampling">Deep sampling</a>.</p>
<h2><span class="mw-headline" id="Security">Security</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=16" title="Edit section: Security">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>In a language with free pointers and/or non-checked array writes (such as C), the mixing of control flow data affecting the execution of code (return addresses, saved frame pointers) and simple program data (parameters, return values) in a call stack is a security risk, possibly <a href="http://en.wikipedia.org/wiki/Exploit_(computer_security)" title="Exploit (computer security)">exploitable</a> through <a href="Buffer_overflow.html" title="Buffer overflow">buffer overflows</a>.</p>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=17" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="div-col columns column-width" style="-moz-column-width: 25em; -webkit-column-width: 25em; column-width: 25em;">
<ul>
<li><a href="Automatic_memory_allocation.html" title="Automatic memory allocation" class="mw-redirect">Automatic memory allocation</a></li>
<li><a href="http://en.wikipedia.org/wiki/Calling_convention" title="Calling convention">Calling convention</a></li>
<li><a href="Dynamic_memory_allocation.html" title="Dynamic memory allocation" class="mw-redirect">Dynamic memory allocation</a></li>
<li><a href="http://en.wikipedia.org/w/index.php?title=Segmented_stack&amp;action=edit&amp;redlink=1" class="new" title="Segmented stack (page does not exist)">Segmented stack</a></li>
<li><a href="http://en.wikipedia.org/wiki/Stack-based_memory_allocation" title="Stack-based memory allocation">Stack-based memory allocation</a></li>
<li><a href="http://en.wikipedia.org/wiki/Stack_buffer_overflow" title="Stack buffer overflow">Stack buffer overflow</a></li>
<li><a href="http://en.wikipedia.org/wiki/Stack_machine" title="Stack machine">Stack machine</a></li>
<li><a href="http://en.wikipedia.org/wiki/Stack_overflow" title="Stack overflow">Stack overflow</a></li>
<li><a href="http://en.wikipedia.org/wiki/Overhead_(computing)" title="Overhead (computing)">Overhead (computing)</a></li>
<li><a href="Coroutine.html" title="Coroutine">Coroutine</a></li>
</ul>
</div>
<h2><span class="mw-headline" id="Notes">Notes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=18" title="Edit section: Notes">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><a href="http://c2.com/cgi/wiki?AlternativeMicroprocessorDesign" class="extiw" title="c2:AlternativeMicroprocessorDesign">Alternative Microprocessor Design</a></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text">“Call Stack Coverage for GUI Test-Suite Reduction” by Scott McMaster and Atif M. Memon. In Proceedings of the 17th IEEE International Symposium on Software Reliability Engineering (ISSRE 2006), Nov. 2006.</span></li>
</ol>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=19" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><span class="citation journal"><a href="http://en.wikipedia.org/wiki/Edsger_W._Dijkstra" title="Edsger W. Dijkstra">Dijkstra, Edsger W.</a> (1960). "Recursive Programming". <i>Numerische Mathematik</i> <b>2</b> (1): 312–318. <a href="Digital_object_identifier.html" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="http://dx.doi.org/10.1007%2FBF01386232">10.1007/BF01386232</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACall+stack&amp;rft.atitle=Recursive+Programming&amp;rft.au=Dijkstra%2C+Edsger+W.&amp;rft.aufirst=Edsger+W.&amp;rft.aulast=Dijkstra&amp;rft.date=1960&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1007%2FBF01386232&amp;rft.issue=1&amp;rft.jtitle=Numerische+Mathematik&amp;rft.pages=312%26ndash%3B318&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=2" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><span class="citation journal">Wilson, P.R.; Johnstone, M.S.; Neely, M.; Boles, D. (1995). <a rel="nofollow" class="external text" href="http://books.google.com/?id=m0yZN2bA3TcC&amp;pg=PA1&amp;dq=paul+wilson">"Dynamic Storage Allocation: A Survey and Critical Review"</a>. <i>Memory Management: International Workshop, Iwmm'95, Kinross, Uk, September 27–29, 1995: Proceedings</i> (Springer). <a href="International_Standard_Book_Number.html" title="International Standard Book Number">ISBN</a>&#160;<a href="http://en.wikipedia.org/wiki/Special:BookSources/978-3-540-60368-9" title="Special:BookSources/978-3-540-60368-9">978-3-540-60368-9</a><span class="reference-accessdate">. Retrieved 2008-01-06</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ACall+stack&amp;rft.atitle=Dynamic+Storage+Allocation%3A+A+Survey+and+Critical+Review&amp;rft.aulast=Wilson%2C+P.R.&amp;rft.au=Wilson%2C+P.R.&amp;rft.date=1995&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fbooks.google.com%2F%3Fid%3Dm0yZN2bA3TcC%26pg%3DPA1%26dq%3Dpaul%2Bwilson&amp;rft.isbn=978-3-540-60368-9&amp;rft.jtitle=Memory+Management%3A+International+Workshop%2C+Iwmm%2795%2C+Kinross%2C+Uk%2C+September+27%E2%80%9329%2C+1995%3A+Proceedings&amp;rft.pub=Springer&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span> <span style="display:none;font-size:100%" class="error citation-comment">Cite uses deprecated parameters (<a href="http://en.wikipedia.org/wiki/Help:CS1_errors#deprecated_params" title="Help:CS1 errors">help</a>)</span></li>
</ul>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit&amp;section=20" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a rel="nofollow" class="external text" href="http://www.eventhelix.com/RealtimeMantra/Basics/CToAssemblyTranslation.htm">Function Calling and Frame Pointer Operations in 68000</a></li>
<li><a rel="nofollow" class="external text" href="http://www.nongnu.org/libunwind/">The libunwind project</a> - A platform-independent unwind API.</li>
</ul>
<table cellspacing="0" class="navbox" style="border-spacing:0;">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;">
<tr>
<th scope="col" class="navbox-title" colspan="2">
<div class="plainlinks hlist navbar mini">
<ul>
<li class="nv-view"><a href="http://en.wikipedia.org/wiki/Template:Application_binary_interface" title="Template:Application binary interface"><span title="View this template" style=";;background:none transparent;border:none;;">v</span></a></li>
<li class="nv-talk"><a href="http://en.wikipedia.org/w/index.php?title=Template_talk:Application_binary_interface&amp;action=edit&amp;redlink=1" class="new" title="Template talk:Application binary interface (page does not exist)"><span title="Discuss this template" style=";;background:none transparent;border:none;;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="http://en.wikipedia.org/w/index.php?title=Template:Application_binary_interface&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;;">e</span></a></li>
</ul>
</div>
<div style="font-size:110%;"><a href="http://en.wikipedia.org/wiki/Application_binary_interface" title="Application binary interface">Application binary interface</a></div>
</th>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">ABI parts and conventions</th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Data_structure_alignment" title="Data structure alignment">Alignment</a></li>
<li><a href="http://en.wikipedia.org/wiki/Calling_convention" title="Calling convention">Calling convention</a></li>
<li><strong class="selflink">Call stack</strong></li>
<li><a href="Library_(computing).html" title="Library (computing)">Library</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Static_library" title="Static library">static</a></li>
</ul>
</li>
<li><a href="http://en.wikipedia.org/wiki/Machine_code" title="Machine code">Machine code</a></li>
<li><a href="http://en.wikipedia.org/wiki/Memory_segmentation" title="Memory segmentation">Memory segmentation</a></li>
<li><a href="http://en.wikipedia.org/wiki/Name_mangling" title="Name mangling">Name mangling</a></li>
<li><a href="Object_code.html" title="Object code">Object code</a></li>
<li><a href="http://en.wikipedia.org/wiki/Opaque_pointer" title="Opaque pointer">Opaque pointer</a></li>
<li><a href="http://en.wikipedia.org/wiki/Position-independent_code" title="Position-independent code">Position-independent code</a></li>
<li><a href="http://en.wikipedia.org/wiki/Register_allocation" title="Register allocation">Register allocation</a></li>
<li><a href="http://en.wikipedia.org/wiki/Relocation_(computing)" title="Relocation (computing)">Relocation</a></li>
<li><a href="System_call.html" title="System call">System call</a></li>
<li><a href="http://en.wikipedia.org/wiki/Virtual_method_table" title="Virtual method table">Virtual method table</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td colspan="2"></td>
</tr>
<tr>
<th scope="row" class="navbox-group">Related topics</th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;">
<div style="padding:0em 0.25em;">
<ul>
<li><a href="http://en.wikipedia.org/wiki/Binary_code_compatibility" title="Binary code compatibility">Binary code compatibility</a></li>
<li><a href="http://en.wikipedia.org/wiki/Foreign_function_interface" title="Foreign function interface">Foreign function interface</a></li>
<li><a href="http://en.wikipedia.org/wiki/Language_binding" title="Language binding">Language binding</a></li>
<li><a href="Linker_(computing).html" title="Linker (computing)">Linker</a>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Dynamic_linker" title="Dynamic linker">dynamic</a></li>
</ul>
</li>
<li><a href="Loader_(computing).html" title="Loader (computing)">Loader</a></li>
<li><a href="Year_2038_problem.html" title="Year 2038 problem">Year 2038 problem</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Parsed by mw1046
CPU time usage: 0.580 seconds
Real time usage: 0.644 seconds
Preprocessor visited node count: 532/1000000
Preprocessor generated node count: 2845/1500000
Post‐expand include size: 16936/2048000 bytes
Template argument size: 766/2048000 bytes
Highest expansion depth: 11/40
Expensive parser function count: 5/500
Lua time usage: 0.075/10.000 seconds
Lua memory usage: 1.64 MB/50 MB
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:1718105-0!*!0!!en!4!* and timestamp 20140325035912
 -->
<noscript><img src="http://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>								<div class="printfooter">
				Retrieved from "<a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;oldid=600433050">http://en.wikipedia.org/w/index.php?title=Call_stack&amp;oldid=600433050</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="http://en.wikipedia.org/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="http://en.wikipedia.org/wiki/Category:Subroutines" title="Category:Subroutines">Subroutines</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Memory_management" title="Category:Memory management">Memory management</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="http://en.wikipedia.org/wiki/Category:Articles_needing_additional_references_from_September_2012" title="Category:Articles needing additional references from September 2012">Articles needing additional references from September 2012</a></li><li><a href="http://en.wikipedia.org/wiki/Category:All_articles_needing_additional_references" title="Category:All articles needing additional references">All articles needing additional references</a></li><li><a href="http://en.wikipedia.org/wiki/Category:All_accuracy_disputes" title="Category:All accuracy disputes">All accuracy disputes</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_disputed_statements_from_June_2011" title="Category:Articles with disputed statements from June 2011">Articles with disputed statements from June 2011</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Pages_containing_cite_templates_with_deprecated_parameters" title="Category:Pages containing cite templates with deprecated parameters">Pages containing cite templates with deprecated parameters</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Call+stack&amp;type=signup">Create account</a></li><li id="pt-login"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=Call+stack" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="Call_stack.html"  title="View the content page [c]" accesskey="c">Article</a></span></li>
					<li  id="ca-talk"><span><a href="http://en.wikipedia.org/wiki/Talk:Call_stack"  title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="Call_stack.html" >Read</a></span></li>
					<li id="ca-edit"><span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=edit"  title="You can edit this page. &#10;Please review your changes before saving. [e]" accesskey="e">Edit</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=history"  title="Past versions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="http://en.wikipedia.org/w/index.php" id="searchform">
					<div id="simpleSearch">
					<input type="search" name="search" placeholder="Search" title="Search Wikipedia [f]" accesskey="f" id="searchInput" /><input type="hidden" value="Special:Search" name="title" /><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton" /><input type="submit" name="go" value="Go" title="Go to a page with this exact name if one exists" id="searchButton" class="searchButton" />		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="Main_Page.html"  title="Visit the main page"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="Main_Page.html" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-contents"><a href="http://en.wikipedia.org/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
			<li id="n-featuredcontent"><a href="http://en.wikipedia.org/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li>
			<li id="n-currentevents"><a href="http://en.wikipedia.org/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
			<li id="n-randompage"><a href="http://en.wikipedia.org/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			<li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li>
			<li id="n-shoplink"><a href="http://shop.wikimedia.org/" title="Visit the Wikimedia Shop">Wikimedia Shop</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
	<h3 id='p-interaction-label'>Interaction</h3>
	<div class="body">
		<ul>
			<li id="n-help"><a href="http://en.wikipedia.org/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			<li id="n-aboutsite"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
			<li id="n-portal"><a href="http://en.wikipedia.org/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
			<li id="n-recentchanges"><a href="http://en.wikipedia.org/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-contactpage"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://en.wikipedia.org/wiki/Special:WhatLinksHere/Call_stack" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://en.wikipedia.org/wiki/Special:RecentChangesLinked/Call_stack" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-upload"><a href="http://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li>
			<li id="t-specialpages"><a href="http://en.wikipedia.org/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;oldid=600433050" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;action=info">Page information</a></li>
			<li id="t-wikibase"><a href="http://www.wikidata.org/wiki/Q759899" title="Link to connected data repository item [g]" accesskey="g">Data item</a></li>
<li id="t-cite"><a href="http://en.wikipedia.org/w/index.php?title=Special:Cite&amp;page=Call_stack&amp;id=600433050" title="Information on how to cite this page">Cite this page</a></li>		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
	<h3 id='p-coll-print_export-label'>Print/export</h3>
	<div class="body">
		<ul>
			<li id="coll-create_a_book"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Call+stack">Create a book</a></li>
			<li id="coll-download-as-rl"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Call+stack&amp;oldid=600433050&amp;writer=rl">Download as PDF</a></li>
			<li id="t-print"><a href="http://en.wikipedia.org/w/index.php?title=Call_stack&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
	<h3 id='p-lang-label'>Languages</h3>
	<div class="body">
		<ul>
			<li class="interlanguage-link interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Zásobník_volání" title="Zásobník volání – Czech" lang="cs" hreflang="cs">Čeština</a></li>
			<li class="interlanguage-link interwiki-de"><a href="http://de.wikipedia.org/wiki/Aufrufstapel" title="Aufrufstapel – German" lang="de" hreflang="de">Deutsch</a></li>
			<li class="interlanguage-link interwiki-el"><a href="http://el.wikipedia.org/wiki/Στοίβα_κλήσεων" title="Στοίβα κλήσεων – Greek" lang="el" hreflang="el">Ελληνικά</a></li>
			<li class="interlanguage-link interwiki-es"><a href="http://es.wikipedia.org/wiki/Pila_de_llamadas" title="Pila de llamadas – Spanish" lang="es" hreflang="es">Español</a></li>
			<li class="interlanguage-link interwiki-fa"><a href="http://fa.wikipedia.org/wiki/پشته_فراخوانی" title="پشته فراخوانی – Persian" lang="fa" hreflang="fa">فارسی</a></li>
			<li class="interlanguage-link interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Pile_d%27exécution" title="Pile d'exécution – French" lang="fr" hreflang="fr">Français</a></li>
			<li class="interlanguage-link interwiki-ko"><a href="http://ko.wikipedia.org/wiki/콜_스택" title="콜 스택 – Korean" lang="ko" hreflang="ko">한국어</a></li>
			<li class="interlanguage-link interwiki-is"><a href="http://is.wikipedia.org/wiki/Kallhlaði" title="Kallhlaði – Icelandic" lang="is" hreflang="is">Íslenska</a></li>
			<li class="interlanguage-link interwiki-it"><a href="http://it.wikipedia.org/wiki/Call_stack" title="Call stack – Italian" lang="it" hreflang="it">Italiano</a></li>
			<li class="interlanguage-link interwiki-he"><a href="http://he.wikipedia.org/wiki/מחסנית_קריאות" title="מחסנית קריאות – Hebrew" lang="he" hreflang="he">עברית</a></li>
			<li class="interlanguage-link interwiki-nl"><a href="http://nl.wikipedia.org/wiki/Call_stack" title="Call stack – Dutch" lang="nl" hreflang="nl">Nederlands</a></li>
			<li class="interlanguage-link interwiki-ja"><a href="http://ja.wikipedia.org/wiki/コールスタック" title="コールスタック – Japanese" lang="ja" hreflang="ja">日本語</a></li>
			<li class="interlanguage-link interwiki-pt"><a href="http://pt.wikipedia.org/wiki/Pilha_de_chamada" title="Pilha de chamada – Portuguese" lang="pt" hreflang="pt">Português</a></li>
			<li class="interlanguage-link interwiki-ru"><a href="http://ru.wikipedia.org/wiki/Стек_вызовов" title="Стек вызовов – Russian" lang="ru" hreflang="ru">Русский</a></li>
			<li class="interlanguage-link interwiki-sv"><a href="http://sv.wikipedia.org/wiki/Stackpekare" title="Stackpekare – Swedish" lang="sv" hreflang="sv">Svenska</a></li>
			<li class="interlanguage-link interwiki-ta"><a href="http://ta.wikipedia.org/wiki/அழைப்பு_அடுக்கு" title="அழைப்பு அடுக்கு – Tamil" lang="ta" hreflang="ta">தமிழ்</a></li>
			<li class="interlanguage-link interwiki-uk"><a href="http://uk.wikipedia.org/wiki/Стек_викликів" title="Стек викликів – Ukrainian" lang="uk" hreflang="uk">Українська</a></li>
			<li class="interlanguage-link interwiki-zh"><a href="http://zh.wikipedia.org/wiki/调用栈" title="调用栈 – Chinese" lang="zh" hreflang="zh">中文</a></li>
			<li class="uls-p-lang-dummy"><a href="#"></a></li>
			<li class="wbc-editpage"><a href="http://www.wikidata.org/wiki/Q759899#sitelinks-wikipedia" title="Edit interlanguage links">Edit links</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 20 March 2014 at 10:43.<br /></li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="http://wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="http://wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy.</a> <br/>
Wikipedia® is a registered trademark of the <a href="http://www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="http://en.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a class="external" href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-mobileview"><a href="http://en.m.wikipedia.org/wiki/Call_stack" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<a href="http://wikimediafoundation.org/"><img src="http://bits.wikimedia.org/images/wikimedia-button.png" width="88" height="31" alt="Wikimedia Foundation"/></a>
					</li>
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["ext.cite","mobile.desktop","mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.DRN-wizard","ext.gadget.charinsert","mw.MwEmbedSupport.style","ext.navigationTiming","schema.UniversalLanguageSelector","ext.uls.eventlogger","ext.uls.interlanguage","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served by mw1167 in 0.322 secs. -->
	</body>

<!-- Mirrored from en.wikipedia.org/wiki/Call_stack by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 29 Mar 2014 23:57:51 GMT -->
</html>
