http://old-www.cs.dartmouth.edu/~cs50/data/tse/wikipedia/For_loop.html
2
<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">

<!-- Mirrored from en.wikipedia.org/wiki/For_loop by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 29 Mar 2014 23:57:06 GMT -->
<!-- Added by HTTrack --><meta http-equiv="content-type" content="text/html;charset=UTF-8" /><!-- /Added by HTTrack -->
<head>
<meta charset="UTF-8" />
<title>For loop - Wikipedia, the free encyclopedia</title>
<meta http-equiv="X-UA-Compatible" content="IE=EDGE" />
<meta name="generator" content="MediaWiki 1.23wmf19" />
<link rel="alternate" href="http://en.wikipedia.org/wiki/android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/For_loop" />
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit" />
<link rel="edit" title="Edit this page" href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit" />
<link rel="apple-touch-icon" href="http://bits.wikimedia.org/apple-touch/wikipedia.png" />
<link rel="shortcut icon" href="http://bits.wikimedia.org/favicon/wikipedia.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="http://en.wikipedia.org/w/opensearch_desc.php" title="Wikipedia (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://en.wikipedia.org/w/api.php?action=rsd" />
<link rel="copyright" href="http://creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="http://en.wikipedia.org/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="canonical" href="For_loop.html" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cteahouse%7Cext.geshi.local%7Cext.rtlcite%2Cwikihiero%7Cext.uls.nojs%7Cext.visualEditor.viewPageTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.ui.button%7Cskins.common.interface%7Cskins.vector.styles&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: enwiki:resourceloader:filter:minify-css:7:3904d24a08aa08f6a68dc338f9be277e */</style>

<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"For_loop","wgTitle":"For loop","wgCurRevisionId":597520676,"wgRevisionId":597520676,"wgArticleId":468924,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["All articles with unsourced statements","Articles with unsourced statements from November 2013","Articles with example Ada code","Articles with example ALGOL 68 code","Articles with example C code","Articles with example Fortran code","Articles with example Perl code","Iteration in programming"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"For_loop","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":false,"previewDialog":false,"publish":false,"toc":false},"wgBetaFeaturesFeatures":[],"wgVisualEditor":{"isPageWatched":false,"magnifyClipIconURL":"//bits.wikimedia.org/static-1.23wmf19/skins/common/images/magnify-clip.png","pageLanguageCode":"en","pageLanguageDir":"ltr","svgMaxSize":2048},"wikilove-recipient":"","wikilove-anon":0,"wgGuidedTourHelpGuiderUrl":"Help:Guided tours/guider","wgFlowTermsOfUseEdit":"By saving changes, you agree to our \u003Ca class=\"external text\" href=\"//wikimediafoundation.org/wiki/Terms_of_use\"\u003ETerms of Use\u003C/a\u003E and agree to irrevocably release your text under the \u003Ca rel=\"nofollow\" class=\"external text\" href=\"//creativecommons.org/licenses/by-sa/3.0\"\u003ECC BY-SA 3.0 License\u003C/a\u003E and \u003Ca class=\"external text\" href=\"//en.wikipedia.org/wiki/Wikipedia:Text_of_the_GNU_Free_Documentation_License\"\u003EGFDL\u003C/a\u003E","wgULSAcceptLanguageList":["en-us","en"],"wgULSCurrentAutonym":"English","wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgNoticeProject":"wikipedia","wgWikibaseItemId":"Q838119"});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"editfont":"default","editondblclick":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nickname":"","norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"showhiddencats":false,"shownumberswatching":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":4,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,
"wllimit":250,"useeditwarning":1,"prefershttps":1,"flaggedrevssimpleui":1,"flaggedrevsstable":0,"flaggedrevseditdiffs":true,"flaggedrevsviewdiffs":false,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"visualeditor-enable":0,"visualeditor-enable-experimental":0,"visualeditor-betatempdisable":0,"wikilove-enabled":1,"echo-subscriptions-web-page-review":true,"echo-subscriptions-email-page-review":false,"ep_showtoplink":false,"ep_bulkdelorgs":false,"ep_bulkdelcourses":true,"ep_showdyk":true,"echo-subscriptions-web-education-program":true,"echo-subscriptions-email-education-program":false,"echo-notify-show-link":true,"echo-show-alert":true,"echo-email-frequency":0,"echo-email-format":"html","echo-subscriptions-email-system":true,"echo-subscriptions-web-system":true,"echo-subscriptions-email-other":false,"echo-subscriptions-web-other":true,"echo-subscriptions-email-edit-user-talk":false,"echo-subscriptions-web-edit-user-talk":true,"echo-subscriptions-email-reverted":false,
"echo-subscriptions-web-reverted":true,"echo-subscriptions-email-article-linked":false,"echo-subscriptions-web-article-linked":false,"echo-subscriptions-email-mention":false,"echo-subscriptions-web-mention":true,"echo-subscriptions-web-edit-thank":true,"echo-subscriptions-email-edit-thank":false,"echo-subscriptions-web-flow-discussion":true,"echo-subscriptions-email-flow-discussion":false,"gettingstarted-task-toolbar-show-intro":true,"uls-preferences":"","language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"searchNs100":false,"searchNs101":false,"searchNs108":false,
"searchNs109":false,"searchNs118":false,"searchNs119":false,"searchNs446":false,"searchNs447":false,"searchNs710":false,"searchNs711":false,"searchNs828":false,"searchNs829":false,"gadget-teahouse":1,"gadget-ReferenceTooltips":1,"gadget-DRN-wizard":1,"gadget-charinsert":1,"gadget-mySandbox":1,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: enwiki:resourceloader:filter:minify-js:7:868e43d07ede2616d2d1dc3507cd8145 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","ext.centralauth.centralautologin","skins.vector.compactPersonalBar.defaultTracking","ext.visualEditor.viewPageTarget.init","ext.uls.init","ext.uls.interface","wikibase.client.init","ext.centralNotice.bannerController","skins.vector.js"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-java {line-height: normal;}
.source-java li, .source-java pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for java
 * CSS class: source-java, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.java.source-java .de1, .java.source-java .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.java.source-java  {font-family:monospace;}
.java.source-java .imp {font-weight: bold; color: red;}
.java.source-java li, .java.source-java .li1 {font-weight: normal; vertical-align:top;}
.java.source-java .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.java.source-java .li2 {font-weight: bold; vertical-align:top;}
.java.source-java .kw1 {color: #000000; font-weight: bold;}
.java.source-java .kw2 {color: #000066; font-weight: bold;}
.java.source-java .kw3 {color: #003399;}
.java.source-java .kw4 {color: #000066; font-weight: bold;}
.java.source-java .co1 {color: #666666; font-style: italic;}
.java.source-java .co2 {color: #006699;}
.java.source-java .co3 {color: #008000; font-style: italic; font-weight: bold;}
.java.source-java .coMULTI {color: #666666; font-style: italic;}
.java.source-java .es0 {color: #000099; font-weight: bold;}
.java.source-java .br0 {color: #009900;}
.java.source-java .sy0 {color: #339933;}
.java.source-java .st0 {color: #0000ff;}
.java.source-java .nu0 {color: #cc66cc;}
.java.source-java .me1 {color: #006633;}
.java.source-java .me2 {color: #006633;}
.java.source-java .ln-xtra, .java.source-java li.ln-xtra, .java.source-java div.ln-xtra {background-color: #ffc;}
.java.source-java span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-python {line-height: normal;}
.source-python li, .source-python pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for python
 * CSS class: source-python, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.python.source-python .de1, .python.source-python .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.python.source-python  {font-family:monospace;}
.python.source-python .imp {font-weight: bold; color: red;}
.python.source-python li, .python.source-python .li1 {font-weight: normal; vertical-align:top;}
.python.source-python .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.python.source-python .li2 {font-weight: bold; vertical-align:top;}
.python.source-python .kw1 {color: #ff7700;font-weight:bold;}
.python.source-python .kw2 {color: #008000;}
.python.source-python .kw3 {color: #dc143c;}
.python.source-python .kw4 {color: #0000cd;}
.python.source-python .co1 {color: #808080; font-style: italic;}
.python.source-python .coMULTI {color: #808080; font-style: italic;}
.python.source-python .es0 {color: #000099; font-weight: bold;}
.python.source-python .br0 {color: black;}
.python.source-python .sy0 {color: #66cc66;}
.python.source-python .st0 {color: #483d8b;}
.python.source-python .nu0 {color: #ff4500;}
.python.source-python .me1 {color: black;}
.python.source-python .ln-xtra, .python.source-python li.ln-xtra, .python.source-python div.ln-xtra {background-color: #ffc;}
.python.source-python span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-fortran {line-height: normal;}
.source-fortran li, .source-fortran pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for fortran
 * CSS class: source-fortran, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.fortran.source-fortran .de1, .fortran.source-fortran .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.fortran.source-fortran  {font-family:monospace;}
.fortran.source-fortran .imp {font-weight: bold; color: red;}
.fortran.source-fortran li, .fortran.source-fortran .li1 {font-weight: normal; vertical-align:top;}
.fortran.source-fortran .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.fortran.source-fortran .li2 {font-weight: bold; vertical-align:top;}
.fortran.source-fortran .kw1 {color: #b1b100;}
.fortran.source-fortran .kw2 {color: #000000; font-weight: bold;}
.fortran.source-fortran .kw3 {color: #000066;}
.fortran.source-fortran .kw4 {color: #993333;}
.fortran.source-fortran .co1 {color: #666666; font-style: italic;}
.fortran.source-fortran .co2 {color: #339933;}
.fortran.source-fortran .coMULTI {color: #808080; font-style: italic;}
.fortran.source-fortran .es0 {color: #000099; font-weight: bold;}
.fortran.source-fortran .br0 {color: #009900;}
.fortran.source-fortran .sy0 {color: #339933;}
.fortran.source-fortran .st0 {color: #ff0000;}
.fortran.source-fortran .nu0 {color: #cc66cc;}
.fortran.source-fortran .me1 {color: #202020;}
.fortran.source-fortran .me2 {color: #202020;}
.fortran.source-fortran .ln-xtra, .fortran.source-fortran li.ln-xtra, .fortran.source-fortran div.ln-xtra {background-color: #ffc;}
.fortran.source-fortran span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #b1b100;}
.c.source-c .kw2 {color: #000000; font-weight: bold;}
.c.source-c .kw3 {color: #000066;}
.c.source-c .kw4 {color: #993333;}
.c.source-c .co1 {color: #666666; font-style: italic;}
.c.source-c .co2 {color: #339933;}
.c.source-c .coMULTI {color: #808080; font-style: italic;}
.c.source-c .es0 {color: #000099; font-weight: bold;}
.c.source-c .es1 {color: #000099; font-weight: bold;}
.c.source-c .es2 {color: #660099; font-weight: bold;}
.c.source-c .es3 {color: #660099; font-weight: bold;}
.c.source-c .es4 {color: #660099; font-weight: bold;}
.c.source-c .es5 {color: #006699; font-weight: bold;}
.c.source-c .br0 {color: #009900;}
.c.source-c .sy0 {color: #339933;}
.c.source-c .st0 {color: #ff0000;}
.c.source-c .nu0 {color: #0000dd;}
.c.source-c .nu6 {color: #208080;}
.c.source-c .nu8 {color: #208080;}
.c.source-c .nu12 {color: #208080;}
.c.source-c .nu16 {color:#800080;}
.c.source-c .nu17 {color:#800080;}
.c.source-c .nu18 {color:#800080;}
.c.source-c .nu19 {color:#800080;}
.c.source-c .me1 {color: #202020;}
.c.source-c .me2 {color: #202020;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-pli {line-height: normal;}
.source-pli li, .source-pli pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for pli
 * CSS class: source-pli, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.pli.source-pli .de1, .pli.source-pli .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.pli.source-pli  {font-family:monospace;}
.pli.source-pli .imp {font-weight: bold; color: red;}
.pli.source-pli li, .pli.source-pli .li1 {font-weight: normal; vertical-align:top;}
.pli.source-pli .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.pli.source-pli .li2 {font-weight: bold; vertical-align:top;}
.pli.source-pli .kw1 {color: #b1b100;}
.pli.source-pli .coMULTI {color: #666666; font-style: italic;}
.pli.source-pli .es0 {color: #000099; font-weight: bold;}
.pli.source-pli .br0 {color: #009900;}
.pli.source-pli .sy1 {color: #339933;}
.pli.source-pli .st0 {color: #0000ff;}
.pli.source-pli .nu0 {color: #cc66cc;}
.pli.source-pli .me0 {color: #004000;}
.pli.source-pli .ln-xtra, .pli.source-pli li.ln-xtra, .pli.source-pli div.ln-xtra {background-color: #ffc;}
.pli.source-pli span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-actionscript3 {line-height: normal;}
.source-actionscript3 li, .source-actionscript3 pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for actionscript3
 * CSS class: source-actionscript3, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.actionscript3.source-actionscript3 .de1, .actionscript3.source-actionscript3 .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.actionscript3.source-actionscript3  {font-family:monospace;}
.actionscript3.source-actionscript3 .imp {font-weight: bold; color: red;}
.actionscript3.source-actionscript3 li, .actionscript3.source-actionscript3 .li1 {font-weight: normal; vertical-align:top;}
.actionscript3.source-actionscript3 .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.actionscript3.source-actionscript3 .li2 {font-weight: bold; vertical-align:top;}
.actionscript3.source-actionscript3 .kw1 {color: #0033ff; font-weight: bold;}
.actionscript3.source-actionscript3 .kw2 {color: #6699cc; font-weight: bold;}
.actionscript3.source-actionscript3 .kw3 {color: #339966; font-weight: bold;}
.actionscript3.source-actionscript3 .kw4 {color: #9900cc; font-weight: bold;}
.actionscript3.source-actionscript3 .kw5 {color: #004993;}
.actionscript3.source-actionscript3 .kw6 {color: #004993;}
.actionscript3.source-actionscript3 .kw7 {color: #004993;}
.actionscript3.source-actionscript3 .kw8 {color: #004993;}
.actionscript3.source-actionscript3 .co1 {color: #009900; font-style: italic;}
.actionscript3.source-actionscript3 .co2 {color: #009966; font-style: italic;}
.actionscript3.source-actionscript3 .coMULTI {color: #3f5fbf;}
.actionscript3.source-actionscript3 .br0 {color: #000000;}
.actionscript3.source-actionscript3 .sy0 {color: #000066; font-weight: bold;}
.actionscript3.source-actionscript3 .st0 {color: #990000;}
.actionscript3.source-actionscript3 .nu0 {color: #000000; font-weight:bold;}
.actionscript3.source-actionscript3 .me0 {color: #000000;}
.actionscript3.source-actionscript3 .ln-xtra, .actionscript3.source-actionscript3 li.ln-xtra, .actionscript3.source-actionscript3 div.ln-xtra {background-color: #ffc;}
.actionscript3.source-actionscript3 span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-ada {line-height: normal;}
.source-ada li, .source-ada pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for ada
 * CSS class: source-ada, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.ada.source-ada .de1, .ada.source-ada .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.ada.source-ada  {font-family:monospace;}
.ada.source-ada .imp {font-weight: bold; color: red;}
.ada.source-ada li, .ada.source-ada .li1 {font-weight: normal; vertical-align:top;}
.ada.source-ada .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.ada.source-ada .li2 {font-weight: bold; vertical-align:top;}
.ada.source-ada .kw1 {color: #00007f;}
.ada.source-ada .kw2 {color: #0000ff;}
.ada.source-ada .kw3 {color: #46aa03; font-weight:bold;}
.ada.source-ada .co1 {color: #adadad; font-style: italic;}
.ada.source-ada .coMULTI {color: #808080; font-style: italic;}
.ada.source-ada .es0 {color: #000099; font-weight: bold;}
.ada.source-ada .br0 {color: #66cc66;}
.ada.source-ada .sy0 {color: #66cc66;}
.ada.source-ada .st0 {color: #7f007f;}
.ada.source-ada .nu0 {color: #ff0000;}
.ada.source-ada .me1 {color: #202020;}
.ada.source-ada .ln-xtra, .ada.source-ada li.ln-xtra, .ada.source-ada div.ln-xtra {background-color: #ffc;}
.ada.source-ada span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-applescript {line-height: normal;}
.source-applescript li, .source-applescript pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for applescript
 * CSS class: source-applescript, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.applescript.source-applescript .de1, .applescript.source-applescript .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.applescript.source-applescript  {font-family:monospace;}
.applescript.source-applescript .imp {font-weight: bold; color: red;}
.applescript.source-applescript li, .applescript.source-applescript .li1 {font-weight: normal; vertical-align:top;}
.applescript.source-applescript .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.applescript.source-applescript .li2 {font-weight: bold; vertical-align:top;}
.applescript.source-applescript .kw1 {color: #0066ff;}
.applescript.source-applescript .kw2 {color: #ff0033;}
.applescript.source-applescript .kw3 {color: #ff0033; font-weight: bold;}
.applescript.source-applescript .co1 {color: #808080; font-style: italic;}
.applescript.source-applescript .co3 {color: #ff0000;}
.applescript.source-applescript .coMULTI {color: #808080; font-style: italic;}
.applescript.source-applescript .es0 {color: #000000; font-weight: bold;}
.applescript.source-applescript .br0 {color: #000000;}
.applescript.source-applescript .sy0 {color: #000000;}
.applescript.source-applescript .st0 {color: #009900;}
.applescript.source-applescript .nu0 {color: #000000;}
.applescript.source-applescript .me1 {color: #006600;}
.applescript.source-applescript .me2 {color: #006600;}
.applescript.source-applescript .re0 {color: #339933;}
.applescript.source-applescript .re4 {color: #0066ff;}
.applescript.source-applescript .ln-xtra, .applescript.source-applescript li.ln-xtra, .applescript.source-applescript div.ln-xtra {background-color: #ffc;}
.applescript.source-applescript span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-bash {line-height: normal;}
.source-bash li, .source-bash pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for bash
 * CSS class: source-bash, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.bash.source-bash .de1, .bash.source-bash .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.bash.source-bash  {font-family:monospace;}
.bash.source-bash .imp {font-weight: bold; color: red;}
.bash.source-bash li, .bash.source-bash .li1 {font-weight: normal; vertical-align:top;}
.bash.source-bash .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.bash.source-bash .li2 {font-weight: bold; vertical-align:top;}
.bash.source-bash .kw1 {color: #000000; font-weight: bold;}
.bash.source-bash .kw2 {color: #c20cb9; font-weight: bold;}
.bash.source-bash .kw3 {color: #7a0874; font-weight: bold;}
.bash.source-bash .co0 {color: #666666; font-style: italic;}
.bash.source-bash .co1 {color: #800000;}
.bash.source-bash .co2 {color: #cc0000; font-style: italic;}
.bash.source-bash .co3 {color: #000000; font-weight: bold;}
.bash.source-bash .co4 {color: #666666;}
.bash.source-bash .es1 {color: #000099; font-weight: bold;}
.bash.source-bash .es2 {color: #007800;}
.bash.source-bash .es3 {color: #007800;}
.bash.source-bash .es4 {color: #007800;}
.bash.source-bash .es5 {color: #780078;}
.bash.source-bash .es_h {color: #000099; font-weight: bold;}
.bash.source-bash .br0 {color: #7a0874; font-weight: bold;}
.bash.source-bash .sy0 {color: #000000; font-weight: bold;}
.bash.source-bash .st0 {color: #ff0000;}
.bash.source-bash .st_h {color: #ff0000;}
.bash.source-bash .nu0 {color: #000000;}
.bash.source-bash .re0 {color: #007800;}
.bash.source-bash .re1 {color: #007800;}
.bash.source-bash .re2 {color: #007800;}
.bash.source-bash .re4 {color: #007800;}
.bash.source-bash .re5 {color: #660033;}
.bash.source-bash .ln-xtra, .bash.source-bash li.ln-xtra, .bash.source-bash div.ln-xtra {background-color: #ffc;}
.bash.source-bash span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-freebasic {line-height: normal;}
.source-freebasic li, .source-freebasic pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for freebasic
 * CSS class: source-freebasic, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.freebasic.source-freebasic .de1, .freebasic.source-freebasic .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.freebasic.source-freebasic  {font-family:monospace;}
.freebasic.source-freebasic .imp {font-weight: bold; color: red;}
.freebasic.source-freebasic li, .freebasic.source-freebasic .li1 {font-weight: normal; vertical-align:top;}
.freebasic.source-freebasic .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.freebasic.source-freebasic .li2 {font-weight: bold; vertical-align:top;}
.freebasic.source-freebasic .kw1 {color: #b1b100;}
.freebasic.source-freebasic .co1 {color: #808080;}
.freebasic.source-freebasic .co2 {color: #339933;}
.freebasic.source-freebasic .es0 {color: #000099;}
.freebasic.source-freebasic .br0 {color: #66cc66;}
.freebasic.source-freebasic .sy0 {color: #66cc66;}
.freebasic.source-freebasic .st0 {color: #ff0000;}
.freebasic.source-freebasic .nu0 {color: #cc66cc;}
.freebasic.source-freebasic .me0 {color: #66cc66;}
.freebasic.source-freebasic .ln-xtra, .freebasic.source-freebasic li.ln-xtra, .freebasic.source-freebasic div.ln-xtra {background-color: #ffc;}
.freebasic.source-freebasic span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-cfm {line-height: normal;}
.source-cfm li, .source-cfm pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cfm
 * CSS class: source-cfm, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cfm.source-cfm .de1, .cfm.source-cfm .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cfm.source-cfm  {font-family:monospace;}
.cfm.source-cfm .imp {font-weight: bold; color: red;}
.cfm.source-cfm li, .cfm.source-cfm .li1 {font-weight: normal; vertical-align:top;}
.cfm.source-cfm .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cfm.source-cfm .li2 {font-weight: bold; vertical-align:top;}
.cfm.source-cfm .kw1 {color: #990000; font-weight: bold;}
.cfm.source-cfm .kw2 {color: #000000; font-weight: bold;}
.cfm.source-cfm .kw3 {color: #0000FF;}
.cfm.source-cfm .kw4 {color: #000000; font-weight: bold;}
.cfm.source-cfm .kw5 {color: #0000FF;}
.cfm.source-cfm .kw6 {color: #0000FF;}
.cfm.source-cfm .kw7 {color: #0000FF;}
.cfm.source-cfm .co1 {color: #808080; font-style: italic;}
.cfm.source-cfm .coMULTI {color: #808080; font-style: italic;}
.cfm.source-cfm .es0 {color: #000099; font-weight: bold;}
.cfm.source-cfm .br0 {color: #0000FF;}
.cfm.source-cfm .sy0 {color: #0000FF;}
.cfm.source-cfm .st0 {color: #009900;}
.cfm.source-cfm .nu0 {color: #FF0000;}
.cfm.source-cfm .sc0 {color: #808080; font-style: italic;}
.cfm.source-cfm .sc1 {color: #00bbdd;}
.cfm.source-cfm .sc2 {color: #0000FF;}
.cfm.source-cfm .sc3 {color: #000099;}
.cfm.source-cfm .sc4 {color: #333333;}
.cfm.source-cfm .sc5 {color: #333333;}
.cfm.source-cfm .ln-xtra, .cfm.source-cfm li.ln-xtra, .cfm.source-cfm div.ln-xtra {background-color: #ffc;}
.cfm.source-cfm span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-haskell {line-height: normal;}
.source-haskell li, .source-haskell pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for haskell
 * CSS class: source-haskell, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.haskell.source-haskell .de1, .haskell.source-haskell .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.haskell.source-haskell  {font-family:monospace;}
.haskell.source-haskell .imp {font-weight: bold; color: red;}
.haskell.source-haskell li, .haskell.source-haskell .li1 {font-weight: normal; vertical-align:top;}
.haskell.source-haskell .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.haskell.source-haskell .li2 {font-weight: bold; vertical-align:top;}
.haskell.source-haskell .kw1 {color: #06c; font-weight: bold;}
.haskell.source-haskell .kw2 {color: #06c; font-weight: bold;}
.haskell.source-haskell .kw3 {font-weight: bold;}
.haskell.source-haskell .kw4 {color: #cccc00; font-weight: bold;}
.haskell.source-haskell .kw5 {color: maroon;}
.haskell.source-haskell .co1 {color: #5d478b; font-style: italic;}
.haskell.source-haskell .co2 {color: #339933; font-weight: bold;}
.haskell.source-haskell .co3 {color: #5d478b; font-style: italic;}
.haskell.source-haskell .coMULTI {color: #5d478b; font-style: italic;}
.haskell.source-haskell .es0 {background-color: #3cb371; font-weight: bold;}
.haskell.source-haskell .br0 {color: green;}
.haskell.source-haskell .sy0 {color: #339933; font-weight: bold;}
.haskell.source-haskell .st0 {background-color: #3cb371;}
.haskell.source-haskell .nu0 {color: red;}
.haskell.source-haskell .me1 {color: #060;}
.haskell.source-haskell .ln-xtra, .haskell.source-haskell li.ln-xtra, .haskell.source-haskell div.ln-xtra {background-color: #ffc;}
.haskell.source-haskell span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-javascript {line-height: normal;}
.source-javascript li, .source-javascript pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for javascript
 * CSS class: source-javascript, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.javascript.source-javascript .de1, .javascript.source-javascript .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.javascript.source-javascript  {font-family:monospace;}
.javascript.source-javascript .imp {font-weight: bold; color: red;}
.javascript.source-javascript li, .javascript.source-javascript .li1 {font-weight: normal; vertical-align:top;}
.javascript.source-javascript .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.javascript.source-javascript .li2 {font-weight: bold; vertical-align:top;}
.javascript.source-javascript .kw1 {color: #000066; font-weight: bold;}
.javascript.source-javascript .kw2 {color: #003366; font-weight: bold;}
.javascript.source-javascript .kw3 {color: #000066;}
.javascript.source-javascript .kw5 {color: #FF0000;}
.javascript.source-javascript .co1 {color: #006600; font-style: italic;}
.javascript.source-javascript .co2 {color: #009966; font-style: italic;}
.javascript.source-javascript .coMULTI {color: #006600; font-style: italic;}
.javascript.source-javascript .es0 {color: #000099; font-weight: bold;}
.javascript.source-javascript .br0 {color: #009900;}
.javascript.source-javascript .sy0 {color: #339933;}
.javascript.source-javascript .st0 {color: #3366CC;}
.javascript.source-javascript .nu0 {color: #CC0000;}
.javascript.source-javascript .me1 {color: #660066;}
.javascript.source-javascript .ln-xtra, .javascript.source-javascript li.ln-xtra, .javascript.source-javascript div.ln-xtra {background-color: #ffc;}
.javascript.source-javascript span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-lua {line-height: normal;}
.source-lua li, .source-lua pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for lua
 * CSS class: source-lua, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.lua.source-lua .de1, .lua.source-lua .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.lua.source-lua  {font-family:monospace;}
.lua.source-lua .imp {font-weight: bold; color: red;}
.lua.source-lua li, .lua.source-lua .li1 {font-weight: normal; vertical-align:top;}
.lua.source-lua .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.lua.source-lua .li2 {font-weight: bold; vertical-align:top;}
.lua.source-lua .kw1 {color: #aa9900; font-weight: bold;}
.lua.source-lua .kw2 {color: #aa9900; font-weight: bold;}
.lua.source-lua .kw3 {color: #0000aa;}
.lua.source-lua .kw4 {color: #aa9900;}
.lua.source-lua .kw5 {color: #aa9900;}
.lua.source-lua .co1 {color: #808080; font-style: italic;}
.lua.source-lua .co2 {color: #ff0000;}
.lua.source-lua .coMULTI {color: #808080; font-style: italic;}
.lua.source-lua .es0 {color: #000099; font-weight: bold;}
.lua.source-lua .es1 {color: #000099; font-weight: bold;}
.lua.source-lua .es2 {color: #000099; font-weight: bold;}
.lua.source-lua .br0 {color: #66cc66;}
.lua.source-lua .sy0 {color: #66cc66;}
.lua.source-lua .st0 {color: #ff6666;}
.lua.source-lua .nu0 {color: #cc66cc;}
.lua.source-lua .me0 {color: #aa9900;}
.lua.source-lua .ln-xtra, .lua.source-lua li.ln-xtra, .lua.source-lua div.ln-xtra {background-color: #ffc;}
.lua.source-lua span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-ruby {line-height: normal;}
.source-ruby li, .source-ruby pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for ruby
 * CSS class: source-ruby, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.ruby.source-ruby .de1, .ruby.source-ruby .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.ruby.source-ruby  {font-family:monospace;}
.ruby.source-ruby .imp {font-weight: bold; color: red;}
.ruby.source-ruby li, .ruby.source-ruby .li1 {font-weight: normal; vertical-align:top;}
.ruby.source-ruby .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.ruby.source-ruby .li2 {font-weight: bold; vertical-align:top;}
.ruby.source-ruby .kw1 {color:#9966CC; font-weight:bold;}
.ruby.source-ruby .kw2 {color:#0000FF; font-weight:bold;}
.ruby.source-ruby .kw3 {color:#CC0066; font-weight:bold;}
.ruby.source-ruby .kw4 {color:#CC00FF; font-weight:bold;}
.ruby.source-ruby .co1 {color:#008000; font-style:italic;}
.ruby.source-ruby .co4 {color: #cc0000; font-style: italic;}
.ruby.source-ruby .coMULTI {color:#000080; font-style:italic;}
.ruby.source-ruby .es0 {color:#000099;}
.ruby.source-ruby .br0 {color:#006600; font-weight:bold;}
.ruby.source-ruby .sy0 {color:#006600; font-weight:bold;}
.ruby.source-ruby .st0 {color:#996600;}
.ruby.source-ruby .nu0 {color:#006666;}
.ruby.source-ruby .me1 {color:#9900CC;}
.ruby.source-ruby .re0 {color:#ff6633; font-weight:bold;}
.ruby.source-ruby .re1 {color:#0066ff; font-weight:bold;}
.ruby.source-ruby .re2 {color:#6666ff; font-weight:bold;}
.ruby.source-ruby .re3 {color:#ff3333; font-weight:bold;}
.ruby.source-ruby .ln-xtra, .ruby.source-ruby li.ln-xtra, .ruby.source-ruby div.ln-xtra {background-color: #ffc;}
.ruby.source-ruby span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-matlab {line-height: normal;}
.source-matlab li, .source-matlab pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for matlab
 * CSS class: source-matlab, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.matlab.source-matlab .de1, .matlab.source-matlab .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.matlab.source-matlab  {font-family:monospace;}
.matlab.source-matlab .imp {font-weight: bold; color: red;}
.matlab.source-matlab li, .matlab.source-matlab .li1 {font-weight: normal; vertical-align:top;}
.matlab.source-matlab .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.matlab.source-matlab .li2 {font-weight: bold; vertical-align:top;}
.matlab.source-matlab .kw1 {color: #0000FF;}
.matlab.source-matlab .kw2 {color: #0000FF;}
.matlab.source-matlab .co1 {color: #228B22;}
.matlab.source-matlab .co2 {color:#A020F0;}
.matlab.source-matlab .br0 {color: #080;}
.matlab.source-matlab .sy0 {color: #080;}
.matlab.source-matlab .nu0 {color: #33f;}
.matlab.source-matlab .re0 {color: #33f;}
.matlab.source-matlab .ln-xtra, .matlab.source-matlab li.ln-xtra, .matlab.source-matlab div.ln-xtra {background-color: #ffc;}
.matlab.source-matlab span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-oberon2 {line-height: normal;}
.source-oberon2 li, .source-oberon2 pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for oberon2
 * CSS class: source-oberon2, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.oberon2.source-oberon2 .de1, .oberon2.source-oberon2 .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.oberon2.source-oberon2  {font-family:monospace;}
.oberon2.source-oberon2 .imp {font-weight: bold; color: red;}
.oberon2.source-oberon2 li, .oberon2.source-oberon2 .li1 {font-weight: normal; vertical-align:top;}
.oberon2.source-oberon2 .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.oberon2.source-oberon2 .li2 {font-weight: bold; vertical-align:top;}
.oberon2.source-oberon2 .kw1 {color: #000000; font-weight: bold;}
.oberon2.source-oberon2 .kw2 {color: #000000; font-weight: bold;}
.oberon2.source-oberon2 .kw3 {color: #000066;}
.oberon2.source-oberon2 .kw4 {color: #000066; font-weight: bold;}
.oberon2.source-oberon2 .coMULTI {color: #666666; font-style: italic;}
.oberon2.source-oberon2 .es0 {color: #000099; font-weight: bold;}
.oberon2.source-oberon2 .es_h {color: #000099; font-weight: bold;}
.oberon2.source-oberon2 .br0 {color: #009900;}
.oberon2.source-oberon2 .sy0 {color: #339933;}
.oberon2.source-oberon2 .st0 {color: #ff0000;}
.oberon2.source-oberon2 .st_h {color: #ff0000;}
.oberon2.source-oberon2 .nu0 {color: #cc66cc;}
.oberon2.source-oberon2 .me1 {color: #0066ee;}
.oberon2.source-oberon2 .ln-xtra, .oberon2.source-oberon2 li.ln-xtra, .oberon2.source-oberon2 div.ln-xtra {background-color: #ffc;}
.oberon2.source-oberon2 span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-ocaml {line-height: normal;}
.source-ocaml li, .source-ocaml pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for ocaml
 * CSS class: source-ocaml, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.ocaml.source-ocaml .de1, .ocaml.source-ocaml .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.ocaml.source-ocaml  {font-family:monospace;}
.ocaml.source-ocaml .imp {font-weight: bold; color: red;}
.ocaml.source-ocaml li, .ocaml.source-ocaml .li1 {font-weight: normal; vertical-align:top;}
.ocaml.source-ocaml .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.ocaml.source-ocaml .li2 {font-weight: bold; vertical-align:top;}
.ocaml.source-ocaml .kw1 {color: #06c; font-weight: bold;}
.ocaml.source-ocaml .kw2 {color: #06c; font-weight: bold;}
.ocaml.source-ocaml .kw3 {color: #06c; font-weight: bold;}
.ocaml.source-ocaml .kw4 {color: #06c; font-weight: bold;}
.ocaml.source-ocaml .kw5 {color: #06c; font-weight: bold;}
.ocaml.source-ocaml .coMULTI {color: #5d478b; font-style: italic;}
.ocaml.source-ocaml .co1 {color: #5d478b; font-style: italic;}
.ocaml.source-ocaml .br0 {color: #a52a2a;}
.ocaml.source-ocaml .sy0 {color: #a52a2a;}
.ocaml.source-ocaml .st0 {color: #3cb371;}
.ocaml.source-ocaml .nu0 {color: #c6c;}
.ocaml.source-ocaml .me1 {color: #060;}
.ocaml.source-ocaml .re1 {font-weight:bold; color:#339933;}
.ocaml.source-ocaml .re2 {font-weight:bold; color:#993399;}
.ocaml.source-ocaml .ln-xtra, .ocaml.source-ocaml li.ln-xtra, .ocaml.source-ocaml div.ln-xtra {background-color: #ffc;}
.ocaml.source-ocaml span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-pascal {line-height: normal;}
.source-pascal li, .source-pascal pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for pascal
 * CSS class: source-pascal, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.pascal.source-pascal .de1, .pascal.source-pascal .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.pascal.source-pascal  {font-family:monospace;}
.pascal.source-pascal .imp {font-weight: bold; color: red;}
.pascal.source-pascal li, .pascal.source-pascal .li1 {font-weight: normal; vertical-align:top;}
.pascal.source-pascal .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.pascal.source-pascal .li2 {font-weight: bold; vertical-align:top;}
.pascal.source-pascal .kw1 {color: #000000; font-weight: bold;}
.pascal.source-pascal .kw2 {color: #000000; font-weight: bold;}
.pascal.source-pascal .kw3 {color: #000066;}
.pascal.source-pascal .kw4 {color: #000066; font-weight: bold;}
.pascal.source-pascal .co1 {color: #808080; font-style: italic;}
.pascal.source-pascal .co2 {color: #008000; font-style: italic;}
.pascal.source-pascal .coMULTI {color: #808080; font-style: italic;}
.pascal.source-pascal .es0 {color: #ff0000; font-weight: bold;}
.pascal.source-pascal .br0 {color: #009900;}
.pascal.source-pascal .sy0 {color: #000066;}
.pascal.source-pascal .sy1 {color: #000066;}
.pascal.source-pascal .sy2 {color: #000066;}
.pascal.source-pascal .sy3 {color: #000066;}
.pascal.source-pascal .st0 {color: #ff0000;}
.pascal.source-pascal .nu0 {color: #cc66cc;}
.pascal.source-pascal .me1 {color: #006600;}
.pascal.source-pascal .re0 {color: #0000cc;}
.pascal.source-pascal .re1 {color: #ff0000;}
.pascal.source-pascal .ln-xtra, .pascal.source-pascal li.ln-xtra, .pascal.source-pascal div.ln-xtra {background-color: #ffc;}
.pascal.source-pascal span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-perl {line-height: normal;}
.source-perl li, .source-perl pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for perl
 * CSS class: source-perl, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.perl.source-perl .de1, .perl.source-perl .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.perl.source-perl  {font-family:monospace;}
.perl.source-perl .imp {font-weight: bold; color: red;}
.perl.source-perl li, .perl.source-perl .li1 {font-weight: normal; vertical-align:top;}
.perl.source-perl .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.perl.source-perl .li2 {font-weight: bold; vertical-align:top;}
.perl.source-perl .kw1 {color: #b1b100;}
.perl.source-perl .kw2 {color: #000000; font-weight: bold;}
.perl.source-perl .kw3 {color: #000066;}
.perl.source-perl .co1 {color: #666666; font-style: italic;}
.perl.source-perl .co2 {color: #009966; font-style: italic;}
.perl.source-perl .co3 {color: #0000ff;}
.perl.source-perl .co4 {color: #cc0000; font-style: italic;}
.perl.source-perl .co5 {color: #0000ff;}
.perl.source-perl .coMULTI {color: #666666; font-style: italic;}
.perl.source-perl .es0 {color: #000099; font-weight: bold;}
.perl.source-perl .es_h {color: #000099; font-weight: bold;}
.perl.source-perl .br0 {color: #009900;}
.perl.source-perl .sy0 {color: #339933;}
.perl.source-perl .st0 {color: #ff0000;}
.perl.source-perl .st_h {color: #ff0000;}
.perl.source-perl .nu0 {color: #cc66cc;}
.perl.source-perl .me1 {color: #006600;}
.perl.source-perl .me2 {color: #006600;}
.perl.source-perl .re0 {color: #0000ff;}
.perl.source-perl .re4 {color: #009999;}
.perl.source-perl .ln-xtra, .perl.source-perl li.ln-xtra, .perl.source-perl div.ln-xtra {background-color: #ffc;}
.perl.source-perl span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-php {line-height: normal;}
.source-php li, .source-php pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for php
 * CSS class: source-php, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.php.source-php .de1, .php.source-php .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.php.source-php  {font-family:monospace;}
.php.source-php .imp {font-weight: bold; color: red;}
.php.source-php li, .php.source-php .li1 {font-weight: normal; vertical-align:top;}
.php.source-php .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.php.source-php .li2 {font-weight: bold; vertical-align:top;}
.php.source-php .kw1 {color: #b1b100;}
.php.source-php .kw2 {color: #000000; font-weight: bold;}
.php.source-php .kw3 {color: #990000;}
.php.source-php .kw4 {color: #009900; font-weight: bold;}
.php.source-php .co1 {color: #666666; font-style: italic;}
.php.source-php .co2 {color: #666666; font-style: italic;}
.php.source-php .co3 {color: #0000cc; font-style: italic;}
.php.source-php .co4 {color: #009933; font-style: italic;}
.php.source-php .coMULTI {color: #666666; font-style: italic;}
.php.source-php .es0 {color: #000099; font-weight: bold;}
.php.source-php .es1 {color: #000099; font-weight: bold;}
.php.source-php .es2 {color: #660099; font-weight: bold;}
.php.source-php .es3 {color: #660099; font-weight: bold;}
.php.source-php .es4 {color: #006699; font-weight: bold;}
.php.source-php .es5 {color: #006699; font-weight: bold; font-style: italic;}
.php.source-php .es6 {color: #009933; font-weight: bold;}
.php.source-php .es_h {color: #000099; font-weight: bold;}
.php.source-php .br0 {color: #009900;}
.php.source-php .sy0 {color: #339933;}
.php.source-php .sy1 {color: #000000; font-weight: bold;}
.php.source-php .st0 {color: #0000ff;}
.php.source-php .st_h {color: #0000ff;}
.php.source-php .nu0 {color: #cc66cc;}
.php.source-php .nu8 {color: #208080;}
.php.source-php .nu12 {color: #208080;}
.php.source-php .nu19 {color:#800080;}
.php.source-php .me1 {color: #004000;}
.php.source-php .me2 {color: #004000;}
.php.source-php .re0 {color: #000088;}
.php.source-php .ln-xtra, .php.source-php li.ln-xtra, .php.source-php div.ln-xtra {background-color: #ffc;}
.php.source-php span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-smalltalk {line-height: normal;}
.source-smalltalk li, .source-smalltalk pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for smalltalk
 * CSS class: source-smalltalk, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.smalltalk.source-smalltalk .de1, .smalltalk.source-smalltalk .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.smalltalk.source-smalltalk  {font-family:monospace;}
.smalltalk.source-smalltalk .imp {font-weight: bold; color: red;}
.smalltalk.source-smalltalk li, .smalltalk.source-smalltalk .li1 {font-weight: normal; vertical-align:top;}
.smalltalk.source-smalltalk .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.smalltalk.source-smalltalk .li2 {font-weight: bold; vertical-align:top;}
.smalltalk.source-smalltalk .kw1 {color: #7f007f;}
.smalltalk.source-smalltalk .coMULTI {color: #007f00; font-style: italic;}
.smalltalk.source-smalltalk .sy0 {color: #000066; font-weight:bold;}
.smalltalk.source-smalltalk .st0 {color: #7f0000;}
.smalltalk.source-smalltalk .nu0 {color: #7f0000;}
.smalltalk.source-smalltalk .re0 {color: #0000ff;}
.smalltalk.source-smalltalk .re1 {color: #7f0000;}
.smalltalk.source-smalltalk .re2 {color: #7f0000;}
.smalltalk.source-smalltalk .re3 {color: #00007f;}
.smalltalk.source-smalltalk .re5 {color: #00007f;}
.smalltalk.source-smalltalk .re6 {color: #00007f;}
.smalltalk.source-smalltalk .ln-xtra, .smalltalk.source-smalltalk li.ln-xtra, .smalltalk.source-smalltalk div.ln-xtra {background-color: #ffc;}
.smalltalk.source-smalltalk span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-cobol {line-height: normal;}
.source-cobol li, .source-cobol pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cobol
 * CSS class: source-cobol, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cobol.source-cobol .de1, .cobol.source-cobol .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cobol.source-cobol  {font-family:monospace;}
.cobol.source-cobol .imp {font-weight: bold; color: red;}
.cobol.source-cobol li, .cobol.source-cobol .li1 {font-weight: normal; vertical-align:top;}
.cobol.source-cobol .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cobol.source-cobol .li2 {font-weight: bold; vertical-align:top;}
.cobol.source-cobol .kw1 {color: #000080; font-weight: bold;}
.cobol.source-cobol .kw2 {color: #000000; font-weight: bold;}
.cobol.source-cobol .kw3 {color: #008000; font-weight: bold;}
.cobol.source-cobol .kw4 {color: #000080;}
.cobol.source-cobol .kw5 {color: #008000;}
.cobol.source-cobol .co1 {color: #a0a0a0; font-style: italic;}
.cobol.source-cobol .coMULTI {color: #a0a0a0; font-style: italic;}
.cobol.source-cobol .es0 {color: #000099; font-weight: bold;}
.cobol.source-cobol .br0 {color: #339933;}
.cobol.source-cobol .sy0 {color: #000066;}
.cobol.source-cobol .st0 {color: #ff0000;}
.cobol.source-cobol .nu0 {color: #993399;}
.cobol.source-cobol .me1 {color: #202020;}
.cobol.source-cobol .ln-xtra, .cobol.source-cobol li.ln-xtra, .cobol.source-cobol div.ln-xtra {background-color: #ffc;}
.cobol.source-cobol span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-algol68 {line-height: normal;}
.source-algol68 li, .source-algol68 pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for algol68
 * CSS class: source-algol68, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.algol68.source-algol68 .de1, .algol68.source-algol68 .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.algol68.source-algol68  {font-family:monospace;}
.algol68.source-algol68 .imp {font-weight: bold; color: red;}
.algol68.source-algol68 li, .algol68.source-algol68 .li1 {font-weight: normal; vertical-align:top;}
.algol68.source-algol68 .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.algol68.source-algol68 .li2 {font-weight: bold; vertical-align:top;}
.algol68.source-algol68 .kw1 {color: #FF0000; font-weight: bold;}
.algol68.source-algol68 .kw2 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw3 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw4 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw5 {color: #FF0000; font-weight: bold;}
.algol68.source-algol68 .kw6 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw7 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw8 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw10 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw11 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw12 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw14 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw15 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw16 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw17 {color: #b1b100; font-weight: bold;}
.algol68.source-algol68 .kw18 {color: #FF0000; font-weight: bold;}
.algol68.source-algol68 .kw19 {color: #FF0000; font-weight: bold;}
.algol68.source-algol68 .kw20 {color: #b1b100;}
.algol68.source-algol68 .kw21 {color: #b1b100;}
.algol68.source-algol68 .kw22 {color: #b1b100;}
.algol68.source-algol68 .kw23 {color: #b1b100;}
.algol68.source-algol68 .kw24 {color: #b1b100;}
.algol68.source-algol68 .kw25 {color: #b1b100;}
.algol68.source-algol68 .kw26 {color: #b1b100;}
.algol68.source-algol68 .kw27 {color: #b1b100;}
.algol68.source-algol68 .kw28 {color: #b1b100;}
.algol68.source-algol68 .kw29 {color: #b1b100;}
.algol68.source-algol68 .co1 {color: #666666; font-style: italic;}
.algol68.source-algol68 .co2 {color: #666666; font-style: italic;}
.algol68.source-algol68 .co3 {color: #666666; font-style: italic;}
.algol68.source-algol68 .coMULTI {color: #666666; font-style: italic;}
.algol68.source-algol68 .es0 {color: #000099; font-weight: bold;}
.algol68.source-algol68 .br0 {color: #009900;}
.algol68.source-algol68 .sy0 {color: #339933;}
.algol68.source-algol68 .sy1 {color: #339933;}
.algol68.source-algol68 .st0 {color: #0000ff;}
.algol68.source-algol68 .nu0 {color: #cc66cc;}
.algol68.source-algol68 .me0 {color: #004000;}
.algol68.source-algol68 .me1 {color: #004000;}
.algol68.source-algol68 .re0 {color: #cc66cc;}
.algol68.source-algol68 .re1 {color: #cc66cc;}
.algol68.source-algol68 .ln-xtra, .algol68.source-algol68 li.ln-xtra, .algol68.source-algol68 div.ln-xtra {background-color: #ffc;}
.algol68.source-algol68 span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-text {line-height: normal;}
.source-text li, .source-text pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for text
 * CSS class: source-text, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.text.source-text .de1, .text.source-text .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.text.source-text  {font-family:monospace;}
.text.source-text .imp {font-weight: bold; color: red;}
.text.source-text li, .text.source-text .li1 {font-weight: normal; vertical-align:top;}
.text.source-text .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.text.source-text .li2 {font-weight: bold; vertical-align:top;}
.text.source-text .ln-xtra, .text.source-text li.ln-xtra, .text.source-text div.ln-xtra {background-color: #ffc;}
.text.source-text span.xtra { display:block; }

/*]]>*/
</style><link rel="dns-prefetch" href="http://meta.wikimedia.org/" /><!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/static-1.23wmf19/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-For_loop skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<div id="siteNotice"><!-- CentralNotice --></div>
						<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">For loop</span></h1>
						<div id="bodyContent">
								<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-navigation">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="thumb tright">
<div class="thumbinner" style="width:222px;"><a href="http://en.wikipedia.org/wiki/File:For-Loop-Mint-Programming-Language-Type-2.gif" class="image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/1/13/For-Loop-Mint-Programming-Language-Type-2.gif/220px-For-Loop-Mint-Programming-Language-Type-2.gif" width="220" height="220" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/commons/1/13/For-Loop-Mint-Programming-Language-Type-2.gif 1.5x, //upload.wikimedia.org/wikipedia/commons/1/13/For-Loop-Mint-Programming-Language-Type-2.gif 2x" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="http://en.wikipedia.org/wiki/File:For-Loop-Mint-Programming-Language-Type-2.gif" class="internal" title="Enlarge"><img src="http://bits.wikimedia.org/static-1.23wmf18/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
This for-loop is written in the <a rel="nofollow" class="external text" href="http://thezerothblog.wordpress.com/2012/06/08/mint-a-new-programming-language/">Mint programming language</a>. For loops are often used to iterate over a list (or "sequence") of values.</div>
</div>
</div>
<p>In <a href="Computer_science.html" title="Computer science">computer science</a> a <b>for loop</b> is a <a href="Programming_language.html" title="Programming language">programming language</a> <a href="Statement_(programming).html" title="Statement (programming)" class="mw-redirect">statement</a> which allows code to be repeatedly <a href="http://en.wikipedia.org/wiki/Execution_(computers)" title="Execution (computers)" class="mw-redirect">executed</a>. A <i>for loop</i> is classified as an <a href="Iteration.html" title="Iteration">iteration</a> statement. The keyword used to declare a for loop is based on the heritage of the language and the prior programming languages it borrowed from, so programming languages that are descendants of or offshoots of a language that originally developed an iterator will often use the same keyword to name an iterator, e.g. descendants of <a href="ALGOL.html" title="ALGOL">ALGOL</a> will use "for", while descendants of <a href="Fortran-2.html" title="Fortran">Fortran</a> will use "do." Some languages started from scratch, and didn't have a predefined term for an iterator to choose from, which is why <a href="COBOL.html" title="COBOL">COBOL</a> uses "PERFORM VARYING".</p>
<p>Unlike many other kinds of <a href="http://en.wikipedia.org/wiki/Control_flow#Loops" title="Control flow">loops</a>, such as the <a href="While_loop.html" title="While loop">while loop</a>, the for loop is often distinguished by an explicit <a href="http://en.wikipedia.org/wiki/Loop_counter" title="Loop counter">loop counter</a> or loop variable. This allows the body of the for loop (the code that is being repeatedly executed) to know about the sequencing of each iteration. For loops are also typically used when the amount of iterations is known before entering the loop. For loops are the shorthand way to make loops when the number of iterations is known, as a for loop can be written as a while loop.</p>
<p>The name <i>for loop</i> comes from the English word <a href="http://en.wiktionary.org/wiki/for" class="extiw" title="wiktionary:for">for</a>, which is used as the <a href="http://en.wikipedia.org/wiki/Keyword_(computing)" title="Keyword (computing)" class="mw-redirect">keyword</a> in most programming languages to introduce a for loop. The loop body is executed "for" the given values of the loop variable, though this is more explicit in the <a href="ALGOL.html" title="ALGOL">ALGOL</a> version of the statement, in which a list of possible values and/or increments can be specified.</p>
<p>In <a href="FORTRAN.html" title="FORTRAN" class="mw-redirect">FORTRAN</a> and <a href="PL/I.html" title="PL/I">PL/I</a> though, the keyword <i>DO</i> is used and it is called a <b>do loop</b>, but it is otherwise identical to the for loop described here and is not to be confused with the <a href="Do_while_loop.html" title="Do while loop">do while loop</a>.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Kinds_of_for_loops"><span class="tocnumber">1</span> <span class="toctext">Kinds of for loops</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Traditional_for_loops"><span class="tocnumber">1.1</span> <span class="toctext">Traditional for loops</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="#Iterator-based_for_loops"><span class="tocnumber">1.2</span> <span class="toctext">Iterator-based for loops</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="#Vectorised_for_loops"><span class="tocnumber">1.3</span> <span class="toctext">Vectorised for loops</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Compound_for_loops"><span class="tocnumber">1.4</span> <span class="toctext">Compound for loops</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-6"><a href="#Additional_semantics_and_constructs"><span class="tocnumber">2</span> <span class="toctext">Additional semantics and constructs</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="#Use_as_infinite_loops"><span class="tocnumber">2.1</span> <span class="toctext">Use as infinite loops</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Early_exit_and_continuation"><span class="tocnumber">2.2</span> <span class="toctext">Early exit and continuation</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="#Loop_variable_scope_and_semantics"><span class="tocnumber">2.3</span> <span class="toctext">Loop variable scope and semantics</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="#List_of_value_ranges"><span class="tocnumber">2.4</span> <span class="toctext">List of value ranges</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-11"><a href="#Equivalence_with_while_loops"><span class="tocnumber">3</span> <span class="toctext">Equivalence with while loops</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#Syntax"><span class="tocnumber">4</span> <span class="toctext">Syntax</span></a>
<ul>
<li class="toclevel-2 tocsection-13"><a href="#ActionScript_3"><span class="tocnumber">4.1</span> <span class="toctext">ActionScript 3</span></a></li>
<li class="toclevel-2 tocsection-14"><a href="#Ada"><span class="tocnumber">4.2</span> <span class="toctext">Ada</span></a></li>
<li class="toclevel-2 tocsection-15"><a href="#AppleScript"><span class="tocnumber">4.3</span> <span class="toctext">AppleScript</span></a></li>
<li class="toclevel-2 tocsection-16"><a href="#Bash"><span class="tocnumber">4.4</span> <span class="toctext">Bash</span></a></li>
<li class="toclevel-2 tocsection-17"><a href="#BASIC"><span class="tocnumber">4.5</span> <span class="toctext">BASIC</span></a></li>
<li class="toclevel-2 tocsection-18"><a href="#C.2FC.2B.2B"><span class="tocnumber">4.6</span> <span class="toctext">C/C++</span></a></li>
<li class="toclevel-2 tocsection-19"><a href="#CFML"><span class="tocnumber">4.7</span> <span class="toctext">CFML</span></a>
<ul>
<li class="toclevel-3 tocsection-20"><a href="#Script_syntax"><span class="tocnumber">4.7.1</span> <span class="toctext">Script syntax</span></a></li>
<li class="toclevel-3 tocsection-21"><a href="#Tag_syntax"><span class="tocnumber">4.7.2</span> <span class="toctext">Tag syntax</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-22"><a href="#FORTRAN"><span class="tocnumber">4.8</span> <span class="toctext">FORTRAN</span></a></li>
<li class="toclevel-2 tocsection-23"><a href="#Haskell"><span class="tocnumber">4.9</span> <span class="toctext">Haskell</span></a></li>
<li class="toclevel-2 tocsection-24"><a href="#Java"><span class="tocnumber">4.10</span> <span class="toctext">Java</span></a></li>
<li class="toclevel-2 tocsection-25"><a href="#JavaScript"><span class="tocnumber">4.11</span> <span class="toctext">JavaScript</span></a></li>
<li class="toclevel-2 tocsection-26"><a href="#Lua"><span class="tocnumber">4.12</span> <span class="toctext">Lua</span></a></li>
<li class="toclevel-2 tocsection-27"><a href="#Mathematica"><span class="tocnumber">4.13</span> <span class="toctext">Mathematica</span></a></li>
<li class="toclevel-2 tocsection-28"><a href="#MATLAB"><span class="tocnumber">4.14</span> <span class="toctext">MATLAB</span></a></li>
<li class="toclevel-2 tocsection-29"><a href="#Maxima_CAS"><span class="tocnumber">4.15</span> <span class="toctext">Maxima CAS</span></a></li>
<li class="toclevel-2 tocsection-30"><a href="#Oberon-2.2C_Oberon-07.2C_or_Component_Pascal"><span class="tocnumber">4.16</span> <span class="toctext">Oberon-2, Oberon-07, or Component Pascal</span></a></li>
<li class="toclevel-2 tocsection-31"><a href="#OCaml"><span class="tocnumber">4.17</span> <span class="toctext">OCaml</span></a></li>
<li class="toclevel-2 tocsection-32"><a href="#Pascal"><span class="tocnumber">4.18</span> <span class="toctext">Pascal</span></a></li>
<li class="toclevel-2 tocsection-33"><a href="#Perl"><span class="tocnumber">4.19</span> <span class="toctext">Perl</span></a></li>
<li class="toclevel-2 tocsection-34"><a href="#PHP"><span class="tocnumber">4.20</span> <span class="toctext">PHP</span></a></li>
<li class="toclevel-2 tocsection-35"><a href="#PL.2FI"><span class="tocnumber">4.21</span> <span class="toctext">PL/I</span></a></li>
<li class="toclevel-2 tocsection-36"><a href="#PostScript"><span class="tocnumber">4.22</span> <span class="toctext">PostScript</span></a></li>
<li class="toclevel-2 tocsection-37"><a href="#Python"><span class="tocnumber">4.23</span> <span class="toctext">Python</span></a></li>
<li class="toclevel-2 tocsection-38"><a href="#Ruby"><span class="tocnumber">4.24</span> <span class="toctext">Ruby</span></a></li>
<li class="toclevel-2 tocsection-39"><a href="#Smalltalk"><span class="tocnumber">4.25</span> <span class="toctext">Smalltalk</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-40"><a href="#Timeline_of_the_for_loop_in_various_programming_languages"><span class="tocnumber">5</span> <span class="toctext">Timeline of the <i>for loop</i> in various programming languages</span></a>
<ul>
<li class="toclevel-2 tocsection-41"><a href="#1957:_FORTRAN"><span class="tocnumber">5.1</span> <span class="toctext">1957: FORTRAN</span></a></li>
<li class="toclevel-2 tocsection-42"><a href="#1958:_Algol"><span class="tocnumber">5.2</span> <span class="toctext">1958: Algol</span></a></li>
<li class="toclevel-2 tocsection-43"><a href="#1960:_COBOL"><span class="tocnumber">5.3</span> <span class="toctext">1960: COBOL</span></a></li>
<li class="toclevel-2 tocsection-44"><a href="#1968:_Algol_68"><span class="tocnumber">5.4</span> <span class="toctext">1968: Algol 68</span></a></li>
<li class="toclevel-2 tocsection-45"><a href="#1983:_Ada_83_and_above"><span class="tocnumber">5.5</span> <span class="toctext">1983: Ada 83 and above</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-46"><a href="#Implementation_in_Interpreted_Programming_Languages"><span class="tocnumber">6</span> <span class="toctext">Implementation in Interpreted Programming Languages</span></a></li>
<li class="toclevel-1 tocsection-47"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-48"><a href="#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-49"><a href="#External_links"><span class="tocnumber">9</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Kinds_of_for_loops">Kinds of for loops</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=1" title="Edit section: Kinds of for loops">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>A for loop statement is available in most <a href="Imperative_programming.html" title="Imperative programming">imperative programming</a> languages. Even ignoring minor differences in <a href="http://en.wikipedia.org/wiki/Syntax" title="Syntax">syntax</a> there are many differences in how these statements work and the level of expressiveness they support. Generally, for loops fall into one of the following categories:</p>
<h3><span class="mw-headline" id="Traditional_for_loops">Traditional for loops</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=2" title="Edit section: Traditional for loops">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The traditional for loop found in <a href="C_(programming_language).html" title="C (programming language)">C</a>/<a href="C%2b%2b.html" title="C++">C++</a> requires 3 parts: the <a href="Declaration_(computer_programming).html" title="Declaration (computer programming)">initialization</a>, the <a href="Boolean_algebra.html" title="Boolean algebra">condition</a>, and the <a href="http://en.wikipedia.org/wiki/Code_cleanup" title="Code cleanup">afterthought</a><sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="http://en.wikipedia.org/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (November 2013)">citation needed</span></a></i>]</sup>.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1"><span>[</span>1<span>]</span></a></sup></p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="java source-java">
<pre class="de1">
<span class="kw1">for</span><span class="br0">(</span>INITIALIZATION<span class="sy0">;</span> CONDITION<span class="sy0">;</span> INCREMENT<span class="sy0">/</span>DECREMENT<span class="br0">)</span><span class="br0">{</span>
    <span class="co1">// Code for the for loop's body</span>
    <span class="co1">// goes here.</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>The initialization declares (and perhaps assigns to) any variables required. The condition checks a condition, and quits the loop if false. The afterthought is performed exactly once every time the loop ends and then repeats.</p>
<p>Here is an example of the traditional for loop in <a href="http://en.wikipedia.org/wiki/Java_7" title="Java 7" class="mw-redirect">Java 7</a>.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="java source-java">
<pre class="de1">
<span class="kw1">for</span><span class="br0">(</span><span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> <span class="nu0">100</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span><span class="br0">{</span>
    <span class="co1">//Prints the numbers 0 to 99, each separated by a space.</span>
    <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">print</span><span class="br0">(</span>i<span class="br0">)</span><span class="sy0">;</span>
    <span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">print</span><span class="br0">(</span><span class="st0">' '</span><span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
<span class="kw3">System</span>.<span class="me1">out</span>.<span class="me1">println</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Iterator-based_for_loops">Iterator-based for loops</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=3" title="Edit section: Iterator-based for loops">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="rellink relarticle mainarticle">Main article: <a href="http://en.wikipedia.org/wiki/Foreach_loop" title="Foreach loop">Foreach loop</a></div>
<p>This type of for loop is a falsification of the numeric range type of for loop; as it allows for the enumeration of sets of items other than number sequences. It is usually characterized by the use of an implicit or explicit <a href="http://en.wikipedia.org/wiki/Iterator" title="Iterator">iterator</a>, in which the loop variable takes on each of the values in a sequence or other order able data collection. A representative example in <a href="Python_(programming_language).html" title="Python (programming language)">Python</a> is:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">for</span> item <span class="kw1">in</span> some_iterable_object:
    do Something
    do Something Else
</pre></div>
</div>
<p>Where <code>some_iterable_object</code> is either a data collection that supports implicit iteration (like a list of employee's names), or may in fact be an iterator itself. Some languages have this in addition to another for-loop syntax; notably, PHP has this type of loop under the name <code>for each</code>, as well as a three-expression for loop (see below) under the name <code>for</code>.</p>
<h3><span class="mw-headline" id="Vectorised_for_loops">Vectorised for loops</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=4" title="Edit section: Vectorised for loops">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Some languages offer a <i>for</i> loop that acts as if processing all iterations in <a href="http://en.wikipedia.org/wiki/Vectorization_(parallel_computing)" title="Vectorization (parallel computing)">parallel</a>, such as the <code>for all</code> keyword in <a href="http://en.wikipedia.org/w/index.php?title=FORTRAN_95&amp;action=edit&amp;redlink=1" class="new" title="FORTRAN 95 (page does not exist)">FORTRAN 95</a> which has the interpretation that <i>all</i> <a href="http://en.wikipedia.org/wiki/Sides_of_an_equation" title="Sides of an equation">right-hand-side</a> expressions are evaluated before <i>any</i> assignments are made, as distinct from the explicit iteration form. For example, in the <code>for</code> loop in the following pseudocode fragment, when calculating the new value for <code>A(i)</code>, except for the first (with <code>i = 2</code>) the reference to <code>A(i - 1)</code> will obtain the new value that had been placed there in the previous step. In the <code>for all</code> version, however, each calculation refers only to the original, unaltered <code>A</code>.</p>
<pre>
<b>for</b>     i:=2:N - 1 <b>do</b> A(i):=[A(i - 1) + A(i) + A(i + 1)]/3; <b>next</b> i;
<b>for all</b> i:=2:N - 1 <b>do</b> A(i):=[A(i - 1) + A(i) + A(i + 1)]/3;
</pre>
<p>The difference may be significant.</p>
<p>Some languages (such as FORTRAN 95, PL/I) also offer array assignment statements, that enable many for-loops to be omitted. Thus pseudocode such as <code>A:=0;</code> would set all elements of array A to zero, no matter its size or dimensionality. The example loop could be rendered as</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="fortran source-fortran">
<pre class="de1">
 A<span class="br0">(</span><span class="nu0">2</span><span class="sy0">:</span>N <span class="sy0">-</span> <span class="nu0">1</span><span class="br0">)</span><span class="sy0">:=</span><span class="br0">[</span>A<span class="br0">(</span><span class="nu0">1</span><span class="sy0">:</span>N <span class="sy0">-</span> <span class="nu0">2</span><span class="br0">)</span> <span class="sy0">+</span> A<span class="br0">(</span><span class="nu0">2</span><span class="sy0">:</span>N <span class="sy0">-</span> <span class="nu0">1</span><span class="br0">)</span> <span class="sy0">+</span> A<span class="br0">(</span><span class="nu0">3</span><span class="sy0">:</span>N<span class="br0">)</span><span class="br0">]</span><span class="sy0">/</span><span class="nu0">3</span>;
</pre></div>
</div>
<p>But whether that would be rendered in the style of the for-loop or the for all-loop or something else may not be clearly described in the compiler manual.</p>
<h3><span class="mw-headline" id="Compound_for_loops">Compound for loops</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=5" title="Edit section: Compound for loops">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Introduced with <a href="ALGOL_68.html" title="ALGOL 68">ALGOL 68</a> and followed by <a href="PL/I.html" title="PL/I">PL/I</a>, this allows the iteration of a loop to be compounded with a test, as in</p>
<pre>
for i:=1:N while A(i) &gt; 0 do <i>etc.</i>
</pre>
<p>That is, a value is assigned to the loop variable <i>i</i> and only if the <i>while expression</i> is <b>true</b> will the loop body be executed. If the result were <b>false</b> the for-loop's execution stops short. Granted that the loop variable's value <i>is</i> defined after the termination of the loop, then the above statement will find the first non-positive element in array <i>A</i> (and if no such, its value will be <i>N + 1</i>), or, with suitable variations, the first non-blank character in a string, and so on.</p>
<h2><span class="mw-headline" id="Additional_semantics_and_constructs">Additional semantics and constructs</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=6" title="Edit section: Additional semantics and constructs">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="Use_as_infinite_loops">Use as infinite loops</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=7" title="Edit section: Use as infinite loops">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>This C-style for loop is commonly the source of an <a href="http://en.wikipedia.org/wiki/Infinite_loop" title="Infinite loop">infinite loop</a> since the fundamental steps of iteration are completely in the control of the programmer. In fact, when infinite loops are intended, this type of for loop can be used (with empty expressions), such as:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw1">for</span> <span class="br0">(</span><span class="sy0">;;</span><span class="br0">)</span>
   <span class="co1">//loop body</span>
</pre></div>
</div>
<p>This style is used instead of infinite <tt>while(1)</tt> loops to avoid a warning in <a href="Visual_C%2b%2b.html" title="Visual C++">Visual C++</a>.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2"><span>[</span>2<span>]</span></a></sup></p>
<h3><span class="mw-headline" id="Early_exit_and_continuation">Early exit and continuation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=8" title="Edit section: Early exit and continuation">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Some languages may also provide other supporting statements, which when present can alter how the for loop iteration proceeds. Common among these are the <a href="http://en.wikipedia.org/wiki/Break_statement" title="Break statement" class="mw-redirect">break</a> and <a href="http://en.wikipedia.org/wiki/Control_flow#Continuation_with_next_iteration" title="Control flow">continue</a> statements found in C and its derivatives. The break statement causes the inner-most loop to be terminated immediately when executed. The continue statement will move at once to the next iteration without further progress through the loop body for the current iteration. Other languages may have similar statements or otherwise provide means to alter the for loop progress; for example in FORTRAN 95:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="fortran source-fortran">
<pre class="de1">
<span class="kw1">DO</span> I <span class="sy0">=</span> <span class="nu0">1</span>, N
  statements               <span class="co1">!Executed for all values of "I", up to a disaster if any.</span>
  <span class="kw1">IF</span> <span class="br0">(</span>no good<span class="br0">)</span> <span class="kw1">CYCLE</span>       <span class="co1">!Skip this value of "I", continue with the next.</span>
  statements               <span class="co1">!Executed only where goodness prevails.</span>
  <span class="kw1">IF</span> <span class="br0">(</span>disaster<span class="br0">)</span> <span class="kw1">EXIT</span>       <span class="co1">!Abandon the loop.</span>
  statements               <span class="co1">!While good and, no disaster.</span>
<span class="kw1">END</span> <span class="kw1">DO</span>                     <span class="co1">!Should align with the "DO".</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Loop_variable_scope_and_semantics">Loop variable scope and semantics</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=9" title="Edit section: Loop variable scope and semantics">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Different languages specify different rules for what value the loop variable will hold on termination of its loop, and indeed some hold that it "becomes undefined". This permits a <a href="Compiler.html" title="Compiler">compiler</a> to generate code that leaves any value in the loop variable, or perhaps even leaves it unchanged because the loop value was held in a register and never stored to memory. Actual behaviour may even vary according to the compiler's optimisation settings, as with the Honywell Fortran66 compiler.</p>
<p>In some languages (not <a href="http://en.wikipedia.org/wiki/C_(language)" title="C (language)" class="mw-redirect">C</a> or <a href="C%2b%2b.html" title="C++">C++</a>) the loop variable is <a href="http://en.wikipedia.org/wiki/Immutable_object" title="Immutable object">immutable</a> within the scope of the loop body, with any attempt to modify its value being regarded as a semantic error. Such modifications are sometimes a consequence of a programmer error, which can be very difficult to identify once made. However only overt changes are likely to be detected by the compiler. Situations where the address of the loop variable is passed as an argument to a <a href="Subroutine.html" title="Subroutine">subroutine</a> make it very difficult to check, because the routine's behavior is in general unknowable to the compiler. Some examples in the style of Fortran:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="fortran source-fortran">
<pre class="de1">
<span class="kw1">DO</span> I <span class="sy0">=</span> <span class="nu0">1</span>, N
  I <span class="sy0">=</span> <span class="nu0">7</span>                           <span class="co1">!Overt adjustment of the loop variable. Compiler complaint likely.</span>
  Z <span class="sy0">=</span> ADJUST<span class="br0">(</span>I<span class="br0">)</span>                   <span class="co1">!Function "ADJUST" might alter "I", to uncertain effect.</span>
  normal statements               <span class="co1">!Memory might fade that "I" is the loop variable.</span>
  PRINT <span class="br0">(</span>A<span class="br0">(</span>I<span class="br0">)</span>, B<span class="br0">(</span>I<span class="br0">)</span>, I <span class="sy0">=</span> <span class="nu0">1</span>, N, <span class="nu0">2</span><span class="br0">)</span> <span class="co1">!Implicit for-loop to print odd elements of arrays A and B, reusing "I"…</span>
  PRINT I                         <span class="co1">!What value will be presented?</span>
<span class="kw1">END</span> <span class="kw1">DO</span>                            <span class="co1">!How many times will the loop be executed?</span>
</pre></div>
</div>
<p>A common approach is to calculate the iteration count at the start of a loop (with careful attention to overflow as in <code>for i:=0:65535 do ...&#160;;</code> in sixteen-bit integer arithmetic) and with each iteration decrement this count while also adjusting the value of <code>I</code>: double counting results. However, adjustments to the value of <code>I</code> within the loop will not change the number of iterations executed.</p>
<p>Still another possibility is that the code generated may employ an auxiliary variable as the loop variable, possibly held in a machine register, whose value may or may not be copied to <code>I</code> on each iteration. Again, modifications of <code>I</code> would not affect the control of the loop, but now a disjunction is possible: within the loop, references to the value of <code>I</code> might be to the (possibly altered) current value of <code>I</code> or to the auxiliary variable (held safe from improper modification) and confusing results are guaranteed. For instance, within the loop a reference to element <code>I</code> of an array would likely employ the auxiliary variable (especially if it were held in a machine register), but if <code>I</code> is a parameter to some routine (for instance, a <i>print</i>-statement to reveal its value), it would likely be a reference to the proper variable <code>I</code> instead. It is best to avoid such possibilities.</p>
<h3><span class="mw-headline" id="List_of_value_ranges">List of value ranges</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=10" title="Edit section: List of value ranges">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>PL/I and Algol 68, allows loops in which the loop variable is iterated over a list of ranges of values instead of a single range. The following PL/I example will execute the loop with six values of i: 1, 7, 12, 13, 14, 15:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="pli source-pli">
<pre class="de1">
<span class="kw1">do</span> i <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">,</span> <span class="nu0">7</span><span class="sy0">,</span> <span class="nu0">12</span> <span class="kw1">to</span> <span class="nu0">15</span><span class="sy0">;</span>
  <span class="coMULTI">/*statements*/</span>
  <span class="kw1">end</span><span class="sy0">;</span>
</pre></div>
</div>
<h2><span class="mw-headline" id="Equivalence_with_while_loops">Equivalence with while loops</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=11" title="Edit section: Equivalence with while loops">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>A for loop can be converted into an equivalent while loop by incrementing a counter variable directly. The following <a href="Pseudocode.html" title="Pseudocode">pseudocode</a> illustrates this technique:</p>
<pre>
factorial = 1
 for counter from 1 to 5
     factorial = factorial * counter
</pre>
<p>is easily translated into the following while loop:</p>
<pre>
factorial = 1
 counter = 1
 while counter &lt;= 5
    factorial = factorial * counter
    counter = counter + 1
</pre>
<p>This translation is slightly complicated by languages which allow a statement to jump to the next iteration of the loop (such as the "continue" statement in C). These statements will typically implicitly increment the counter of a for loop, but not the equivalent while loop (since in the latter case the counter is not an integral part of the loop construct). Any translation will have to place all such statements within a block that increments the explicit counter before running the statement.</p>
<h2><span class="mw-headline" id="Syntax">Syntax</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=12" title="Edit section: Syntax">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Given an action that must be repeated, for instance, five times, different languages' for loops will be written differently. The syntax for a three-expression for loop is nearly identical in all languages that have it, after accounting for different styles of block termination and so on.</p>
<h3><span class="mw-headline" id="ActionScript_3">ActionScript 3</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=13" title="Edit section: ActionScript 3">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="actionscript3 source-actionscript3">
<pre class="de1">
<span class="kw1">for</span> <span class="br0">(</span><span class="kw2">var</span> counter<span class="sy0">:</span><span class="kw5">uint</span> = <span class="nu0">1</span><span class="sy0">;</span> counter <span class="sy0">&lt;</span>= <span class="nu0">5</span><span class="sy0">;</span> counter<span class="sy0">++</span><span class="br0">)</span><span class="br0">{</span>
  <span class="co1">//statement;</span>
<span class="br0">}</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Ada">Ada</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=14" title="Edit section: Ada">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="ada source-ada">
<pre class="de1">
<span class="kw1">for</span> Counter <span class="kw3">in</span> <span class="nu0">1</span> .. <span class="nu0">5</span> <span class="kw1">loop</span>
   <span class="co1">-- statements</span>
<span class="kw1">end</span> <span class="kw1">loop</span>;
</pre></div>
</div>
<p>The <i>exit</i> statement may be used to exit the loop. Loops can be labeled, and <i>exit</i> may leave a specific labeled loop in a group of nested loops:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="ada source-ada">
<pre class="de1">
Counting:
    <span class="kw1">for</span> Counter <span class="kw3">in</span> <span class="nu0">1</span> .. <span class="nu0">5</span> <span class="kw1">loop</span>
   Triangle:
       <span class="kw1">for</span> Secondary_Index <span class="kw3">in</span> <span class="nu0">2</span> .. <span class="me1">Counter</span> <span class="kw1">loop</span>
          <span class="co1">-- statements</span>
          <span class="kw3">exit</span> Counting;
          <span class="co1">-- statements</span>
       <span class="kw1">end</span> <span class="kw1">loop</span> Triangle;
    <span class="kw1">end</span> <span class="kw1">loop</span> Counting;
</pre></div>
</div>
<h3><span class="mw-headline" id="AppleScript">AppleScript</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=15" title="Edit section: AppleScript">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="applescript source-applescript">
<pre class="de1">
<span class="kw3">repeat</span> <span class="kw3">with</span> i <span class="kw3">from</span> <span class="nu0">1</span> <span class="kw3">to</span> <span class="nu0">5</span>
	<span class="co1">-- statements</span>
	log i
<span class="kw3">end</span> <span class="kw3">repeat</span>
</pre></div>
</div>
<p>You can also iterate through a list of items, similar to what you can do with arrays in other languages:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="applescript source-applescript">
<pre class="de1">
<span class="kw3">set</span> x <span class="kw3">to</span> <span class="br0">{</span><span class="nu0">1</span>, <span class="st0">"waffles"</span>, <span class="st0">"bacon"</span>, <span class="nu0">5.1</span>, <span class="kw1">false</span><span class="br0">}</span>
<span class="kw3">repeat</span> <span class="kw3">with</span> i <span class="kw3">in</span> x
	log i
<span class="kw3">end</span> <span class="kw3">repeat</span>
</pre></div>
</div>
<p>You may also use "exit repeat" to exit a loop at any time. Unlike other languages, AppleScript does not currently have any command to continue to the next iteration of the loop.</p>
<h3><span class="mw-headline" id="Bash">Bash</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=16" title="Edit section: Bash">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="bash source-bash">
<pre class="de1">
<span class="co0"># first form</span>
<span class="kw1">for</span> i <span class="kw1">in</span> <span class="nu0">1</span> <span class="nu0">2</span> <span class="nu0">3</span> <span class="nu0">4</span> <span class="nu0">5</span>
<span class="kw1">do</span>
    <span class="co0"># must have at least one command in loop</span>
    <span class="kw3">echo</span> <span class="re1">$i</span>  <span class="co0"># just print value of i</span>
<span class="kw1">done</span>
</pre></div>
</div>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="bash source-bash">
<pre class="de1">
<span class="co0"># second form</span>
<span class="kw1">for</span> <span class="br0">(</span><span class="br0">(</span> i = <span class="nu0">1</span>; i <span class="sy0">&lt;</span>= <span class="nu0">5</span>; i++ <span class="br0">)</span><span class="br0">)</span>
<span class="kw1">do</span>
    <span class="co0"># must have at least one command in loop</span>
    <span class="kw3">echo</span> <span class="re1">$i</span>  <span class="co0"># just print value of i</span>
<span class="kw1">done</span>
</pre></div>
</div>
<p>Note that an empty loop (i.e., one with no commands between <code>do</code> and <code>done</code>) is a syntax error. If the above loops contained only comments, execution would result in the message "<code>syntax error near unexpected token 'done'</code>".</p>
<h3><span class="mw-headline" id="BASIC">BASIC</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=17" title="Edit section: BASIC">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="freebasic source-freebasic">
<pre class="de1">
<span class="kw1">For</span> I = <span class="nu0">1</span> <span class="kw1">to</span> <span class="nu0">5</span>;
 <span class="kw1">Print</span> I;
<span class="kw1">Next</span> I
</pre></div>
</div>
<p>Notice that the end-loop marker specifies the name of the index variable, which must correspond to the name of the index variable in the start of the for loop. Some languages (PL/I, FORTRAN 95 and later) allow a statement label on the start of a for loop that can be matched by the compiler against the same text on the corresponding end loop statement. Fortran also allows the EXIT and CYCLE statements to name this text; in a nest of loops this makes clear which loop is intended. However, in these languages the labels must be unique, so successive loops involving the same index variable cannot use the same text nor can a label be the same as the name of a variable, such as the index variable for the loop.</p>
<h3><span class="mw-headline" id="C.2FC.2B.2B">C/C++</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=18" title="Edit section: C/C++">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="rellink">Further information: <a href="C_syntax.html#Iteration_statements" title="C syntax">C syntax#Iteration statements</a></div>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="kw1">for</span><span class="br0">(</span>INITIALIZATION<span class="sy0">;</span> CONDITION<span class="sy0">;</span> INCREMENT<span class="sy0">/</span>DECREMENT<span class="br0">)</span>
    Statement
</pre></div>
</div>
<p>The <i>Statement</i> part is often a block-statement.</p>
<p>An example would be:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
<span class="co1">//Using for loops to add numbers 1 - 5</span>
<span class="kw4">int</span> sum <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
<span class="kw1">for</span><span class="br0">(</span><span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span> i<span class="sy0">&lt;</span><span class="nu0">6</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span><span class="br0">{</span>
    sum <span class="sy0">+=</span> i<span class="sy0">;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>The ISO/IEC 9899:1999 publication (commonly known as <a href="C99.html" title="C99">C99</a>) also allows initial declarations in <code>for</code> loops.</p>
<h3><span class="mw-headline" id="CFML"><a href="http://en.wikipedia.org/wiki/CFML" title="CFML" class="mw-redirect">CFML</a></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=19" title="Edit section: CFML">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<h4><span class="mw-headline" id="Script_syntax">Script syntax</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=20" title="Edit section: Script syntax">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>Simple index loop:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cfm source-cfm">
<pre class="de1">
for (i=1; i <span class="sc4"><span class="sy0">&lt;=</span> <span class="nu0">5</span>; i++<span class="br0">)</span> <span class="br0">{</span></span>
<span class="sc4">	<span class="co1">// statements</span></span>
<span class="sc4"><span class="br0">}</span></span>
</pre></div>
</div>
<p>Using an array:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cfm source-cfm">
<pre class="de1">
for (i in [1,2,3,4,5]) {
	// statements
}
</pre></div>
</div>
<p>Using a "list" of string values:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cfm source-cfm">
<pre class="de1">
loop index="i" list="1;2,3;4,5" delimiters=",;" {
	// statements
}
</pre></div>
</div>
<p>The above "list" example is only available in <a href="http://en.wikipedia.org/wiki/Railo" title="Railo">Railo</a>'s dialect of CFML.</p>
<h4><span class="mw-headline" id="Tag_syntax">Tag syntax</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=21" title="Edit section: Tag syntax">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>Simple index loop:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cfm source-cfm">
<pre class="de1">
<span class="sc5"><span class="sy0">&lt;</span><span class="kw1">cfloop</span> <span class="kw6">index</span><span class="sy0">=</span><span class="st0">"i"</span> <span class="kw6">from</span><span class="sy0">=</span><span class="st0">"1"</span> <span class="kw6">to</span><span class="sy0">=</span><span class="st0">"5"</span><span class="sy0">&gt;</span></span>
	<span class="sc0">&lt;!--- statements ---&gt;</span>
<span class="sc5"><span class="sy0">&lt;/</span><span class="kw1">cfloop</span><span class="sy0">&gt;</span></span>
</pre></div>
</div>
<p>Using an array:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cfm source-cfm">
<pre class="de1">
<span class="sc5"><span class="sy0">&lt;</span><span class="kw1">cfloop</span> <span class="kw6">index</span><span class="sy0">=</span><span class="st0">"i"</span> array<span class="sy0">=</span><span class="st0">"#[1,2,3,4,5]#"</span><span class="sy0">&gt;</span></span>
	<span class="sc0">&lt;!--- statements ---&gt;</span>
<span class="sc5"><span class="sy0">&lt;/</span><span class="kw1">cfloop</span><span class="sy0">&gt;</span></span>
</pre></div>
</div>
<p>Using a "list" of string values:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cfm source-cfm">
<pre class="de1">
<span class="sc5"><span class="sy0">&lt;</span><span class="kw1">cfloop</span> <span class="kw6">index</span><span class="sy0">=</span><span class="st0">"i"</span> <span class="kw6">list</span><span class="sy0">=</span><span class="st0">"1;2,3;4,5"</span> delimiters<span class="sy0">=</span><span class="st0">",;"</span><span class="sy0">&gt;</span></span>
	<span class="sc0">&lt;!--- statements ---&gt;</span>
<span class="sc5"><span class="sy0">&lt;/</span><span class="kw1">cfloop</span><span class="sy0">&gt;</span></span>
</pre></div>
</div>
<h3><span class="mw-headline" id="FORTRAN">FORTRAN</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=22" title="Edit section: FORTRAN">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>While using the keyword do instead of for, this type of <a href="FORTRAN.html" title="FORTRAN" class="mw-redirect">FORTRAN</a> do loop behaves similarly to the three argument for loop in other languages. This example behaves the same as the others, initializing the counter variable to 1, incrementing by 1 each iteration of the loop and stopping at five (inclusive).</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="fortran source-fortran">
<pre class="de1">
<span class="kw1">do</span> counter <span class="sy0">=</span> <span class="nu0">1</span>, <span class="nu0">5</span>, <span class="nu0">1</span>
  write<span class="br0">(</span><span class="sy0">*</span>, <span class="st0">'(i2)'</span><span class="br0">)</span> counter
<span class="kw1">end</span> <span class="kw1">do</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Haskell">Haskell</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=23" title="Edit section: Haskell">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The built-in imperative <i>forM_</i> maps a <a href="http://en.wikipedia.org/wiki/Monad_(functional_programming)" title="Monad (functional programming)">monadic</a> expression into a list, as</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="haskell source-haskell">
<pre class="de1">
forM<span class="sy0">_</span> <span class="br0">[</span><span class="nu0">1</span><span class="sy0">..</span><span class="nu0">5</span><span class="br0">]</span> <span class="sy0">$</span> \indx <span class="sy0">-&gt;</span> <span class="kw1">do</span> statements
</pre></div>
</div>
<p>or get each iteration result as a list in</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="haskell source-haskell">
<pre class="de1">
statements<span class="sy0">_</span>result<span class="sy0">_</span>list <span class="sy0">&lt;-</span> forM <span class="br0">[</span><span class="nu0">1</span><span class="sy0">..</span><span class="nu0">5</span><span class="br0">]</span> <span class="sy0">$</span> \indx <span class="sy0">-&gt;</span> <span class="kw1">do</span> statements
</pre></div>
</div>
<p>But, if you want to save the space of the [1..5] list, a more authentic <a href="http://en.wikipedia.org/wiki/Monad_(functional_programming)" title="Monad (functional programming)">monadic</a> <i>forLoop_</i> construction can be defined as</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="haskell source-haskell">
<pre class="de1">
<span class="kw1">import</span> Control<span class="sy0">.</span><span class="kw4">Monad</span> <span class="kw1">as</span> M
 
forLoopM<span class="sy0">_</span> <span class="sy0">::</span> <span class="kw4">Monad</span> m <span class="sy0">=&gt;</span> a <span class="sy0">-&gt;</span> <span class="br0">(</span>a <span class="sy0">-&gt;</span> <span class="kw4">Bool</span><span class="br0">)</span> <span class="sy0">-&gt;</span> <span class="br0">(</span>a <span class="sy0">-&gt;</span> a<span class="br0">)</span> <span class="sy0">-&gt;</span> <span class="br0">(</span>a <span class="sy0">-&gt;</span> m <span class="br0">(</span><span class="br0">)</span><span class="br0">)</span> <span class="sy0">-&gt;</span> m <span class="br0">(</span><span class="br0">)</span>
forLoopM<span class="sy0">_</span> indx prop incr f <span class="sy0">=</span> <span class="kw1">do</span>
        f indx
        M<span class="sy0">.</span>when <span class="br0">(</span>prop next<span class="br0">)</span> <span class="sy0">$</span> forLoopM<span class="sy0">_</span> next prop incr f
  <span class="kw1">where</span>      
    next <span class="sy0">=</span> incr indx
</pre></div>
</div>
<p>and used as:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="haskell source-haskell">
<pre class="de1">
  forLoopM<span class="sy0">_</span> <span class="br0">(</span><span class="nu0">0</span><span class="sy0">::</span><span class="kw4">Int</span><span class="br0">)</span> <span class="br0">(</span><span class="sy0">&lt;</span> len<span class="br0">)</span> <span class="br0">(</span><span class="sy0">+</span><span class="nu0">1</span><span class="br0">)</span> <span class="sy0">$</span> \indx <span class="sy0">-&gt;</span> <span class="kw1">do</span> <span class="co1">-- whatever with the index</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Java">Java</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=24" title="Edit section: Java">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="java source-java">
<pre class="de1">
<span class="kw1">for</span><span class="br0">(</span><span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> <span class="nu0">5</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span> <span class="br0">{</span>
    <span class="co1">//perform functions within the loop;</span>
    <span class="co1">//can use the statement 'break;' to exit early;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>For the extended for loop, see <a href="http://en.wikipedia.org/wiki/Foreach_loop#Java" title="Foreach loop">Foreach loop</a></p>
<h3><span class="mw-headline" id="JavaScript">JavaScript</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=25" title="Edit section: JavaScript">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>JavaScript supports C-style "three-expression" loops. The <code>break</code> and <code>continue</code> statements are supported inside loops.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="javascript source-javascript">
<pre class="de1">
<span class="kw1">for</span> <span class="br0">(</span><span class="kw1">var</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> <span class="nu0">5</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span> <span class="br0">{</span>
    <span class="co1">// ...</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>Alternatively, it is possible to iterate over all keys of an array.</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="javascript source-javascript">
<pre class="de1">
<span class="kw1">for</span> <span class="br0">(</span><span class="kw1">var</span> key <span class="kw1">in</span> array<span class="br0">)</span> <span class="br0">{</span>  <span class="co1">// also works for assoc. arrays</span>
  <span class="co1">// use array[key]</span>
  ...
<span class="br0">}</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Lua">Lua</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=26" title="Edit section: Lua">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="lua source-lua">
<pre class="de1">
<span class="kw1">for</span> i <span class="sy0">=</span> start<span class="sy0">,</span> stop<span class="sy0">,</span> interval <span class="kw1">do</span>
     <span class="co1">-- statements</span>
<span class="kw1">end</span>
</pre></div>
</div>
<p>So, this code</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="lua source-lua">
<pre class="de1">
<span class="kw1">for</span> i <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">,</span> <span class="nu0">5</span><span class="sy0">,</span> <span class="nu0">2</span> <span class="kw1">do</span>
     <span class="kw3">print</span><span class="br0">(</span>i<span class="br0">)</span>
<span class="kw1">end</span>
</pre></div>
</div>
<p>will print:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="lua source-lua">
<pre class="de1">
<span class="nu0">1</span> <span class="nu0">3</span> <span class="nu0">5</span>
</pre></div>
</div>
<p>For loops can also loop through a table using</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="lua source-lua">
<pre class="de1">
<span class="kw3">ipairs</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>to iterate numerically through arrays and</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="lua source-lua">
<pre class="de1">
<span class="kw3">pairs</span><span class="br0">(</span><span class="br0">)</span>
</pre></div>
</div>
<p>to iterate randomly through dictionaries.</p>
<p>Generic for-loop making use of <a href="http://en.wikipedia.org/wiki/Closure_(computer_science)" title="Closure (computer science)" class="mw-redirect">closures</a>:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="lua source-lua">
<pre class="de1">
<span class="kw1">for</span> name<span class="sy0">,</span> phone<span class="sy0">,</span> address <span class="kw2">in</span> contacts<span class="br0">(</span><span class="br0">)</span> <span class="kw1">do</span>
     <span class="co1">-- contacts() must be an iterator function</span>
<span class="kw1">end</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Mathematica">Mathematica</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=27" title="Edit section: Mathematica">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The construct corresponding to most other languages' for loop is called Do in Mathematica</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="ruby source-ruby">
<pre class="de1">
<span class="kw1">Do</span><span class="br0">[</span>f<span class="br0">[</span>x<span class="br0">]</span>, <span class="br0">{</span>x, <span class="nu0">0</span>, <span class="nu0">1</span>, <span class="nu0">0.1</span><span class="br0">}</span><span class="br0">]</span>
</pre></div>
</div>
<p>Mathematica also has a For construct that mimics the for loop of C-like languages</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="ruby source-ruby">
<pre class="de1">
<span class="kw1">For</span><span class="br0">[</span>x=<span class="nu0">0</span>, x <span class="sy0">&lt;</span>= <span class="nu0">1</span>, x <span class="sy0">+</span>= <span class="nu0">0.1</span>,
    f<span class="br0">[</span>x<span class="br0">]</span>
<span class="br0">]</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="MATLAB">MATLAB</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=28" title="Edit section: MATLAB">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="matlab source-matlab">
<pre class="de1">
<span class="kw1">for</span> <span class="kw2"><span class="re0">i</span></span> = <span class="nu0">1</span>:<span class="nu0">5</span> 
     -- statements
<span class="kw1">end</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Maxima_CAS">Maxima CAS</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=29" title="Edit section: Maxima CAS">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>In <a href="http://en.wikipedia.org/wiki/Maxima_CAS" title="Maxima CAS" class="mw-redirect">Maxima CAS</a> one can use also non integer values&#160;:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="lua source-lua">
<pre class="de1">
<span class="kw1">for</span> x<span class="sy0">:</span><span class="nu0">0.5</span> step <span class="nu0">0.1</span> thru <span class="nu0">0.9</span> <span class="kw1">do</span>
    <span class="sy0">/*</span> <span class="st0">"Do something with x"</span> <span class="sy0">*/</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Oberon-2.2C_Oberon-07.2C_or_Component_Pascal">Oberon-2, Oberon-07, or Component Pascal</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=30" title="Edit section: Oberon-2, Oberon-07, or Component Pascal">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="oberon2 source-oberon2">
<pre class="de1">
<span class="kw1">FOR</span> Counter <span class="sy0">:=</span> <span class="nu0">1</span> <span class="kw1">TO</span> <span class="nu0">5</span> <span class="kw1">DO</span>
  <span class="coMULTI">(* statement sequence *)</span>
<span class="kw1">END</span>
</pre></div>
</div>
<p>Note that in the original Oberon language the for loop was omitted in favor of the more general Oberon loop construct. The for loop was reintroduced in Oberon-2.</p>
<h3><span class="mw-headline" id="OCaml">OCaml</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=31" title="Edit section: OCaml">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>See expression syntax.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3"><span>[</span>3<span>]</span></a></sup></p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="ocaml source-ocaml">
<pre class="de1">
 <span class="co1">(* for_statement := "for" ident '='  expr  ( "to" ∣  "downto" ) expr "do" expr "done" *)</span>
 
<span class="kw1">for</span> i <span class="sy0">=</span> <span class="nu0">1</span> <span class="kw1">to</span> <span class="nu0">5</span> <span class="kw1">do</span>
    <span class="co1">(* statements *)</span>
  <span class="kw1">done</span> <span class="sy0">;;</span>
 
<span class="kw1">for</span> j <span class="sy0">=</span> <span class="nu0">5</span> <span class="kw1">downto</span> <span class="nu0">0</span> <span class="kw1">do</span>
    <span class="co1">(* statements *)</span>
  <span class="kw1">done</span> <span class="sy0">;;</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Pascal">Pascal</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=32" title="Edit section: Pascal">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="pascal source-pascal">
<pre class="de1">
<span class="kw1">for</span> Counter <span class="sy1">:</span><span class="sy3">=</span> <span class="nu0">1</span> <span class="kw1">to</span> <span class="nu0">5</span> <span class="kw1">do</span>
  <span class="coMULTI">(*statement*)</span><span class="sy1">;</span>
</pre></div>
</div>
<p>Decrementing (counting backwards) is using 'downto' keyword instead of 'to', as in:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="pascal source-pascal">
<pre class="de1">
<span class="kw1">for</span> Counter <span class="sy1">:</span><span class="sy3">=</span> <span class="nu0">5</span> <span class="kw1">downto</span> <span class="nu0">1</span> <span class="kw1">do</span>
  <span class="coMULTI">(*statement*)</span><span class="sy1">;</span>
</pre></div>
</div>
<p>The numeric-range for loop varies somewhat more.</p>
<h3><span class="mw-headline" id="Perl">Perl</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=33" title="Edit section: Perl">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="perl source-perl">
<pre class="de1">
<span class="kw1">for</span> <span class="br0">(</span><span class="re0">$counter</span> <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span> <span class="re0">$counter</span> <span class="sy0">&lt;=</span> <span class="nu0">5</span><span class="sy0">;</span> <span class="re0">$counter</span><span class="sy0">++</span><span class="br0">)</span> <span class="br0">{</span> <span class="co1"># implictly or predefined variable</span>
  <span class="co1"># statements;</span>
<span class="br0">}</span>
<span class="kw1">for</span> <span class="br0">(</span><span class="kw1">my</span> <span class="re0">$counter</span> <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span> <span class="re0">$counter</span> <span class="sy0">&lt;=</span> <span class="nu0">5</span><span class="sy0">;</span> <span class="re0">$counter</span><span class="sy0">++</span><span class="br0">)</span> <span class="br0">{</span> <span class="co1"># variable private to the loop</span>
  <span class="co1"># statements;</span>
<span class="br0">}</span>
<span class="kw1">for</span> <span class="br0">(</span><span class="nu0">1</span><span class="sy0">..</span><span class="nu0">5</span><span class="br0">)</span> <span class="br0">{</span> <span class="co1"># variable impicitly called $_; 1..5 creates a list of these 5 elements</span>
  <span class="co1"># statements;</span>
<span class="br0">}</span>
statement <span class="kw1">for</span> <span class="nu0">1</span><span class="sy0">..</span><span class="nu0">5</span><span class="sy0">;</span> <span class="co1"># almost same (only 1 statement) with natural language order</span>
<span class="kw1">for</span> <span class="kw1">my</span> <span class="re0">$counter</span> <span class="br0">(</span><span class="nu0">1</span><span class="sy0">..</span><span class="nu0">5</span><span class="br0">)</span> <span class="br0">{</span> <span class="co1"># variable private to the loop</span>
  <span class="co1"># statements;</span>
<span class="br0">}</span>
</pre></div>
</div>
<p>(Note that "There's more than one way to do it" is a Perl programming paradigm.)</p>
<h3><span class="mw-headline" id="PHP">PHP</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=34" title="Edit section: PHP">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="php source-php">
<pre class="de1">
<span class="kw1">for</span> <span class="br0">(</span><span class="re0">$i</span> <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> <span class="re0">$i</span> <span class="sy0">&lt;=</span><span class="nu0">5</span><span class="sy0">;</span> <span class="re0">$i</span><span class="sy0">++</span><span class="br0">)</span> <span class="br0">{</span>
<span class="kw1">for</span> <span class="br0">(</span><span class="re0">$j</span><span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> <span class="re0">$j</span><span class="sy0">&lt;=</span><span class="re0">$i</span><span class="sy0">;</span> <span class="re0">$j</span><span class="sy0">++</span><span class="br0">)</span>
<span class="br0">{</span>
 <span class="kw1">echo</span> ″<span class="sy0">*</span><span class="st0">";
}
echo "</span><span class="sy0">&lt;</span>br<span class="sy0">&gt;</span><span class="st0">";
}</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="PL.2FI">PL/I</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=35" title="Edit section: PL/I">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="pli source-pli">
<pre class="de1">
<span class="kw1">do</span> <span class="kw1">counter</span> <span class="sy0">=</span> <span class="nu0">1</span> <span class="kw1">to</span> <span class="nu0">5</span> <span class="kw1">by</span> <span class="nu0">1</span><span class="sy0">;</span> <span class="coMULTI">/* "by 1" is the default if not specified */</span>
  <span class="coMULTI">/*statements*/</span><span class="sy0">;</span>
  <span class="kw1">end</span><span class="sy0">;</span>
</pre></div>
</div>
<p>The <i>LEAVE</i> statement may be used to exit the loop. Loops can be labeled, and <i>leave</i> may leave a specific labeled loop in a group of nested loops. Some PL/I dialects include the <i>ITERATE</i> statement to terminate the current loop iteration and begin the next.</p>
<h3><span class="mw-headline" id="PostScript">PostScript</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=36" title="Edit section: PostScript">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>PostScript supports a very simple kind of for loop.</p>
<p>The repeat loop, written as <code>X { ... } repeat</code>, repeats the body exactly X times.<sup id="cite_ref-4" class="reference"><a href="#cite_note-4"><span>[</span>4<span>]</span></a></sup></p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="applescript source-applescript">
<pre class="de1">
<span class="nu0">5</span> <span class="br0">{</span> STATEMENTS <span class="br0">}</span> <span class="kw3">repeat</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Python">Python</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=37" title="Edit section: Python">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="python source-python">
<pre class="de1">
<span class="kw1">for</span> counter <span class="kw1">in</span> <span class="kw2">range</span><span class="br0">(</span><span class="nu0">1</span><span class="sy0">,</span> <span class="nu0">6</span><span class="br0">)</span>:  <span class="co1"># range(1, 6) gives values from 1 to 5 inclusive (but not 6)</span>
  <span class="co1"># statements</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="Ruby">Ruby</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=38" title="Edit section: Ruby">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="ruby source-ruby">
<pre class="de1">
<span class="kw1">for</span> counter <span class="kw1">in</span> <span class="nu0">1</span>..<span class="nu0">5</span>
  <span class="co1"># statements</span>
<span class="kw1">end</span>
 
<span class="nu0">5</span>.<span class="me1">times</span> <span class="kw1">do</span> <span class="sy0">|</span>counter<span class="sy0">|</span>  <span class="co1"># counter iterates from 0 to 4</span>
  <span class="co1"># statements</span>
<span class="kw1">end</span>
 
<span class="nu0">1</span>.<span class="me1">upto</span><span class="br0">(</span><span class="nu0">5</span><span class="br0">)</span> <span class="kw1">do</span> <span class="sy0">|</span>counter<span class="sy0">|</span>
  <span class="co1"># statements</span>
<span class="kw1">end</span>
</pre></div>
</div>
<p><a href="http://en.wikipedia.org/wiki/Ruby_programming_language" title="Ruby programming language" class="mw-redirect">Ruby</a> has several possible syntaxes, including the above samples.</p>
<h3><span class="mw-headline" id="Smalltalk">Smalltalk</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=39" title="Edit section: Smalltalk">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="smalltalk source-smalltalk">
<pre class="de1">
<span class="nu0">1</span> to: <span class="re5">5</span> do: <span class="br0">[</span> :<span class="re5">counter</span> | <span class="coMULTI">"statements"</span> <span class="br0">]</span>
</pre></div>
</div>
<p>Contrary to other languages, in <a href="Smalltalk.html" title="Smalltalk">Smalltalk</a> a for loop is not a <a href="http://en.wikipedia.org/wiki/Language_construct" title="Language construct">language construct</a> but defined in the class Number as a method with two parameters, the end value and a <a href="http://en.wikipedia.org/wiki/Closure_(computer_science)" title="Closure (computer science)" class="mw-redirect">closure</a>, using self as start value.</p>
<h2><span class="mw-headline" id="Timeline_of_the_for_loop_in_various_programming_languages">Timeline of the <i>for loop</i> in various programming languages</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=40" title="Edit section: Timeline of the for loop in various programming languages">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="1957:_FORTRAN">1957: FORTRAN</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=41" title="Edit section: 1957: FORTRAN">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Fortran's equivalent of the <code>for</code> loop is the <code>DO</code> loop. The syntax of Fortran's <code>DO</code> loop is:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="fortran source-fortran">
<pre class="de1">
         <span class="kw1">DO</span> label counter<span class="sy0">=</span>start, <span class="kw1">stop</span>, step
         statements
  label  statement
</pre></div>
</div>
<p>Where the step part may be omitted if the step is one. Example: (spaces are irrelevant in Fortran statements, thus SUM SQ is the same as SUMSQ)</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="fortran source-fortran">
<pre class="de1">
<span class="co1">! DO loop example</span>
       <span class="kw1">PROGRAM</span> MAIN
         SUM SQ <span class="sy0">=</span> <span class="nu0">0</span>
         <span class="kw1">DO</span> <span class="nu0">101</span> I <span class="sy0">=</span> <span class="nu0">1</span>, <span class="nu0">9999999</span>
           <span class="kw1">IF</span> <span class="br0">(</span>SUM SQ.<span class="me1">GT</span>.1000<span class="br0">)</span> <span class="kw1">GO</span> <span class="kw1">TO</span> <span class="nu0">109</span>
           SUM SQ <span class="sy0">=</span> SUM SQ <span class="sy0">+</span> I<span class="sy0">**</span><span class="nu0">2</span>
<span class="nu0">101</span>      <span class="kw1">CONTINUE</span>
<span class="nu0">109</span>      <span class="kw1">CONTINUE</span>
       <span class="kw1">END</span>
</pre></div>
</div>
<h3><span class="mw-headline" id="1958:_Algol">1958: Algol</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=42" title="Edit section: 1958: Algol">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><a href="ALGOL.html" title="ALGOL">Algol</a> was first formalised in the Algol58 report.</p>
<h3><span class="mw-headline" id="1960:_COBOL">1960: COBOL</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=43" title="Edit section: 1960: COBOL">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>COBOL was formalised in late 1959 and has had many elaborations. It uses the PERFORM verb which has many options, with the later addition of "structured" statements such as END-PERFORM. Ignoring the need for declaring and initialising variables, the equivalent of a <i>for</i>-loop would be</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cobol source-cobol">
<pre class="de1">
<span class="kw2">PERFORM</span> <span class="kw2">VARYING</span> I <span class="kw3">FROM</span> <span class="nu0">1</span> <span class="kw3">BY</span> <span class="nu0">1</span> <span class="kw2">UNTIL</span> I &gt; <span class="nu0">1000</span>
   <span class="kw2">ADD</span> I**<span class="nu0">2</span> <span class="kw2">to</span> SumSQ<span class="sy0">.</span>
END-<span class="kw2">PERFORM</span>
</pre></div>
</div>
<p>If the PERFORM verb has the optional clause TEST AFTER, the resulting loop is slightly different: the loop body is executed at least once, before any test.</p>
<h3><span class="mw-headline" id="1968:_Algol_68">1968: Algol 68</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=44" title="Edit section: 1968: Algol 68">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><a href="http://en.wikipedia.org/wiki/Algol68" title="Algol68" class="mw-redirect">Algol68</a> has what was considered <i>the</i> universal loop, the full syntax is:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="algol68 source-algol68">
<pre class="de1">
<span class="kw2">FOR</span> i <span class="kw2">FROM</span> 1 <span class="kw2">BY</span> 2 <span class="kw2">TO</span> 3 <span class="kw2">WHILE</span> i<span class="sy1">≠</span>4 <span class="kw2">DO</span> <span class="sy1">~</span> <span class="kw2">OD</span>
</pre></div>
</div>
<p>Further, the single iteration range could be replaced by a list of such ranges. There are several unusual aspects of the construct</p>
<ul>
<li>only the "<b>do</b> ~ <b>od</b>" portion was compulsory, in which case the loop will iterate indefinitely.</li>
<li>thus the clause "<b>to</b> 100 <b>do</b> ~ <b>od</b>", will iterate exactly 100 times.</li>
<li>the "<b>while</b>" <i>syntactic element</i> allowed a programmer to break from a "<b>for</b>" loop early, as in:</li>
</ul>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="algol68 source-algol68">
<pre class="de1">
<span class="kw3">INT</span> sum sq<span class="sy1">:=</span>0<span class="sy1">;</span>
<span class="kw2">FOR</span> i
 <span class="kw2">WHILE</span>
  <span class="kw22">print</span><span class="br0">(</span><span class="br0">(</span><span class="st0">"So far:"</span><span class="sy1">,</span>i<span class="sy1">,</span> <span class="kw22">new line</span><span class="br0">)</span><span class="br0">)</span><span class="sy1">;</span> <span class="sy1">/*</span>Interposed for tracing purposes.<span class="sy1">*/</span>
  sum sq <span class="sy1">≠</span> 70<span class="sy1">↑</span>2                    <span class="sy1">/*</span>This is the test for the <span class="kw2">WHILE</span><span class="sy1">*/</span>
<span class="kw2">DO</span>
  sum sq <span class="sy1">+:=</span> i<span class="sy1">↑</span>2
<span class="kw2">OD</span>
</pre></div>
</div>
<p>Subsequent <i>extensions</i> to the standard Algol68 allowed the "<b>to</b>" syntactic element to be replaced with "<b>upto</b>" and "<b>downto</b>" to achieve a small optimization. The same compilers also incorporated:</p>
<ul>
<li><b>until</b> - for late loop termination.</li>
<li><b>foreach</b> - for working on arrays in <a href="Parallel_computing.html" title="Parallel computing">parallel</a>.</li>
</ul>
<h3><span class="mw-headline" id="1983:_Ada_83_and_above">1983: Ada 83 and above</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=45" title="Edit section: 1983: Ada 83 and above">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="ada source-ada">
<pre class="de1">
<span class="kw3">procedure</span> Main <span class="kw1">is</span>
  Sum_Sq : Integer := <span class="nu0">0</span>;
<span class="kw1">begin</span>
  <span class="kw1">for</span> I <span class="kw3">in</span> <span class="nu0">1</span> .. <span class="nu0">9999999</span> <span class="kw1">loop</span> 
    <span class="kw1">if</span> Sum_Sq &lt;= <span class="nu0">1000</span> <span class="kw1">then</span>
      Sum_Sq := Sum_Sq + I**<span class="nu0">2</span>
    <span class="kw1">end</span> <span class="kw1">if</span>;
  <span class="kw1">end</span> <span class="kw1">loop</span>;
<span class="kw1">end</span>;
</pre></div>
</div>
<h2><span class="mw-headline" id="Implementation_in_Interpreted_Programming_Languages">Implementation in Interpreted Programming Languages</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=46" title="Edit section: Implementation in Interpreted Programming Languages">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>In <a href="Interpreted_language.html" title="Interpreted language">interpreted programming languages</a>, for loops can be implemented in many ways. Oftentimes, the for loops are directly translated to <a href="Assembly_language.html" title="Assembly language">assembly</a>-like compare instructions and <a href="Goto.html" title="Goto">conditional jump</a> instructions. However, this is not always so. In some interpreted programming languages, for loops are simply translated to while loops.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5"><span>[</span>5<span>]</span></a></sup> For instance, take the following Mint/Horchata code:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="text source-text">
<pre class="de1">
for i = 0; i &lt; 100; i++
    print i
end
 
for each item of sequence
    print item
end
 
/* 'Translated traditional for loop' */
i = 0
while i &lt; 100
    print i
    i++
end
 
/* 'Translated for each loop' */
SYSTEM_VAR_0000 = 0
while SYSTEM_VAR_0000 &lt; sequence.length()
    item = sequence[SYSTEM_VAR_0000]
    print item
    SYSTEM_VAR_0000++
end
</pre></div>
</div>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=47" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="Do_while_loop.html" title="Do while loop">Do while loop</a></li>
<li><a href="http://en.wikipedia.org/wiki/Foreach" title="Foreach" class="mw-redirect">Foreach</a></li>
<li><a href="http://en.wikipedia.org/wiki/Loop_counter" title="Loop counter">Loop counter</a></li>
<li><a href="While_loop.html" title="While loop">While loop</a></li>
</ul>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=48" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://www.learncpp.com/cpp-tutorial/57-for-statements/">"For loops in C++"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFor+loop&amp;rft.btitle=For+loops+in+C%2B%2B&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.learncpp.com%2Fcpp-tutorial%2F57-for-statements%2F&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://msdn.microsoft.com/en-us/library/6t66728h.aspx">"Compiler Warning (level 4) C4127"</a>. Microsoft<span class="reference-accessdate">. Retrieved 29 June 2011</span>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFor+loop&amp;rft.btitle=Compiler+Warning+%28level+4%29+C4127&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fmsdn.microsoft.com%2Fen-us%2Flibrary%2F6t66728h.aspx&amp;rft.pub=Microsoft&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://caml.inria.fr/pub/docs/manual-ocaml-4.00/expr.html">OCaml expression syntax</a></span></li>
<li id="cite_note-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-4">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="http://pscript.dubmun.com/tutorial4.html">"PostScript Tutorial - Loops"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFor+loop&amp;rft.btitle=PostScript+Tutorial+-+Loops&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fpscript.dubmun.com%2Ftutorial4.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text"><span class="citation web"><a rel="nofollow" class="external text" href="https://piazza.com/class#fall2012/cs61b/1575">"Computer Science 61B: Data Structures and Algorithms in Java 6 - For Loops"</a>.</span><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFor+loop&amp;rft.btitle=Computer+Science+61B%3A+Data+Structures+and+Algorithms+in+Java+6+-+For+Loops&amp;rft.genre=book&amp;rft_id=https%3A%2F%2Fpiazza.com%2Fclass%23fall2012%2Fcs61b%2F1575&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
</ol>
</div>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit&amp;section=49" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table class="metadata mbox-small plainlinks" style="border:1px solid #aaa; background-color:#f9f9f9;">
<tr>
<td class="mbox-image"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/60px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/80px-Wikibooks-logo-en-noslogan.svg.png 2x" /></td>
<td class="mbox-text plainlist" style="">The Wikibook <i><a href="http://en.wikibooks.org/wiki/Ada_Programming" class="extiw" title="wikibooks:Ada Programming">Ada_Programming</a></i> has a page on the topic of: <i><b><a href="http://en.wikibooks.org/wiki/Ada_Programming/Control" class="extiw" title="wikibooks:Ada Programming/Control">Control</a></b></i></td>
</tr>
</table>
<ul>
<li><a href="http://www.wikia.com/wiki/c:Code:For_loop" class="extiw" title="wikia:Code:For loop">For loop</a> implementation in different languages at <a href="http://www.wikia.com/wiki/c:Code" class="extiw" title="wikia:Code">Wikia:Code</a></li>
</ul>


<!-- 
NewPP limit report
Parsed by mw1173
CPU time usage: 1.364 seconds
Real time usage: 1.420 seconds
Preprocessor visited node count: 1296/1000000
Preprocessor generated node count: 5683/1500000
Post‐expand include size: 7975/2048000 bytes
Template argument size: 1269/2048000 bytes
Highest expansion depth: 11/40
Expensive parser function count: 1/500
Lua time usage: 0.041/10.000 seconds
Lua memory usage: 1.55 MB/50 MB
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:468924-0!*!0!!en!4!* and timestamp 20140325000053
 -->
<noscript><img src="http://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>								<div class="printfooter">
				Retrieved from "<a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;oldid=597520676">http://en.wikipedia.org/w/index.php?title=For_loop&amp;oldid=597520676</a>"				</div>
												<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="http://en.wikipedia.org/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_example_Fortran_code" title="Category:Articles with example Fortran code">Articles with example Fortran code</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Iteration_in_programming" title="Category:Iteration in programming">Iteration in programming</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="http://en.wikipedia.org/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_unsourced_statements_from_November_2013" title="Category:Articles with unsourced statements from November 2013">Articles with unsourced statements from November 2013</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_example_Ada_code" title="Category:Articles with example Ada code">Articles with example Ada code</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_example_ALGOL_68_code" title="Category:Articles with example ALGOL 68 code">Articles with example ALGOL 68 code</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_example_C_code" title="Category:Articles with example C code">Articles with example C code</a></li><li><a href="http://en.wikipedia.org/wiki/Category:Articles_with_example_Perl_code" title="Category:Articles with example Perl code">Articles with example Perl code</a></li></ul></div></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=For+loop&amp;type=signup">Create account</a></li><li id="pt-login"><a href="http://en.wikipedia.org/w/index.php?title=Special:UserLogin&amp;returnto=For+loop" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="For_loop.html"  title="View the content page [c]" accesskey="c">Article</a></span></li>
					<li  id="ca-talk"><span><a href="http://en.wikipedia.org/wiki/Talk:For_loop"  title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="For_loop.html" >Read</a></span></li>
					<li id="ca-edit"><span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=edit"  title="You can edit this page. &#10;Please review your changes before saving. [e]" accesskey="e">Edit</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=history"  title="Past versions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="http://en.wikipedia.org/w/index.php" id="searchform">
					<div id="simpleSearch">
					<input type="search" name="search" placeholder="Search" title="Search Wikipedia [f]" accesskey="f" id="searchInput" /><input type="hidden" value="Special:Search" name="title" /><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton" /><input type="submit" name="go" value="Go" title="Go to a page with this exact name if one exists" id="searchButton" class="searchButton" />		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(http://upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="Main_Page.html"  title="Visit the main page"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="Main_Page.html" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-contents"><a href="http://en.wikipedia.org/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
			<li id="n-featuredcontent"><a href="http://en.wikipedia.org/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li>
			<li id="n-currentevents"><a href="http://en.wikipedia.org/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
			<li id="n-randompage"><a href="http://en.wikipedia.org/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			<li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li>
			<li id="n-shoplink"><a href="http://shop.wikimedia.org/" title="Visit the Wikimedia Shop">Wikimedia Shop</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
	<h3 id='p-interaction-label'>Interaction</h3>
	<div class="body">
		<ul>
			<li id="n-help"><a href="http://en.wikipedia.org/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			<li id="n-aboutsite"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
			<li id="n-portal"><a href="http://en.wikipedia.org/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
			<li id="n-recentchanges"><a href="http://en.wikipedia.org/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-contactpage"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact page</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="http://en.wikipedia.org/wiki/Special:WhatLinksHere/For_loop" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="http://en.wikipedia.org/wiki/Special:RecentChangesLinked/For_loop" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-upload"><a href="http://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li>
			<li id="t-specialpages"><a href="http://en.wikipedia.org/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;oldid=597520676" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;action=info">Page information</a></li>
			<li id="t-wikibase"><a href="http://www.wikidata.org/wiki/Q838119" title="Link to connected data repository item [g]" accesskey="g">Data item</a></li>
<li id="t-cite"><a href="http://en.wikipedia.org/w/index.php?title=Special:Cite&amp;page=For_loop&amp;id=597520676" title="Information on how to cite this page">Cite this page</a></li>		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
	<h3 id='p-coll-print_export-label'>Print/export</h3>
	<div class="body">
		<ul>
			<li id="coll-create_a_book"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=For+loop">Create a book</a></li>
			<li id="coll-download-as-rl"><a href="http://en.wikipedia.org/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=For+loop&amp;oldid=597520676&amp;writer=rl">Download as PDF</a></li>
			<li id="t-print"><a href="http://en.wikipedia.org/w/index.php?title=For_loop&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
	<h3 id='p-lang-label'>Languages</h3>
	<div class="body">
		<ul>
			<li class="interlanguage-link interwiki-ca"><a href="http://ca.wikipedia.org/wiki/Bucle_For" title="Bucle For – Catalan" lang="ca" hreflang="ca">Català</a></li>
			<li class="interlanguage-link interwiki-cs"><a href="http://cs.wikipedia.org/wiki/Cyklus_for" title="Cyklus for – Czech" lang="cs" hreflang="cs">Čeština</a></li>
			<li class="interlanguage-link interwiki-da"><a href="http://da.wikipedia.org/wiki/For-løkke" title="For-løkke – Danish" lang="da" hreflang="da">Dansk</a></li>
			<li class="interlanguage-link interwiki-de"><a href="http://de.wikipedia.org/wiki/For-Schleife" title="For-Schleife – German" lang="de" hreflang="de">Deutsch</a></li>
			<li class="interlanguage-link interwiki-es"><a href="http://es.wikipedia.org/wiki/Bucle_for" title="Bucle for – Spanish" lang="es" hreflang="es">Español</a></li>
			<li class="interlanguage-link interwiki-fa"><a href="http://fa.wikipedia.org/wiki/حلقه_فور" title="حلقه فور – Persian" lang="fa" hreflang="fa">فارسی</a></li>
			<li class="interlanguage-link interwiki-fr"><a href="http://fr.wikipedia.org/wiki/Boucle_for" title="Boucle for – French" lang="fr" hreflang="fr">Français</a></li>
			<li class="interlanguage-link interwiki-ko"><a href="http://ko.wikipedia.org/wiki/For_루프" title="For 루프 – Korean" lang="ko" hreflang="ko">한국어</a></li>
			<li class="interlanguage-link interwiki-hr"><a href="http://hr.wikipedia.org/wiki/For_petlja" title="For petlja – Croatian" lang="hr" hreflang="hr">Hrvatski</a></li>
			<li class="interlanguage-link interwiki-it"><a href="http://it.wikipedia.org/wiki/Ciclo_for" title="Ciclo for – Italian" lang="it" hreflang="it">Italiano</a></li>
			<li class="interlanguage-link interwiki-ja"><a href="http://ja.wikipedia.org/wiki/For文" title="For文 – Japanese" lang="ja" hreflang="ja">日本語</a></li>
			<li class="interlanguage-link interwiki-zh"><a href="http://zh.wikipedia.org/wiki/For迴圈" title="For迴圈 – Chinese" lang="zh" hreflang="zh">中文</a></li>
			<li class="uls-p-lang-dummy"><a href="#"></a></li>
			<li class="wbc-editpage"><a href="http://www.wikidata.org/wiki/Q838119#sitelinks-wikipedia" title="Edit interlanguage links">Edit links</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 28 February 2014 at 13:41.<br /></li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="http://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="http://wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="http://wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy.</a> <br/>
Wikipedia® is a registered trademark of the <a href="http://www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="http://wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="http://en.wikipedia.org/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="http://en.wikipedia.org/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="http://en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a class="external" href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-mobileview"><a href="http://en.m.wikipedia.org/wiki/For_loop" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<a href="http://wikimediafoundation.org/"><img src="http://bits.wikimedia.org/images/wikimedia-button.png" width="88" height="31" alt="Wikimedia Foundation"/></a>
					</li>
					<li id="footer-poweredbyico">
						<a href="http://www.mediawiki.org/"><img src="http://bits.wikimedia.org/static-1.23wmf19/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["ext.cite","mobile.desktop","mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.DRN-wizard","ext.gadget.charinsert","mw.MwEmbedSupport.style","ext.navigationTiming","schema.UniversalLanguageSelector","ext.uls.eventlogger","ext.uls.interlanguage","skins.vector.collapsibleNav"],null,true);
}</script>
<script src="http://bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served by mw1174 in 0.328 secs. -->
	</body>

<!-- Mirrored from en.wikipedia.org/wiki/For_loop by HTTrack Website Copier/3.x [XR&CO'2013], Sat, 29 Mar 2014 23:57:06 GMT -->
</html>
